cv_MatI numpy float32: 
[[ 62  61  62 ...  82  79  88]
 [ 62  63  64 ...  80  81  83]
 [ 61  63  63 ...  81  80 102]
 ...
 [ 62  62  62 ...  76  77  79]
 [ 62  62  64 ...  77  80  75]
 [ 63  63  63 ...  88  85  89]]
MatI: 
tensor([[ 62.,  61.,  62.,  ...,  82.,  79.,  88.],
        [ 62.,  63.,  64.,  ...,  80.,  81.,  83.],
        [ 61.,  63.,  63.,  ...,  81.,  80., 102.],
        ...,
        [ 62.,  62.,  62.,  ...,  76.,  77.,  79.],
        [ 62.,  62.,  64.,  ...,  77.,  80.,  75.],
        [ 63.,  63.,  63.,  ...,  88.,  85.,  89.]])
MatI[0:10,35:45]: 
tensor([[ 65.,  65.,  64.,  65.,  65.,  60.,  64.,  66.,  67.,  68.],
        [ 65.,  65.,  65.,  65.,  66.,  65.,  65.,  64.,  67.,  68.],
        [ 64.,  67.,  68.,  64., 125., 101., 125.,   1.,  99., 115.],
        [ 65.,  66.,  64.,  68.,  66., 106.,   1.,  65., 105.,  58.],
        [ 65.,  66.,  65.,  67.,  66.,  65.,  68.,  66.,  65.,  67.],
        [ 66.,  67.,  68.,  66., 125., 100., 115.,  65.,  98., 114.],
        [ 66.,  67.,  66.,  67.,  64., 105.,  66.,  65.,  66.,  67.],
        [ 65.,  66.,  65.,  65.,  56.,  50.,  48.,  54.,  50.,  49.],
        [ 47.,  75.,  77., 118., 125.,  77., 115., 124.,  76., 114.],
        [ 49.,  49.,  74.,  69.,  75.,  75.,  73.,  76.,  77.,  75.]]) 

debug:
MatD.shape: torch.Size([37, 123]) 
has nan? False 
MatD: 
tensor([[0.0161, 0.0164, 0.0161,  ..., 0.0122, 0.0127, 0.0114],
        [0.0161, 0.0159, 0.0156,  ..., 0.0125, 0.0123, 0.0120],
        [0.0164, 0.0159, 0.0159,  ..., 0.0123, 0.0125, 0.0098],
        ...,
        [0.0161, 0.0161, 0.0161,  ..., 0.0132, 0.0130, 0.0127],
        [0.0161, 0.0161, 0.0156,  ..., 0.0130, 0.0125, 0.0133],
        [0.0159, 0.0159, 0.0159,  ..., 0.0114, 0.0118, 0.0112]]) 

MatU.shape: torch.Size([37, 123, 2]) 
has nan? False 
MatUx: 
tensor([[ 2.6441e-04, -2.6441e-04, -2.5601e-04,  ...,  4.6311e-04,
         -1.2946e-03, -1.2946e-03],
        [-2.5601e-04, -2.4802e-04,  2.4802e-04,  ..., -1.5432e-04,
         -2.9749e-04, -2.9749e-04],
        [-5.2042e-04,  1.0000e-10,  5.2043e-04,  ...,  1.5432e-04,
         -2.6961e-03, -2.6961e-03],
        ...,
        [ 1.0000e-10,  1.0000e-10, -2.5601e-04,  ..., -1.7088e-04,
         -3.2878e-04, -3.2878e-04],
        [ 1.0000e-10, -5.0403e-04,  5.0403e-04,  ..., -4.8701e-04,
          8.3333e-04,  8.3333e-04],
        [ 1.0000e-10,  1.0000e-10,  2.5602e-04,  ...,  4.0107e-04,
         -5.2875e-04, -5.2875e-04]]) 




MatD[0:10,35:45]: 
tensor([[0.0154, 0.0154, 0.0156, 0.0154, 0.0154, 0.0167, 0.0156, 0.0152, 0.0149,
         0.0147],
        [0.0154, 0.0154, 0.0154, 0.0154, 0.0152, 0.0154, 0.0154, 0.0156, 0.0149,
         0.0147],
        [0.0156, 0.0149, 0.0147, 0.0156, 0.0080, 0.0099, 0.0080, 1.0000, 0.0101,
         0.0087],
        [0.0154, 0.0152, 0.0156, 0.0147, 0.0152, 0.0094, 1.0000, 0.0154, 0.0095,
         0.0172],
        [0.0154, 0.0152, 0.0154, 0.0149, 0.0152, 0.0154, 0.0147, 0.0152, 0.0154,
         0.0149],
        [0.0152, 0.0149, 0.0147, 0.0152, 0.0080, 0.0100, 0.0087, 0.0154, 0.0102,
         0.0088],
        [0.0152, 0.0149, 0.0152, 0.0149, 0.0156, 0.0095, 0.0152, 0.0154, 0.0152,
         0.0149],
        [0.0154, 0.0152, 0.0154, 0.0154, 0.0179, 0.0200, 0.0208, 0.0185, 0.0200,
         0.0204],
        [0.0213, 0.0133, 0.0130, 0.0085, 0.0080, 0.0130, 0.0087, 0.0081, 0.0132,
         0.0088],
        [0.0204, 0.0204, 0.0135, 0.0145, 0.0133, 0.0133, 0.0137, 0.0132, 0.0130,
         0.0133]]) 

MatU[0:10,35:45]: 
tensor([[[ 1.0000e-10,  1.0000e-10],
         [ 2.4038e-04,  1.0000e-10],
         [-2.4038e-04, -2.4038e-04],
         [ 1.0000e-10,  1.0000e-10],
         [ 1.2821e-03, -2.3310e-04],
         [-1.0417e-03, -1.2821e-03],
         [-4.7348e-04, -2.4038e-04],
         [-2.2614e-04,  4.7348e-04],
         [-2.1949e-04,  1.0000e-10],
         [ 9.8529e-01,  1.0000e-10]],

        [[ 1.0000e-10,  2.4038e-04],
         [ 1.0000e-10, -4.5924e-04],
         [ 1.0000e-10, -6.7873e-04],
         [-2.3310e-04,  2.4038e-04],
         [ 2.3310e-04, -7.1515e-03],
         [ 1.0000e-10, -5.4836e-03],
         [ 2.4038e-04, -7.3846e-03],
         [-6.9963e-04,  9.8438e-01],
         [-2.1949e-04, -4.8244e-03],
         [ 9.8529e-01, -6.0102e-03]],

        [[-6.9963e-04, -2.4038e-04],
         [-2.1949e-04,  2.2614e-04],
         [ 9.1912e-04,  9.1912e-04],
         [-7.6250e-03, -9.1912e-04],
         [ 1.9010e-03,  7.1515e-03],
         [-1.9010e-03, -4.6703e-04],
         [ 9.9200e-01,  9.9200e-01],
         [-9.8990e-01, -9.8462e-01],
         [-1.4054e-03, -5.7720e-04],
         [ 6.6890e-03,  8.5457e-03]],

        [[-2.3310e-04,  1.0000e-10],
         [ 4.7348e-04,  1.0000e-10],
         [-9.1912e-04, -2.4038e-04],
         [ 4.4563e-04,  2.1949e-04],
         [-5.7176e-03,  1.0000e-10],
         [ 9.9057e-01,  5.9507e-03],
         [-9.8462e-01, -9.8529e-01],
         [-5.8608e-03, -2.3310e-04],
         [ 7.7176e-03,  5.8608e-03],
         [-9.3049e-03, -2.3160e-03]],

        [[-2.3310e-04, -2.3310e-04],
         [ 2.3310e-04, -2.2614e-04],
         [-4.5924e-04, -6.7873e-04],
         [ 2.2614e-04,  2.2614e-04],
         [ 2.3310e-04, -7.1515e-03],
         [-6.7873e-04, -5.3846e-03],
         [ 4.4563e-04, -6.0102e-03],
         [ 2.3310e-04,  2.3310e-04],
         [-4.5924e-04, -5.1805e-03],
         [ 1.0000e-10, -6.1534e-03]],

        [[-2.2614e-04,  1.0000e-10],
         [-2.1949e-04,  1.0000e-10],
         [ 4.4563e-04,  4.4563e-04],
         [-7.1515e-03, -2.2614e-04],
         [ 2.0000e-03,  7.6250e-03],
         [-1.3043e-03, -4.7619e-04],
         [ 6.6890e-03,  6.4559e-03],
         [-5.1805e-03,  1.0000e-10],
         [-1.4322e-03,  4.9474e-03],
         [ 4.2151e-03,  6.1534e-03]],

        [[-2.2614e-04,  2.3310e-04],
         [ 2.2614e-04,  2.2614e-04],
         [-2.2614e-04,  2.3310e-04],
         [ 6.9963e-04,  4.5924e-04],
         [-6.1012e-03,  2.2321e-03],
         [ 5.6277e-03,  1.0476e-02],
         [ 2.3310e-04,  5.6818e-03],
         [-2.3310e-04,  3.1339e-03],
         [-2.2614e-04,  4.8485e-03],
         [ 6.9963e-04,  5.4828e-03]],

        [[-2.3310e-04,  5.8920e-03],
         [ 2.3310e-04, -1.8182e-03],
         [ 1.0000e-10, -2.3976e-03],
         [ 2.4725e-03, -6.9100e-03],
         [ 2.1429e-03, -9.8571e-03],
         [ 8.3333e-04, -7.0130e-03],
         [-2.3148e-03, -1.2138e-02],
         [ 1.4815e-03, -1.0454e-02],
         [ 4.0816e-04, -6.8421e-03],
         [-1.8896e-03, -1.1636e-02]],

        [[-7.9433e-03, -8.6843e-04],
         [-3.4632e-04,  7.0748e-03],
         [-4.5124e-03,  5.2650e-04],
         [-4.7458e-04,  6.0182e-03],
         [ 4.9870e-03,  5.3333e-03],
         [-4.2914e-03,  3.4632e-04],
         [-6.3114e-04,  5.0030e-03],
         [ 5.0934e-03,  5.0934e-03],
         [-4.3860e-03, -1.7088e-04],
         [-7.0741e-04,  4.5614e-03]],

        [[ 1.0000e-10,  1.3310e-03],
         [-6.8946e-03,  8.6843e-04],
         [ 9.7924e-04, -5.2650e-04],
         [-1.1594e-03, -9.7924e-04],
         [ 1.0000e-10, -5.1282e-04],
         [ 3.6530e-04, -9.8765e-04],
         [-5.4074e-04, -1.8512e-04],
         [-1.7088e-04, -4.9967e-04],
         [ 3.4632e-04,  9.0188e-04],
         [-3.4632e-04,  1.8018e-04]]]) 

test_counter in loss_omega_mat(): 455
test_counter in loss_omega_mat(): 910
test_counter in loss_omega_mat(): 1365
test_counter in loss_omega_mat(): 1820
test_counter in loss_omega_mat(): 2275
test_counter in loss_omega_mat(): 2730
test_counter in loss_omega_mat(): 3185
mat_omega_topk has nan? False 

mat_duij has nan? False 

mat_uij has nan? False 

mat_omega_topk: 
tensor([[[0.9460, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         ...,
         [0.9459, 0.9458, 0.9454,  ..., 0.8940, 0.8006, 0.8002],
         [0.9459, 0.9458, 0.9455,  ..., 0.8939, 0.8006, 0.8003],
         [0.9459, 0.9458, 0.9455,  ..., 0.8943, 0.8006, 0.8006]],

        [[0.9460, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         ...,
         [0.9458, 0.9456, 0.9455,  ..., 0.8939, 0.8006, 0.8001],
         [0.9458, 0.9456, 0.9454,  ..., 0.8935, 0.8006, 0.8001],
         [0.9458, 0.9458, 0.9454,  ..., 0.8939, 0.8007, 0.8004]],

        [[0.9459, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         ...,
         [0.9456, 0.9456, 0.9456,  ..., 0.8935, 0.8002, 0.8002],
         [0.9456, 0.9455, 0.9452,  ..., 0.8930, 0.8002, 0.7997],
         [0.9458, 0.9456, 0.9452,  ..., 0.8932, 0.8005, 0.8001]],

        ...,

        [[0.9447, 0.9432, 0.9421,  ..., 0.8915, 0.7985, 0.7979],
         [0.9422, 0.9389, 0.9355,  ..., 0.8887, 0.7971, 0.7969],
         [0.9420, 0.9356, 0.9355,  ..., 0.8864, 0.7966, 0.7966],
         ...,
         [0.9459, 0.9459, 0.9459,  ..., 0.8947, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9458,  ..., 0.8939, 0.8007, 0.8007],
         [0.9458, 0.9456, 0.9450,  ..., 0.8935, 0.8004, 0.8003]],

        [[0.9444, 0.9421, 0.9415,  ..., 0.8887, 0.7993, 0.7981],
         [0.9371, 0.9341, 0.9335,  ..., 0.8854, 0.7946, 0.7941],
         [0.9331, 0.9331, 0.9306,  ..., 0.8834, 0.7938, 0.7935],
         ...,
         [0.9459, 0.9459, 0.9459,  ..., 0.8947, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9459,  ..., 0.8940, 0.8007, 0.8006],
         [0.9458, 0.9457, 0.9453,  ..., 0.8938, 0.8004, 0.8003]],

        [[0.9438, 0.9435, 0.9415,  ..., 0.8881, 0.7995, 0.7976],
         [0.9364, 0.9362, 0.9335,  ..., 0.8834, 0.7941, 0.7921],
         [0.9355, 0.9331, 0.9277,  ..., 0.8817, 0.7921, 0.7915],
         ...,
         [0.9459, 0.9459, 0.9458,  ..., 0.8944, 0.8007, 0.8007],
         [0.9459, 0.9458, 0.9457,  ..., 0.8938, 0.8006, 0.8006],
         [0.9458, 0.9457, 0.9455,  ..., 0.8937, 0.8003, 0.7998]]],
       grad_fn=<SliceBackward>) 

mat_duij: 
tensor([[[1.0000e-20, 1.0000e-20, 1.0000e-20,  ..., 4.0000e-20,
          4.0000e-20, 4.0000e-20],
         [1.0000e-20, 1.0000e-20, 1.0000e-20,  ..., 4.0000e-20,
          6.5544e-08, 6.1512e-08],
         [6.5544e-08, 6.5544e-08, 6.5544e-08,  ..., 6.5544e-08,
          4.0000e-20, 2.6217e-07],
         ...,
         [1.6585e-07, 4.9122e-07, 6.5282e-07,  ..., 3.1451e-07,
          6.6265e-08, 1.9554e-08],
         [3.6224e-06, 8.8138e-07, 8.8138e-07,  ..., 5.6621e-08,
          1.3589e-05, 6.5768e-08],
         [6.5260e-07, 2.2547e-07, 2.2547e-07,  ..., 2.1528e-07,
          1.6452e-06, 2.3720e-08]],

        [[1.0000e-20, 1.0000e-20, 1.0000e-20,  ..., 4.0000e-20,
          6.5544e-08, 4.0000e-20],
         [6.5544e-08, 7.6233e-21, 7.6233e-21,  ..., 2.6217e-07,
          2.6217e-07, 2.6217e-07],
         [7.6233e-21, 2.6217e-07, 2.6217e-07,  ..., 6.5544e-08,
          2.6217e-07, 6.5544e-08],
         ...,
         [3.3333e-07, 4.6862e-07, 6.2515e-06,  ..., 2.6612e-10,
          7.4145e-07, 1.0367e-05],
         [4.7690e-08, 2.1225e-06, 2.1225e-06,  ..., 4.5857e-06,
          1.9634e-06, 3.3157e-06],
         [2.3720e-08, 1.0273e-07, 1.0273e-07,  ..., 1.2913e-06,
          4.1091e-07, 2.2547e-07]],

        [[6.5544e-08, 6.5544e-08, 1.0000e-20,  ..., 6.5544e-08,
          2.6217e-07, 4.0000e-20],
         [2.6217e-07, 7.6233e-21, 2.6217e-07,  ..., 6.5544e-08,
          5.8989e-07, 5.8989e-07],
         [1.0000e-20, 6.5544e-08, 6.5544e-08,  ..., 0.0000e+00,
          4.0000e-20, 4.0000e-20],
         ...,
         [1.1117e-06, 6.9137e-07, 2.7732e-06,  ..., 3.0238e-06,
          6.7745e-06, 1.6086e-07],
         [4.5857e-06, 5.2633e-06, 5.2633e-06,  ..., 1.1213e-05,
          9.2682e-06, 1.7442e-05],
         [1.0000e-20, 1.0000e-20, 1.0000e-20,  ..., 5.2633e-06,
          2.7722e-08, 4.0000e-20]],

        ...,

        [[2.6774e-06, 6.9913e-08, 2.6774e-06,  ..., 1.0607e-05,
          1.0710e-05, 9.5554e-07],
         [1.1292e-09, 2.3942e-05, 1.9264e-05,  ..., 3.6305e-05,
          1.0162e-06, 9.5769e-05],
         [2.3731e-06, 2.2881e-05, 1.4040e-05,  ..., 1.5553e-07,
          1.1032e-05, 4.8858e-05],
         ...,
         [1.0000e-20, 1.2023e-08, 1.0000e-20,  ..., 0.0000e+00,
          4.0000e-20, 4.0000e-20],
         [1.0000e-20, 1.0000e-20, 1.0000e-20,  ..., 1.2540e-08,
          1.2540e-08, 1.2023e-08],
         [4.0801e-06, 5.0351e-06, 1.2540e-08,  ..., 5.0351e-06,
          1.0636e-05, 1.3535e-05]],

        [[9.0995e-06, 2.6261e-06, 2.1502e-05,  ..., 9.0047e-06,
          3.4925e-05, 1.9332e-05],
         [4.2427e-05, 1.5688e-04, 1.9142e-05,  ..., 1.3960e-04,
          4.2827e-04, 1.3011e-04],
         [6.3063e-06, 8.6310e-05, 6.3063e-06,  ..., 4.7423e-05,
          2.3525e-04, 4.6193e-04],
         ...,
         [1.0000e-20, 1.2023e-08, 1.2023e-08,  ..., 1.2023e-08,
          1.2023e-08, 4.8092e-08],
         [1.2540e-08, 1.0000e-20, 1.2540e-08,  ..., 1.2540e-08,
          4.0000e-20, 5.0159e-08],
         [7.7023e-07, 2.6708e-07, 1.3020e-07,  ..., 6.4350e-06,
          3.9173e-06, 7.2729e-07]],

        [[1.4172e-06, 3.6465e-07, 7.6205e-06,  ..., 1.6267e-05,
          5.1625e-06, 6.2726e-06],
         [6.3063e-06, 8.5251e-08, 5.5358e-05,  ..., 3.4743e-06,
          2.4853e-05, 1.3702e-06],
         [2.7662e-05, 2.0674e-04, 2.2503e-05,  ..., 6.0384e-05,
          1.0088e-04, 8.1559e-06],
         ...,
         [4.8092e-08, 1.9862e-07, 1.0376e-20,  ..., 5.4374e-12,
          1.0821e-07, 1.0821e-07],
         [3.4199e-07, 5.4388e-12, 2.2355e-07,  ..., 2.9334e-07,
          1.3679e-06, 2.0280e-07],
         [8.0364e-08, 2.1554e-07, 4.7334e-09,  ..., 8.1354e-08,
          1.6625e-06, 3.7546e-07]]], grad_fn=<CopySlices>) 

mat_uij: 
tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0003, 0.0003],
         [0.0000, 0.0003, 0.0004,  ..., 0.0000, 0.0004, 0.0006],
         [0.0006, 0.0006, 0.0003,  ..., 0.0004, 0.0003, 0.0003],
         ...,
         [0.0006, 0.0013, 0.0016,  ..., 0.0015, 0.0009, 0.0015],
         [0.0011, 0.0014, 0.0023,  ..., 0.0021, 0.0011, 0.0014],
         [0.0006, 0.0004, 0.0009,  ..., 0.0015, 0.0002, 0.0005]],

        [[0.0000, 0.0003, 0.0004,  ..., 0.0000, 0.0004, 0.0002],
         [0.0004, 0.0007, 0.0007,  ..., 0.0004, 0.0003, 0.0004],
         [0.0004, 0.0006, 0.0007,  ..., 0.0003, 0.0000, 0.0006],
         ...,
         [0.0013, 0.0003, 0.0021,  ..., 0.0021, 0.0011, 0.0011],
         [0.0014, 0.0007, 0.0013,  ..., 0.0009, 0.0003, 0.0014],
         [0.0004, 0.0003, 0.0004,  ..., 0.0020, 0.0002, 0.0007]],

        [[0.0003, 0.0006, 0.0004,  ..., 0.0004, 0.0003, 0.0003],
         [0.0006, 0.0004, 0.0007,  ..., 0.0008, 0.0004, 0.0003],
         [0.0000, 0.0004, 0.0004,  ..., 0.0003, 0.0003, 0.0003],
         ...,
         [0.0012, 0.0003, 0.0013,  ..., 0.0009, 0.0009, 0.0015],
         [0.0007, 0.0009, 0.0017,  ..., 0.0016, 0.0014, 0.0009],
         [0.0003, 0.0013, 0.0002,  ..., 0.0023, 0.0007, 0.0004]],

        ...,

        [[0.0016, 0.0014, 0.0044,  ..., 0.0091, 0.0016, 0.0030],
         [0.0044, 0.0033, 0.0082,  ..., 0.0069, 0.0054, 0.0049],
         [0.0037, 0.0055, 0.0082,  ..., 0.0092, 0.0032, 0.0051],
         ...,
         [0.0001, 0.0002, 0.0000,  ..., 0.0001, 0.0001, 0.0002],
         [0.0000, 0.0001, 0.0001,  ..., 0.0020, 0.0002, 0.0009],
         [0.0012, 0.0003, 0.0021,  ..., 0.0020, 0.0010, 0.0013]],

        [[0.0018, 0.0044, 0.0039,  ..., 0.0069, 0.0022, 0.0036],
         [0.0110, 0.0115, 0.0128,  ..., 0.0032, 0.0095, 0.0097],
         [0.0150, 0.0126, 0.0124,  ..., 0.0071, 0.0106, 0.0103],
         ...,
         [0.0001, 0.0002, 0.0003,  ..., 0.0006, 0.0002, 0.0001],
         [0.0001, 0.0002, 0.0005,  ..., 0.0020, 0.0003, 0.0000],
         [0.0012, 0.0002, 0.0010,  ..., 0.0018, 0.0012, 0.0004]],

        [[0.0016, 0.0035, 0.0039,  ..., 0.0104, 0.0030, 0.0014],
         [0.0022, 0.0028, 0.0128,  ..., 0.0071, 0.0057, 0.0036],
         [0.0007, 0.0150, 0.0102,  ..., 0.0087, 0.0046, 0.0061],
         ...,
         [0.0002, 0.0005, 0.0010,  ..., 0.0011, 0.0002, 0.0001],
         [0.0005, 0.0005, 0.0007,  ..., 0.0006, 0.0006, 0.0009],
         [0.0006, 0.0002, 0.0006,  ..., 0.0014, 0.0013, 0.0010]]],
       grad_fn=<CopySlices>) 

loss = loss1 + lambda*loss2
loss1:0.0 loss2:167.22467041015625
t:0, Finish constructing loss
require grad ? True True False
MatD grad and MatUx grad: torch.Size([37, 123]) torch.Size([37, 123, 2]) 

Grads has nan? MatD.grad: True 	MatU.grad: True

Where is nan? 
MatD.grad nan: 
tensor([[ 1, 39],
        [ 1, 40],
        [ 2, 39],
        [ 2, 40],
        [ 2, 42],
        [ 3, 39],
        [ 3, 40],
        [ 3, 41],
        [ 3, 42],
        [ 3, 43],
        [ 4, 38],
        [ 4, 39],
        [ 4, 40],
        [ 4, 41],
        [ 4, 42],
        [ 4, 43],
        [ 4, 44],
        [ 5, 38],
        [ 5, 39],
        [ 5, 40],
        [ 5, 41],
        [ 5, 42],
        [ 5, 43],
        [ 5, 44],
        [ 6, 40],
        [ 6, 41],
        [ 6, 42],
        [ 6, 43]]) 
MatU.grad nan: 
tensor([[ 4, 40,  0],
        [ 4, 40,  1],
        [ 4, 41,  0],
        [ 4, 41,  1]])

MatD.grad[0:10,35:45]: 
tensor([[ 0.0000e+00,  0.0000e+00,  0.0000e+00,        -inf,        -inf,
                 inf,        -inf,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00, -1.5151e-03,  1.1746e-02,        -inf,         nan,
                 nan,        -inf,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [-2.5408e+00,  1.1608e+00,  6.0020e-02,        -inf,         nan,
                 nan,         inf,         nan,         inf,  1.6388e+00],
        [-5.7525e+00, -8.0375e+00,        -inf,        -inf,         nan,
                 nan,         nan,         nan,         nan,         inf],
        [-1.1580e+01,  1.3476e+00,        -inf,         nan,         nan,
                 nan,         nan,         nan,         nan,         nan],
        [-1.0895e+01, -2.9082e+01,        -inf,         nan,         nan,
                 nan,         nan,         nan,         nan,         nan],
        [-4.9327e+00, -2.2827e+01,  1.0646e+01,        -inf,        -inf,
                 nan,         nan,         nan,         nan,         inf],
        [-6.9089e+00, -1.6273e+01,  1.7122e+00, -7.4919e-01, -2.7412e+01,
                -inf,        -inf,        -inf,        -inf, -3.6029e+01],
        [ 4.0034e+00, -1.1086e+01,  6.2267e-01, -2.4815e-01,  1.5668e+01,
          1.5518e+01,  1.8724e+01,  2.3229e+01,  1.6457e+01,  8.4656e+00],
        [-1.0217e+01, -2.4836e+00, -5.1007e+00,  1.2210e+01,  9.6448e+00,
          7.2811e+00,  2.1230e+01,  4.2550e+00, -2.1296e+00,  9.5128e+00]]) 

MatU.grad[0:10,35:45]: 
tensor([[[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 1.2822e-42, -2.4845e-42],
         [-1.8063e-42,  2.1342e-42],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00]],

        [[-2.8021e+01, -4.3754e-01],
         [-1.9821e+01,  1.9807e+01],
         [ 0.0000e+00,  0.0000e+00],
         [-2.7437e+01, -4.0023e+00],
         [ 3.1905e+00,  2.7361e+01],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00]],

        [[-3.3736e+01,  6.8591e+01],
         [ 1.0719e+02,  5.0918e+01],
         [-1.0917e+02, -1.8888e+00],
         [ 5.5761e+01,  5.2028e+01],
         [-9.7077e+01,  7.2758e+00],
         [ 0.0000e+00,  0.0000e+00],
         [-2.3626e-42, -2.3542e-42],
         [-2.4957e-42,  2.2855e-42],
         [ 2.4707e+01,  1.8578e+01],
         [-8.9584e+01,  2.0466e+01]],

        [[ 5.7981e+00, -2.4442e+02],
         [ 3.0026e+02, -2.2655e+02],
         [-1.5956e+02, -3.3961e+02],
         [ 1.1305e+02,  7.5059e+01],
         [ 7.6567e+01, -4.4063e+02],
         [        nan,         nan],
         [        nan,         nan],
         [-3.3539e+01, -9.7457e+00],
         [-2.5105e+00, -3.2560e+02],
         [ 8.9146e+01, -4.5761e+02]],

        [[-1.1062e+02, -3.1644e+01],
         [-7.6718e+01, -5.2303e+01],
         [ 3.6035e+02,  3.4435e+02],
         [-5.4285e+02, -6.6102e+01],
         [ 9.2925e+01,  3.7321e+02],
         [ 3.0643e+01, -1.7340e+02],
         [ 4.0775e+02,  1.6550e+02],
         [-4.3510e+02, -1.7965e+02],
         [-3.0497e+02,  2.8520e+02],
         [ 4.5107e+02,  3.8961e+02]],

        [[-7.5817e+00,  1.3039e+02],
         [ 2.4545e+02,  1.4031e+02],
         [-1.2652e+02,  2.7185e+02],
         [ 2.2923e+02,  1.1207e+02],
         [-4.2125e+02,  1.9135e+02],
         [ 2.7444e+02,  5.2792e+02],
         [ 2.2850e+01,  3.9816e+02],
         [-5.1944e+01, -6.8401e+01],
         [-3.2019e+01,  2.9036e+02],
         [ 1.6319e+02,  5.0844e+02]],

        [[ 8.3135e+00,  4.0074e+02],
         [ 1.8702e+02, -2.9058e+02],
         [-3.4913e+01, -3.6609e+02],
         [ 2.6223e+02, -4.2284e+02],
         [ 1.5375e+02, -5.2601e+02],
         [-3.5431e-01, -2.1885e+02],
         [-2.3798e+02, -5.6240e+02],
         [ 2.0400e+02, -4.7841e+02],
         [ 6.0749e+01, -1.7450e+02],
         [-1.9936e+02, -5.4095e+02]],

        [[-5.0566e+02, -2.1491e+02],
         [ 9.3641e+01,  5.3864e+02],
         [-3.7373e+02,  6.4907e+00],
         [-3.3990e+01,  5.5051e+02],
         [ 4.0324e+02,  3.8966e+02],
         [-4.4219e+02,  4.5874e+01],
         [-6.8464e+01,  4.7696e+02],
         [ 4.3373e+02,  3.8010e+02],
         [-4.4714e+02, -1.0346e+01],
         [-1.2956e+02,  4.8031e+02]],

        [[ 1.2142e+02,  2.2989e+02],
         [-3.3332e+02,  4.9094e+01],
         [ 4.0105e+02, -1.9742e+02],
         [-2.2922e+02, -3.2920e+02],
         [ 5.3944e+01, -2.5936e+02],
         [ 2.5842e+02, -4.5192e+02],
         [-2.2229e+02, -1.7420e+02],
         [ 6.4166e+01, -3.0883e+02],
         [ 1.5273e+02,  2.4284e+02],
         [-1.6056e+02,  1.2342e+01]]]) 

MatD.grad: 
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0011,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ..., -0.0016,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]) 

MatU.grad[0:10,0:10]: 
tensor([[[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 2.5146e+01,  1.2373e+01],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 8.6572e+01, -5.0170e+01],
         [-1.5903e+01, -7.4947e+01],
         [ 6.1507e+01, -4.4660e+01],
         [-4.1713e+01, -8.0559e+01],
         [ 8.9156e+01,  2.8103e+01]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [-1.1222e+02, -8.0904e+01],
         [ 1.4050e+01, -2.8835e+01],
         [ 1.1707e+01,  4.1279e+02],
         [-4.5248e+02,  4.0540e+01],
         [ 4.0749e+02,  1.6348e+02],
         [-8.5250e+01, -1.5665e+02]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00, -2.8025e+01],
         [-5.1135e+01, -1.9816e+01],
         [-5.5598e+01,  3.1258e+01],
         [ 4.0460e+02,  4.0460e+02],
         [-2.5852e+02, -4.5335e+02],
         [-3.9703e+02, -1.9901e+01],
         [ 1.6024e+02,  2.7147e+02],
         [ 2.6293e+02, -1.8960e+02]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 4.2325e+00, -8.4796e+01],
         [ 3.9206e+02, -1.5010e+02],
         [-3.7719e+02, -4.2098e+02],
         [ 8.2120e+01, -1.4899e+02],
         [ 1.3886e+01, -6.7809e+01],
         [-2.0309e+02, -5.7344e+01],
         [ 5.8192e+02,  2.0451e+02]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 6.1090e+01,  4.1991e+01],
         [-2.1455e+01,  4.2874e+02],
         [ 7.6156e+01,  1.0522e+02],
         [ 3.9773e+01,  2.9707e+02],
         [-2.9939e+01, -1.5030e+02],
         [ 2.4014e+02,  4.2041e+02],
         [ 2.6624e+02, -4.4338e+02]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 7.7739e+01, -1.9394e-01],
         [-3.5255e+02,  1.6616e+02],
         [ 1.7306e+02,  2.7309e+02],
         [-3.3883e+02,  2.6611e+02],
         [ 4.9380e+02, -1.4257e+02],
         [-5.1911e+02, -3.6161e+02],
         [ 1.9150e+02,  3.4073e+02]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 8.8842e+01,  6.1726e-01],
         [-2.4216e+02, -3.1910e+02],
         [ 3.3123e+02, -3.7228e+02],
         [-5.1855e+02, -3.3620e+02],
         [ 3.0953e+01, -4.3109e+01],
         [ 1.5645e+02, -1.4209e+02],
         [ 3.3396e+02, -5.8559e-01]]]) 

MatU.grad[10:20,10:20]: 
tensor([[[-585.1490, -156.1891],
         [ 446.0198,  205.9089],
         [  94.7641, -463.1649],
         [-364.9140, -299.4767],
         [-127.3682,  128.7963],
         [ 199.5378,  -37.4100],
         [ 352.8670,    4.1646],
         [-542.7241, -183.6602],
         [ 139.7976,  123.4425],
         [ 196.6683,  469.2116]],

        [[-335.9976, -231.9882],
         [-230.3198,  215.9290],
         [ 153.8904,  530.4575],
         [  60.9625,  310.5788],
         [-102.1823, -447.5497],
         [ 135.2411,  488.3094],
         [ -66.0035, -476.1005],
         [-305.3351,  -25.9096],
         [ 479.3369,  271.2061],
         [-437.0287,  197.1397]],

        [[  59.5621,   42.1134],
         [ 566.5951,  -53.8259],
         [-294.4734, -488.9924],
         [-528.9927,  -45.1036],
         [ 487.8113,  402.9980],
         [-449.2108,  -85.6986],
         [ 334.7124, -175.4483],
         [  67.0285,  386.0750],
         [ 394.3261, -114.0574],
         [-427.5810, -434.4211]],

        [[ -73.8722,  -14.1169],
         [   7.5128,  -26.4452],
         [  17.6310,  -93.1054],
         [ 213.1668,   -9.4122],
         [ -37.8199,  112.9548],
         [-370.8240,  316.7086],
         [ 520.6078,  335.9236],
         [-187.3443, -234.8195],
         [-508.7582, -113.8677],
         [ 337.1807,  109.7878]],

        [[ -40.5527,  -75.1645],
         [ -51.4511,  595.7000],
         [  82.8548,  -39.9064],
         [ 176.7063,  492.0381],
         [ 149.2263, -414.8939],
         [-448.1221, -330.1252],
         [ 253.6831, -381.3142],
         [-210.6090,   -2.0768],
         [ -21.5262,   51.6931],
         [ 558.4421,  109.5957]],

        [[ 549.0851,  -61.2173],
         [-447.2078,   38.5029],
         [ 582.8112,    6.4967],
         [-409.4901, -462.3698],
         [ 199.6121,  -94.6824],
         [-463.4799,   74.6926],
         [ 367.8957,  256.8787],
         [-122.9251, -493.4527],
         [ 295.4229,  323.5256],
         [-321.4349, -341.3242]],

        [[ 563.3396,  -22.2103],
         [-238.1141, -437.3963],
         [-316.9209,  100.1968],
         [ -17.4543,  105.4394],
         [ 481.7838, -166.7807],
         [-336.6743, -225.6898],
         [-132.9661,  309.8182],
         [ 525.7461, -174.5236],
         [-539.3356,  -69.5723],
         [  21.4039,  385.2906]],

        [[ -40.3766,  504.1535],
         [ 303.3399,  -14.1553],
         [-327.0179,   94.2049],
         [-578.0860,   65.5105],
         [ 375.8995,  453.2036],
         [ 122.7732, -199.5042],
         [-466.5464, -225.9005],
         [ 450.5108,  412.1999],
         [ -44.7297, -277.0034],
         [ 544.0659,   36.1308]],

        [[-530.5098, -105.5383],
         [ 357.3361,   -9.6327],
         [-341.3911,   73.6799],
         [ 233.6259,   69.1233],
         [-453.2875,   33.4886],
         [ -75.8462,  382.5146],
         [ 312.3264,   18.5208],
         [-163.2765, -213.5188],
         [ 353.3139,  -66.3824],
         [-143.6073, -458.3197]],

        [[-341.4053, -119.4361],
         [ 445.3792,  -17.0563],
         [-297.0046, -528.3790],
         [  99.5799,  131.9403],
         [ 224.1152, -319.5041],
         [-336.1572, -219.9550],
         [  79.0160,  612.7747],
         [ -17.1195,  325.6225],
         [-384.5723,   78.3041],
         [ 290.5270,  515.0600]]]) 

MatU.grad[20:30,20:30]:  
tensor([[[-580.0094,  -48.3845],
         [ 530.2443,  139.5760],
         [  42.5061, -611.5210],
         [-456.3491, -234.4474],
         [ 366.2870,  290.1114],
         [ -94.4237, -509.4729],
         [  43.6477,  155.7214],
         [ 303.0686,  -60.8727],
         [-228.6429, -465.5358],
         [ 269.9425,  -48.9645]],

        [[-300.5220,  -80.7906],
         [-486.2643,  267.1289],
         [ 266.7530,  540.4310],
         [ 170.4326,  285.4300],
         [-553.8574,  120.9174],
         [ 452.0792,  429.2332],
         [-407.0357, -208.4821],
         [-320.8405,  120.9005],
         [ 167.4250,  515.0928],
         [ 319.8752,  301.5030]],

        [[   0.8241,  391.9199],
         [ 180.9590, -371.0873],
         [  59.7414,   65.2093],
         [ -13.9742, -201.7873],
         [ 103.7282, -375.8524],
         [-237.7829, -257.3229],
         [  88.0271,   65.8599],
         [ 518.4298,   48.2502],
         [-443.5248, -129.3961],
         [  34.7165, -266.3802]],

        [[-568.0453, -211.1152],
         [ 444.4269,  182.0097],
         [-178.3371, -616.1036],
         [-363.7436,   76.0406],
         [  79.4518,  443.4744],
         [ 226.4285, -282.7781],
         [ 267.2921,  183.2096],
         [ 397.5135, -110.0801],
         [-256.6195, -451.0111],
         [ 162.2137,  177.6703]],

        [[-206.4733,  -63.1984],
         [-491.2246,  106.2400],
         [ 348.2343,  523.8224],
         [ 119.6435,  247.7246],
         [-583.9799,   59.1723],
         [ 478.7981,  405.3532],
         [-401.6851, -235.0026],
         [-434.6371,   95.9107],
         [ 394.8886,  306.6702],
         [  25.1685, -427.1767]],

        [[-155.2986,  388.5783],
         [ 415.9674, -117.9488],
         [ 107.2209, -233.6456],
         [-238.9571, -344.2982],
         [ 272.0084, -220.5640],
         [ -44.2508, -336.6951],
         [-215.7267,  175.1570],
         [ 224.5901, -190.3006],
         [-302.1725, -276.5007],
         [ 435.4228,  224.6984]],

        [[-554.1385, -171.0259],
         [ 195.1936,  156.9958],
         [ -25.6515, -598.2354],
         [-285.9476,   81.1334],
         [ 135.3000,  242.7513],
         [ 295.4141, -317.3106],
         [-145.2010,  538.9970],
         [ -11.5362,   47.5741],
         [ 214.1360, -232.4766],
         [ 269.2967, -126.3188]],

        [[-338.8760, -257.7783],
         [-540.1505,  236.3804],
         [ 404.8471,  370.1785],
         [ -59.2685,   63.2513],
         [-384.5937,   21.5927],
         [ 493.5225, -107.9725],
         [-389.3543, -418.4982],
         [-241.1287,  123.9418],
         [ 204.1706,  354.2538],
         [-431.7287,   18.3885]],

        [[ -14.8585,  -67.7941],
         [ 317.1995, -312.0332],
         [ -44.3659, -416.4389],
         [ -49.3311,  154.1482],
         [-163.7797,  502.9045],
         [ -15.3391,   93.8717],
         [   6.9507,  375.5336],
         [  26.0595,  284.5550],
         [-128.3557, -461.7674],
         [ 457.0745,  -75.7237]],

        [[-462.2928,  122.4199],
         [  85.8483,  237.4527],
         [  40.8550,  548.9706],
         [ 473.0669, -160.8629],
         [-262.6549, -413.3379],
         [ 385.4167,  -12.5595],
         [-225.9665, -341.3745],
         [-276.4047, -141.5362],
         [ 172.7603,  405.0842],
         [ 215.8787,  390.1227]]]) 

t:0, loss.item(): 1672.2467041015625
Optimized result :
MatD: 
has nan? True 
tensor([[0.0161, 0.0164, 0.0161,  ..., 0.0122, 0.0127, 0.0114],
        [0.0161, 0.0159, 0.0156,  ..., 0.0125, 0.0123, 0.0120],
        [0.0164, 0.0159, 0.0159,  ..., 0.0113, 0.0125, 0.0098],
        ...,
        [0.0161, 0.0161, 0.0161,  ..., 0.0142, 0.0130, 0.0127],
        [0.0161, 0.0161, 0.0156,  ..., 0.0130, 0.0125, 0.0133],
        [0.0159, 0.0159, 0.0159,  ..., 0.0114, 0.0118, 0.0112]],
       requires_grad=True) 

MatUx: 
 has nan? True 
tensor([[ 2.6441e-04, -2.6441e-04, -2.5601e-04,  ...,  4.6311e-04,
         -1.2946e-03, -1.2946e-03],
        [-2.5601e-04, -2.4802e-04,  2.4802e-04,  ..., -1.5432e-04,
         -2.9749e-04, -2.9749e-04],
        [-5.2042e-04,  1.0000e-10,  5.2043e-04,  ...,  1.5432e-04,
         -2.6961e-03, -2.6961e-03],
        ...,
        [ 1.0000e-10,  1.0000e-10, -2.5601e-04,  ..., -1.7088e-04,
         -3.2878e-04, -3.2878e-04],
        [ 1.0000e-10, -5.0403e-04,  5.0403e-04,  ..., -4.8701e-04,
          8.3333e-04,  8.3333e-04],
        [ 1.0000e-10,  1.0000e-10,  2.5602e-04,  ...,  4.0107e-04,
         -5.2875e-04, -5.2875e-04]], grad_fn=<SelectBackward>)  








test_counter in loss_omega_mat(): 455
test_counter in loss_omega_mat(): 910
test_counter in loss_omega_mat(): 1365
test_counter in loss_omega_mat(): 1820
test_counter in loss_omega_mat(): 2275
test_counter in loss_omega_mat(): 2730
test_counter in loss_omega_mat(): 3185
mat_omega_topk has nan? True 

mat_duij has nan? True 

mat_uij has nan? True 

mat_omega_topk: 
tensor([[[0.9451, 0.9449, 0.9446,  ..., 0.8925, 0.7994, 0.7993],
         [0.9450, 0.9449, 0.9440,  ..., 0.8925, 0.7995, 0.7993],
         [0.9450, 0.9447, 0.9440,  ..., 0.8925, 0.7996, 0.7996],
         ...,
         [0.9454, 0.9447, 0.9447,  ..., 0.8926, 0.8002, 0.7991],
         [0.9455, 0.9447, 0.9444,  ..., 0.8929, 0.8002, 0.7989],
         [0.9452, 0.9447, 0.9445,  ..., 0.8923, 0.7996, 0.7990]],

        [[0.9446, 0.9445, 0.9444,  ..., 0.8926, 0.7991, 0.7989],
         [0.9444, 0.9443, 0.9443,  ..., 0.8925, 0.7996, 0.7994],
         [0.9443, 0.9443, 0.9440,  ..., 0.8925, 0.7996, 0.7992],
         ...,
         [0.9456, 0.9454, 0.9445,  ..., 0.8932, 0.8002, 0.8001],
         [0.9456, 0.9455, 0.9446,  ..., 0.8928, 0.8002, 0.8000],
         [0.9455, 0.9452, 0.9449,  ..., 0.8932, 0.8001, 0.7998]],

        [[0.9448, 0.9447, 0.9447,  ..., 0.8927, 0.7996, 0.7996],
         [0.9447, 0.9447, 0.9446,  ..., 0.8929, 0.8000, 0.7993],
         [0.9447, 0.9444, 0.9443,  ..., 0.8933, 0.7996, 0.7996],
         ...,
         [0.9456, 0.9454, 0.9448,  ..., 0.8935, 0.8002, 0.8001],
         [0.9456, 0.9455, 0.9450,  ..., 0.8936, 0.8002, 0.8002],
         [0.9456, 0.9455, 0.9450,  ..., 0.8935, 0.8001, 0.8000]],

        ...,

        [[0.9447, 0.9445, 0.9435,  ..., 0.8910, 0.7989, 0.7988],
         [0.9437, 0.9407, 0.9401,  ..., 0.8912, 0.7978, 0.7970],
         [0.9435, 0.9405, 0.9401,  ..., 0.8893, 0.7980, 0.7974],
         ...,
         [0.9442, 0.9438, 0.9435,  ..., 0.8931, 0.8001, 0.7993],
         [0.9445, 0.9441, 0.9440,  ..., 0.8929, 0.7998, 0.7990],
         [0.9451, 0.9446, 0.9440,  ..., 0.8917, 0.7994, 0.7993]],

        [[0.9447, 0.9439, 0.9436,  ..., 0.8888, 0.7990, 0.7987],
         [0.9393, 0.9369, 0.9362,  ..., 0.8839, 0.7961, 0.7947],
         [0.9366, 0.9360, 0.9355,  ..., 0.8842, 0.7960, 0.7953],
         ...,
         [0.9442, 0.9442, 0.9438,  ..., 0.8932, 0.7996, 0.7996],
         [0.9448, 0.9446, 0.9445,  ..., 0.8931, 0.7997, 0.7997],
         [0.9453, 0.9451, 0.9446,  ..., 0.8920, 0.7996, 0.7993]],

        [[0.9442, 0.9439, 0.9421,  ..., 0.8890, 0.7988, 0.7985],
         [0.9375, 0.9367, 0.9362,  ..., 0.8840, 0.7925, 0.7909],
         [0.9360, 0.9347, 0.9297,  ..., 0.8839, 0.7905, 0.7902],
         ...,
         [0.9452, 0.9444, 0.9443,  ..., 0.8930, 0.7995, 0.7995],
         [0.9454, 0.9451, 0.9448,  ..., 0.8936, 0.7999, 0.7993],
         [0.9454, 0.9453, 0.9451,  ..., 0.8923, 0.7995, 0.7994]]],
       grad_fn=<SliceBackward>) 

mat_duij: 
tensor([[[1.0000e-06, 1.0000e-06, 1.0000e-06,  ..., 5.4210e-20,
          2.2849e-06, 9.0000e-06],
         [1.0000e-06, 1.0000e-06, 1.0000e-06,  ..., 3.0415e-06,
          5.0536e-06, 4.0000e-06],
         [5.5351e-07, 5.5351e-07, 5.5351e-07,  ..., 1.4017e-05,
          3.0415e-06, 9.9913e-07],
         ...,
         [8.9480e-08, 3.5135e-07, 3.6874e-08,  ..., 1.1828e-05,
          3.4602e-06, 1.4255e-07],
         [3.7429e-09, 8.1590e-07, 4.7333e-06,  ..., 5.1306e-06,
          1.2458e-06, 9.8352e-08],
         [2.7580e-07, 2.7580e-07, 4.8056e-06,  ..., 1.4313e-06,
          7.8116e-07, 2.3720e-08]],

        [[1.0000e-06, 1.0000e-06, 9.0000e-06,  ..., 4.0000e-06,
          4.0000e-06, 6.5543e-08],
         [1.0000e-06, 5.5351e-07, 1.0000e-06,  ..., 1.2166e-05,
          2.6218e-07, 1.2166e-05],
         [6.1900e-06, 1.0000e-06, 1.0000e-06,  ..., 1.0446e-05,
          6.3979e-11, 2.2141e-06],
         ...,
         [2.8377e-06, 1.7864e-07, 2.8377e-06,  ..., 3.9350e-06,
          6.0872e-07, 2.5344e-06],
         [2.0874e-07, 6.1093e-07, 2.3812e-06,  ..., 2.5738e-06,
          1.1375e-06, 7.9386e-07],
         [4.6170e-07, 7.1569e-07, 4.6170e-07,  ..., 1.0270e-05,
          1.8468e-06, 6.8927e-06]],

        [[1.0000e-06, 5.5351e-07, 7.5295e-06,  ..., 3.0415e-06,
          7.0459e-11, 4.0000e-06],
         [6.1900e-06, 1.0000e-06, 1.0000e-06,  ..., 1.0446e-05,
          3.0415e-06, 1.0446e-05],
         [5.5351e-07, 1.0000e-06, 9.0000e-06,  ..., 5.4210e-20,
          4.0000e-06, 4.0000e-06],
         ...,
         [3.3543e-06, 2.9548e-09, 4.2204e-06,  ..., 1.3979e-05,
          5.7651e-06, 3.6335e-07],
         [1.3029e-06, 1.6749e-06, 4.9816e-07,  ..., 6.1965e-08,
          8.1561e-08, 1.0907e-06],
         [1.0000e-06, 1.0000e-06, 1.0000e-06,  ..., 2.8207e-06,
          1.1950e-05, 1.1064e-05]],

        ...,

        [[1.8597e-06, 5.4109e-07, 1.8597e-06,  ..., 1.5795e-06,
          9.5554e-07, 3.0415e-06],
         [9.3392e-07, 1.5156e-05, 1.1486e-05,  ..., 4.1019e-06,
          9.0484e-06, 3.3480e-05],
         [2.9213e-07, 3.1806e-06, 7.5458e-06,  ..., 1.5553e-07,
          4.6054e-07, 2.4899e-05],
         ...,
         [9.0000e-06, 7.9272e-07, 1.0000e-06,  ..., 1.2197e-19,
          4.0000e-06, 4.0000e-06],
         [1.0000e-06, 1.0000e-06, 1.0000e-06,  ..., 1.2540e-08,
          4.4605e-06, 5.4210e-20],
         [1.0403e-06, 5.7170e-07, 7.8858e-07,  ..., 9.8741e-06,
          2.8191e-06, 4.9460e-06]],

        [[6.8671e-06, 2.6800e-06, 4.0664e-06,  ..., 1.5244e-08,
          2.1279e-05, 3.6471e-06],
         [3.0400e-05, 9.0726e-05, 2.8892e-05,  ..., 1.3960e-04,
          2.7871e-04, 8.8486e-05],
         [6.8730e-05, 1.2329e-05, 1.2329e-05,  ..., 9.7361e-05,
          1.7790e-04, 7.5100e-05],
         ...,
         [9.0000e-06, 7.9272e-07, 1.2313e-06,  ..., 4.0093e-06,
          5.4210e-20, 1.0975e-07],
         [1.2365e-06, 7.8858e-07, 7.8858e-07,  ..., 4.4605e-06,
          4.0000e-06, 4.4605e-06],
         [2.3349e-07, 1.4975e-08, 4.0853e-07,  ..., 2.7593e-09,
          1.0026e-05, 1.3160e-06]],

        [[1.5692e-07, 3.0994e-06, 3.6282e-08,  ..., 9.7273e-08,
          2.0291e-05, 1.8251e-05],
         [5.0130e-07, 2.2838e-06, 1.9716e-05,  ..., 5.4069e-08,
          8.9121e-06, 6.8796e-07],
         [1.7898e-04, 1.8143e-05, 1.4016e-05,  ..., 5.3388e-05,
          2.3579e-05, 2.2366e-04],
         ...,
         [1.0000e-06, 1.0000e-06, 6.5246e-06,  ..., 4.0093e-06,
          8.9517e-06, 6.1263e-06],
         [2.7793e-07, 2.7793e-07, 1.7239e-07,  ..., 1.6984e-06,
          2.3717e-06, 7.3013e-06],
         [5.1339e-07, 2.8701e-07, 8.6713e-07,  ..., 1.4393e-06,
          1.9245e-06, 8.4546e-07]]], grad_fn=<CopySlices>) 

mat_uij: 
tensor([[[1.4142e-03, 2.0000e-03, 1.4142e-03,  ..., 2.4664e-03,
          7.2351e-04, 1.5992e-03],
         [1.7440e-03, 2.0000e-03, 1.7627e-03,  ..., 1.7627e-03,
          1.8230e-03, 2.5070e-03],
         [1.7440e-03, 1.5331e-03, 2.2925e-03,  ..., 1.7627e-03,
          1.0522e-03, 4.8865e-04],
         ...,
         [7.4836e-04, 6.2109e-04, 1.6446e-03,  ..., 1.4162e-03,
          5.8190e-04, 4.1779e-04],
         [1.0483e-03, 1.1855e-03, 2.6707e-04,  ..., 1.6998e-03,
          6.0980e-04, 1.7388e-03],
         [1.8614e-03, 2.0664e-03, 2.2566e-03,  ..., 1.5239e-03,
          1.9424e-03, 2.4981e-03]],

        [[2.6536e-03, 2.0000e-03, 2.0000e-03,  ..., 1.4142e-03,
          5.2042e-04, 1.7627e-03],
         [2.1043e-03, 1.7627e-03, 2.1043e-03,  ..., 2.4664e-03,
          2.2977e-03, 1.7440e-03],
         [2.1043e-03, 2.5614e-04, 1.7627e-03,  ..., 1.7627e-03,
          2.1156e-03, 1.1642e-10],
         ...,
         [2.6695e-04, 7.4836e-04, 1.0907e-03,  ..., 7.1241e-04,
          9.3790e-04, 1.9500e-03],
         [7.0139e-04, 1.0483e-03, 1.5979e-03,  ..., 7.8242e-04,
          1.5438e-03, 1.4106e-03],
         [3.2051e-04, 1.8614e-03, 1.8616e-03,  ..., 1.5330e-03,
          6.9207e-04, 1.1813e-03]],

        [[3.5645e-04, 2.2871e-03, 1.5098e-03,  ..., 1.7440e-03,
          2.2740e-03, 2.5602e-04],
         [1.5098e-03, 1.7627e-03, 2.2925e-03,  ..., 1.7627e-03,
          1.7627e-03, 1.7627e-03],
         [1.7627e-03, 1.7440e-03, 1.1642e-10,  ..., 1.7627e-03,
          2.0000e-03, 2.5602e-04],
         ...,
         [2.6695e-04, 1.9702e-03, 5.8488e-04,  ..., 1.2822e-03,
          5.8190e-04, 9.4474e-04],
         [7.0139e-04, 9.3320e-04, 1.2833e-03,  ..., 1.1838e-03,
          1.3451e-03, 6.0980e-04],
         [6.9301e-04, 3.2051e-04, 2.7161e-03,  ..., 2.1780e-03,
          9.4564e-04, 1.8202e-03]],

        ...,

        [[1.6164e-03, 1.3988e-03, 3.6372e-04,  ..., 8.1619e-03,
          1.3141e-03, 1.4234e-03],
         [4.5944e-03, 3.2956e-03, 6.2112e-03,  ..., 4.3391e-03,
          3.8556e-03, 2.9367e-03],
         [3.2498e-03, 2.7301e-03, 6.2112e-03,  ..., 7.1725e-03,
          3.1913e-03, 2.9156e-03],
         ...,
         [1.8904e-03, 1.8935e-03, 2.0000e-03,  ..., 2.0031e-03,
          2.7504e-03, 2.1161e-03],
         [1.1198e-04, 1.8880e-03, 1.7303e-04,  ..., 1.8312e-03,
          1.5837e-04, 1.4196e-03],
         [1.9979e-03, 2.5040e-04, 1.7303e-04,  ..., 6.7629e-04,
          1.8853e-03, 2.1161e-03]],

        [[1.6164e-03, 1.3700e-03, 1.8265e-03,  ..., 1.4023e-03,
          1.5707e-03, 2.2099e-04],
         [9.0847e-03, 1.0199e-02, 1.0243e-02,  ..., 3.2489e-03,
          6.9107e-03, 7.7602e-03],
         [1.0788e-02, 1.2167e-02, 1.0518e-02,  ..., 7.7904e-03,
          7.8401e-03, 1.2539e-02],
         ...,
         [1.8904e-03, 2.5970e-03, 1.5673e-04,  ..., 1.1201e-04,
          7.9667e-04, 1.7408e-03],
         [1.5313e-03, 1.8953e-03, 1.1198e-04,  ..., 2.0031e-03,
          1.7772e-03, 1.7140e-03],
         [1.8826e-04, 1.9979e-03, 1.8953e-03,  ..., 1.8426e-03,
          1.7408e-03, 1.6834e-03]],

        [[1.5124e-03, 1.3700e-03, 8.0653e-04,  ..., 2.2404e-03,
          1.4234e-03, 1.4285e-03],
         [8.6164e-04, 3.0223e-03, 1.0243e-02,  ..., 7.4765e-03,
          3.0717e-03, 1.6372e-03],
         [1.2167e-02, 7.3448e-04, 8.0066e-03,  ..., 3.2489e-03,
          5.4810e-03, 5.9941e-03],
         ...,
         [2.2346e-03, 2.0579e-03, 2.3601e-03,  ..., 1.1278e-03,
          1.4022e-03, 9.9021e-04],
         [1.6083e-03, 1.5003e-03, 1.5313e-03,  ..., 1.4325e-03,
          1.3532e-03, 2.4823e-03],
         [1.5136e-03, 1.8826e-04, 1.5003e-03,  ..., 1.8635e-03,
          9.9021e-04, 1.3897e-03]]], grad_fn=<CopySlices>) 

loss = loss1 + lambda*loss2
loss1:nan loss2:nan
t:1, Finish constructing loss
require grad ? True True False
MatD grad and MatUx grad: torch.Size([37, 123]) torch.Size([37, 123, 2]) 

Grads has nan? MatD.grad: True 	MatU.grad: True

Where is nan? 
MatD.grad nan: 
tensor([[ 0, 32],
        [ 0, 33],
        [ 0, 34],
        [ 0, 35],
        [ 0, 36],
        [ 0, 37],
        [ 0, 38],
        [ 0, 39],
        [ 0, 40],
        [ 0, 41],
        [ 0, 42],
        [ 0, 43],
        [ 0, 44],
        [ 0, 45],
        [ 0, 46],
        [ 0, 47],
        [ 0, 48],
        [ 0, 49],
        [ 0, 50],
        [ 1, 32],
        [ 1, 33],
        [ 1, 34],
        [ 1, 35],
        [ 1, 36],
        [ 1, 37],
        [ 1, 38],
        [ 1, 39],
        [ 1, 40],
        [ 1, 41],
        [ 1, 42],
        [ 1, 43],
        [ 1, 44],
        [ 1, 45],
        [ 1, 46],
        [ 1, 47],
        [ 1, 48],
        [ 1, 49],
        [ 1, 50],
        [ 2, 32],
        [ 2, 33],
        [ 2, 34],
        [ 2, 35],
        [ 2, 36],
        [ 2, 37],
        [ 2, 38],
        [ 2, 39],
        [ 2, 40],
        [ 2, 41],
        [ 2, 42],
        [ 2, 43],
        [ 2, 44],
        [ 2, 45],
        [ 2, 46],
        [ 2, 47],
        [ 2, 48],
        [ 2, 49],
        [ 2, 50],
        [ 3, 31],
        [ 3, 32],
        [ 3, 33],
        [ 3, 34],
        [ 3, 35],
        [ 3, 36],
        [ 3, 37],
        [ 3, 38],
        [ 3, 39],
        [ 3, 40],
        [ 3, 41],
        [ 3, 42],
        [ 3, 43],
        [ 3, 44],
        [ 3, 45],
        [ 3, 46],
        [ 3, 47],
        [ 3, 48],
        [ 3, 49],
        [ 3, 50],
        [ 3, 51],
        [ 4, 31],
        [ 4, 32],
        [ 4, 33],
        [ 4, 34],
        [ 4, 35],
        [ 4, 36],
        [ 4, 37],
        [ 4, 38],
        [ 4, 39],
        [ 4, 40],
        [ 4, 41],
        [ 4, 42],
        [ 4, 43],
        [ 4, 44],
        [ 4, 45],
        [ 4, 46],
        [ 4, 47],
        [ 4, 48],
        [ 4, 49],
        [ 4, 50],
        [ 4, 51],
        [ 5, 31],
        [ 5, 32],
        [ 5, 33],
        [ 5, 34],
        [ 5, 35],
        [ 5, 36],
        [ 5, 37],
        [ 5, 38],
        [ 5, 39],
        [ 5, 40],
        [ 5, 41],
        [ 5, 42],
        [ 5, 43],
        [ 5, 44],
        [ 5, 45],
        [ 5, 46],
        [ 5, 47],
        [ 5, 48],
        [ 5, 49],
        [ 5, 50],
        [ 5, 51],
        [ 6, 31],
        [ 6, 32],
        [ 6, 33],
        [ 6, 34],
        [ 6, 35],
        [ 6, 36],
        [ 6, 37],
        [ 6, 38],
        [ 6, 39],
        [ 6, 40],
        [ 6, 41],
        [ 6, 42],
        [ 6, 43],
        [ 6, 44],
        [ 6, 45],
        [ 6, 46],
        [ 6, 47],
        [ 6, 48],
        [ 6, 49],
        [ 6, 50],
        [ 6, 51],
        [ 7, 31],
        [ 7, 32],
        [ 7, 33],
        [ 7, 34],
        [ 7, 35],
        [ 7, 36],
        [ 7, 37],
        [ 7, 38],
        [ 7, 39],
        [ 7, 40],
        [ 7, 41],
        [ 7, 42],
        [ 7, 43],
        [ 7, 44],
        [ 7, 45],
        [ 7, 46],
        [ 7, 47],
        [ 7, 48],
        [ 7, 49],
        [ 7, 50],
        [ 7, 51],
        [ 8, 31],
        [ 8, 32],
        [ 8, 33],
        [ 8, 34],
        [ 8, 35],
        [ 8, 36],
        [ 8, 37],
        [ 8, 38],
        [ 8, 39],
        [ 8, 40],
        [ 8, 41],
        [ 8, 42],
        [ 8, 43],
        [ 8, 44],
        [ 8, 45],
        [ 8, 46],
        [ 8, 47],
        [ 8, 48],
        [ 8, 49],
        [ 8, 50],
        [ 8, 51],
        [ 9, 31],
        [ 9, 32],
        [ 9, 33],
        [ 9, 34],
        [ 9, 35],
        [ 9, 36],
        [ 9, 37],
        [ 9, 38],
        [ 9, 39],
        [ 9, 40],
        [ 9, 41],
        [ 9, 42],
        [ 9, 43],
        [ 9, 44],
        [ 9, 45],
        [ 9, 46],
        [ 9, 47],
        [ 9, 48],
        [ 9, 49],
        [ 9, 50],
        [ 9, 51],
        [10, 31],
        [10, 32],
        [10, 33],
        [10, 34],
        [10, 35],
        [10, 36],
        [10, 37],
        [10, 38],
        [10, 39],
        [10, 40],
        [10, 41],
        [10, 42],
        [10, 43],
        [10, 44],
        [10, 45],
        [10, 46],
        [10, 47],
        [10, 48],
        [10, 49],
        [10, 50],
        [10, 51],
        [11, 32],
        [11, 33],
        [11, 34],
        [11, 35],
        [11, 36],
        [11, 37],
        [11, 38],
        [11, 39],
        [11, 40],
        [11, 41],
        [11, 42],
        [11, 43],
        [11, 44],
        [11, 45],
        [11, 46],
        [11, 47],
        [11, 48],
        [11, 49],
        [11, 50],
        [12, 33],
        [12, 34],
        [12, 35],
        [12, 36],
        [12, 37],
        [12, 38],
        [12, 39],
        [12, 40],
        [12, 41],
        [12, 42],
        [12, 43],
        [12, 44],
        [12, 45],
        [12, 46],
        [12, 47],
        [12, 48],
        [12, 49],
        [13, 35],
        [13, 36],
        [13, 37],
        [13, 38],
        [13, 39],
        [13, 40],
        [13, 41],
        [13, 42],
        [13, 43],
        [13, 44],
        [13, 45],
        [13, 46],
        [13, 47],
        [13, 48]]) 
MatU.grad nan: 
tensor([[ 1, 34,  0],
        [ 1, 34,  1],
        [ 1, 35,  0],
        ...,
        [11, 45,  1],
        [11, 46,  0],
        [11, 46,  1]])

MatD.grad[0:10,35:45]: 
tensor([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]]) 

MatU.grad[0:10,35:45]: 
tensor([[[0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]]]) 

MatD.grad: 
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000, -0.0108,  ...,  0.0238,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0104,  ..., -0.0213,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]) 

MatU.grad[0:10,0:10]: 
tensor([[[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -21.8318,  -17.4932],
         [   7.7365,  -26.8914],
         [  19.7895,   19.7895],
         [ -16.9265,   22.2830],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -22.1064,  -22.1064],
         [  -1.2863,  -45.4675],
         [   6.2905,   58.8867],
         [  60.1941,   75.8551],
         [ -17.1239,   89.9087],
         [   5.3690,   28.8202],
         [ -24.6241,  -11.6836]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -19.7845,  -19.7845],
         [ -45.4806,   -1.2979],
         [ 266.6105,  225.8790],
         [-338.7769,  276.2790],
         [-347.5982, -253.9496],
         [ 213.3303, -367.8251],
         [-120.0779, -231.9895],
         [ 328.4002,  430.0141]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  31.2451,   33.0534],
         [ 222.9527, -377.5865],
         [-175.6545, -394.9361],
         [ 299.9423,   63.6656],
         [ 300.5691,  338.0744],
         [-387.8467, -331.4312],
         [-356.2341,  373.1154]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -73.9241,   14.0169],
         [-131.6447,  321.1703],
         [ 391.9864,  277.5122],
         [-390.2207,  163.1447],
         [-355.1605,  307.3723],
         [ 479.4215,  186.0683],
         [ -15.3671, -359.9090]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -27.6856,    4.1152],
         [ -44.3133,   -7.0058],
         [ 418.7128,  -60.1626],
         [-388.5963, -318.6688],
         [-232.3173, -360.0276],
         [ 425.1961,  259.0225],
         [-131.9242, -318.0721],
         [-291.0424,  137.2235]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -19.8121,   19.7783],
         [ -67.3408,   87.2743],
         [ 220.3708, -189.9322],
         [-302.0483, -130.2156],
         [ 382.6494, -344.4196],
         [-202.9208,  311.0588],
         [ 392.0568,   99.0715],
         [-148.9702, -396.9560]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -83.1910,  -30.9942],
         [ 353.6143,  263.5802],
         [-392.3709,  253.3961],
         [ 270.5105,  251.1340],
         [-474.2166,  262.4694],
         [-171.9281,  346.6575],
         [ -19.2520,  463.1266]]]) 

MatU.grad[10:20,10:20]: 
tensor([[[ 117.5469,  318.9756],
         [  48.1878, -305.9551],
         [-300.4724,   45.2657],
         [ 103.0931,  316.6236],
         [ 376.6962, -403.2518],
         [-301.4042,  502.5528],
         [-334.8794, -482.9172],
         [ 169.0212,  304.7395],
         [-425.8293, -392.4553],
         [-341.1638,  -47.8435]],

        [[ 272.9643,  261.8468],
         [ 352.5696, -356.6719],
         [ -70.0821,  520.5651],
         [-527.1201, -303.1927],
         [ 427.4663,   58.0599],
         [-406.0432,  -67.5366],
         [ 459.7679,   59.6675],
         [ 402.2572,  348.0424],
         [ -14.5000, -384.1729],
         [ 359.4548, -410.1653]],

        [[-368.3798, -320.9815],
         [ 142.8084,  321.5445],
         [ 202.7695, -373.6871],
         [ -94.1135,  200.4182],
         [ 210.5660,  123.4391],
         [ -10.1252,  391.3913],
         [-253.2531,  378.5430],
         [-393.6268, -391.3869],
         [-270.9966,  416.3033],
         [ 170.7333,  103.6772]],

        [[ 350.4877,  146.9629],
         [-329.2742,  182.9205],
         [-411.6106,  258.2878],
         [-194.3322,  506.1902],
         [ 367.1040, -519.5226],
         [   6.2322, -272.7355],
         [  59.5889, -388.1562],
         [ 409.4186,  176.0359],
         [  51.0466,  364.6357],
         [-364.9867, -331.8560]],

        [[ 386.0805,  347.1507],
         [ 340.4453, -395.8796],
         [ -75.9331,  355.1281],
         [-226.3306, -348.7144],
         [-422.1245,   38.8781],
         [  58.0272,  208.3787],
         [-434.4311,  226.2294],
         [ 362.0519,  458.2703],
         [ 297.6689, -481.2669],
         [ -60.3349, -332.2319]],

        [[-534.7491,  159.9758],
         [ 253.5874, -455.0238],
         [-288.5887, -345.6392],
         [ 284.1805,  123.1693],
         [-406.1111,  365.4470],
         [  57.5701, -581.4334],
         [-182.7187, -343.1284],
         [ 384.2039,  136.9048],
         [-332.8559, -340.3370],
         [ 214.9934,  219.1769]],

        [[-229.6363,  225.8846],
         [ 271.0445,  362.1728],
         [ 122.8617, -221.1508],
         [ 500.9485, -247.3966],
         [-136.8309,  313.7399],
         [ 235.0931,  236.8394],
         [ 378.9012, -346.8233],
         [-265.8959,  355.9798],
         [ 151.1234,  417.6330],
         [-379.1880, -246.7555]],

        [[ 373.6536, -397.6131],
         [-363.1976,  234.9914],
         [ -14.3357, -309.3401],
         [-116.5654, -164.4277],
         [-270.3275, -118.2493],
         [-414.7136,  364.3037],
         [ 166.7458,  325.8534],
         [-186.9354, -238.5907],
         [ 544.0245,  169.3179],
         [  -9.0762, -492.4168]],

        [[ 472.1546,  205.2214],
         [-436.1019,  408.0008],
         [ 414.3086, -264.2260],
         [-412.5236, -211.0649],
         [ 364.4907, -272.0756],
         [ 431.5859, -233.4796],
         [-370.2390, -343.4312],
         [ 267.8247,  440.1677],
         [-247.2548,  410.2906],
         [ 264.8900,  199.6157]],

        [[ 270.7785,  274.2854],
         [-300.1137,  242.3160],
         [ 298.3065,  379.4233],
         [-447.6022, -206.9776],
         [-297.9631,  368.7729],
         [ 358.2375,  366.8049],
         [-497.0354,  -74.9500],
         [ 513.0563, -222.0035],
         [ 274.9747, -406.6055],
         [-109.2697, -253.8322]]]) 

MatU.grad[20:30,20:30]:  
tensor([[[ 2.8034e+02,  3.0206e+02],
         [ 7.1463e+01, -3.7965e+02],
         [-3.8820e+02,  2.3823e+02],
         [ 1.0658e+02,  4.1335e+02],
         [-1.3916e+02, -8.9239e+01],
         [-8.0723e+00, -3.2376e+02],
         [-7.2710e+01,  4.4269e+01],
         [ 2.9727e+02, -9.8537e+00],
         [-2.1107e+02, -4.6481e+02],
         [-1.0995e+02,  1.5705e+02]],

        [[ 4.5798e+02,  2.9985e+02],
         [ 4.6805e+02, -2.5034e+02],
         [-1.4456e+02,  4.6996e+01],
         [-3.5411e+02, -2.0353e+02],
         [-1.5850e+02, -5.1556e+02],
         [ 4.6715e+02,  4.1515e+02],
         [-2.9972e+02,  1.0275e+02],
         [-3.2242e+02,  7.5337e+01],
         [ 1.4313e+02,  4.8567e+02],
         [ 2.8955e+02,  2.8819e+01]],

        [[-4.1371e+02, -3.3389e+02],
         [-3.8201e+02,  3.7471e+02],
         [-3.7393e+02, -4.6442e+02],
         [ 4.6530e+02,  4.2713e+02],
         [-3.7037e+02,  3.7416e+02],
         [ 1.6232e+02,  7.1969e+01],
         [ 1.5427e+01, -3.3635e+02],
         [ 5.2095e+02,  2.0451e+00],
         [-4.4018e+02, -1.0666e+02],
         [-2.0579e+02,  7.4239e+01]],

        [[ 1.4082e+02,  3.1228e+02],
         [-1.2834e+02, -2.9952e+02],
         [ 3.9152e+02,  1.8028e+02],
         [ 3.6426e+02, -3.3424e+02],
         [-5.0999e+02, -5.1219e+01],
         [-1.3520e+02,  2.2373e+02],
         [ 2.8462e+02, -6.3773e+01],
         [ 3.9643e+02, -5.5514e+01],
         [-2.3628e+02, -4.5073e+02],
         [-3.0575e+01, -1.5300e+02]],

        [[ 4.0237e+02,  4.1908e+02],
         [ 1.8910e+02, -4.4833e+02],
         [-1.2118e+02,  1.0891e+02],
         [-4.1506e+02, -2.9225e+02],
         [-6.0442e+01, -4.7834e+02],
         [ 5.6256e+02,  3.7916e+02],
         [-4.0485e+02,  1.9769e+02],
         [-4.1355e+02, -1.2324e+02],
         [ 3.9452e+02,  2.6707e+02],
         [-6.1230e+01, -4.1529e+02]],

        [[ 3.8945e+02, -2.9780e+02],
         [-2.7785e+02,  4.3575e+02],
         [-3.9215e+02,  3.0053e+02],
         [ 2.5642e+02,  3.6423e+02],
         [-3.0055e+02,  3.8168e+02],
         [ 4.2952e+02, -4.7959e+01],
         [ 2.6154e+01, -3.7829e+02],
         [-7.2591e+01,  1.0649e+02],
         [-1.9251e+02, -2.4313e+02],
         [ 4.5937e+02,  9.3013e+01]],

        [[ 5.3796e+01,  2.9891e+02],
         [-4.1237e+02, -4.3358e+02],
         [ 4.3197e+02,  9.1080e+01],
         [ 2.6947e+02, -4.0670e+02],
         [-5.0750e+02, -2.4021e+02],
         [-7.6231e+00,  1.9239e+01],
         [-1.0886e+02,  5.3785e+02],
         [ 1.9135e+02, -2.3318e+02],
         [ 1.9263e+02, -5.7710e+01],
         [ 2.4912e+02,  7.8262e+00]],

        [[ 2.7057e+02,  3.5341e+02],
         [ 1.3281e+01, -4.7698e+02],
         [-1.5956e+02,  1.1740e+02],
         [ 2.3659e+02, -3.0213e+02],
         [-1.9126e+02, -1.1612e+02],
         [ 4.8429e+02, -4.9482e+01],
         [-4.0057e+02, -3.9333e+02],
         [-2.3312e+02,  5.9775e+01],
         [ 1.2546e+02,  3.6510e+02],
         [-4.0289e+02, -2.9489e+02]],

        [[ 3.2509e+02,  4.7703e+02],
         [-3.4841e+02,  2.5443e+02],
         [ 2.4362e+02,  1.4411e+02],
         [ 1.2239e+02, -2.5875e+01],
         [-1.4466e+02,  5.0016e+02],
         [ 4.1677e+00,  9.0363e+01],
         [ 1.0214e+01,  3.7310e+02],
         [-5.7785e+00,  2.8459e+02],
         [-3.4001e-01, -4.2175e+02],
         [ 4.6386e+02,  6.9749e+01]],

        [[ 1.1370e+02, -3.8144e+02],
         [-3.2138e+02, -1.9758e+02],
         [-5.2436e+01,  5.3217e+02],
         [ 4.7445e+02, -1.3157e+02],
         [-2.6047e+02, -4.0717e+02],
         [ 3.4257e+02,  2.4425e+01],
         [-1.9851e+02, -2.9535e+02],
         [-2.7662e+02, -1.2952e+02],
         [ 1.3490e+02,  3.7492e+02],
         [ 1.4070e+02,  3.7481e+02]]]) 

t:1, loss.item(): nan
Optimized result :
MatD: 
has nan? True 
tensor([[0.0161, 0.0164, 0.0161,  ..., 0.0122, 0.0127, 0.0114],
        [0.0161, 0.0159, 0.0156,  ..., 0.0125, 0.0123, 0.0120],
        [0.0164, 0.0159, 0.0166,  ..., 0.0106, 0.0125, 0.0098],
        ...,
        [0.0161, 0.0161, 0.0154,  ..., 0.0149, 0.0130, 0.0127],
        [0.0161, 0.0161, 0.0156,  ..., 0.0130, 0.0125, 0.0133],
        [0.0159, 0.0159, 0.0159,  ..., 0.0114, 0.0118, 0.0112]],
       requires_grad=True) 

MatUx: 
 has nan? True 
tensor([[ 2.6441e-04, -2.6441e-04, -2.5601e-04,  ...,  4.6311e-04,
         -1.2946e-03, -1.2946e-03],
        [-2.5601e-04, -2.4802e-04,  2.4802e-04,  ..., -1.5432e-04,
         -2.9749e-04, -2.9749e-04],
        [-5.2042e-04,  1.0000e-10,  5.2043e-04,  ...,  1.5432e-04,
         -2.6961e-03, -2.6961e-03],
        ...,
        [ 1.0000e-10,  1.0000e-10, -2.5601e-04,  ..., -1.7088e-04,
         -3.2878e-04, -3.2878e-04],
        [ 1.0000e-10, -5.0403e-04,  5.0403e-04,  ..., -4.8701e-04,
          8.3333e-04,  8.3333e-04],
        [ 1.0000e-10,  1.0000e-10,  2.5602e-04,  ...,  4.0107e-04,
         -5.2875e-04, -5.2875e-04]], grad_fn=<SelectBackward>)  








test_counter in loss_omega_mat(): 455
test_counter in loss_omega_mat(): 910
test_counter in loss_omega_mat(): 1365
test_counter in loss_omega_mat(): 1820
test_counter in loss_omega_mat(): 2275
test_counter in loss_omega_mat(): 2730
test_counter in loss_omega_mat(): 3185
mat_omega_topk has nan? True 

mat_duij has nan? True 

mat_uij has nan? True 

mat_omega_topk: 
tensor([[[0.9450, 0.9445, 0.9445,  ..., 0.8913, 0.7987, 0.7983],
         [0.9450, 0.9448, 0.9444,  ..., 0.8919, 0.7994, 0.7991],
         [0.9448, 0.9444, 0.9440,  ..., 0.8921, 0.7995, 0.7994],
         ...,
         [0.9457, 0.9451, 0.9448,  ..., 0.8924, 0.8003, 0.8000],
         [0.9457, 0.9448, 0.9448,  ..., 0.8926, 0.8002, 0.7996],
         [0.9450, 0.9448, 0.9438,  ..., 0.8903, 0.7993, 0.7992]],

        [[0.9446, 0.9445, 0.9445,  ..., 0.8913, 0.7990, 0.7988],
         [0.9447, 0.9446, 0.9445,  ..., 0.8926, 0.7998, 0.7998],
         [0.9449, 0.9447, 0.9445,  ..., 0.8932, 0.8001, 0.7997],
         ...,
         [0.9457, 0.9457, 0.9448,  ..., 0.8938, 0.8001, 0.8001],
         [0.9457, 0.9457, 0.9449,  ..., 0.8935, 0.8005, 0.8004],
         [0.9452, 0.9450, 0.9449,  ..., 0.8912, 0.8002, 0.8001]],

        [[0.9448, 0.9446, 0.9445,  ..., 0.8913, 0.7998, 0.7996],
         [0.9449, 0.9448, 0.9448,  ..., 0.8932, 0.8001, 0.7997],
         [0.9449, 0.9449, 0.9448,  ..., 0.8937, 0.8001, 0.7997],
         ...,
         [0.9457, 0.9455, 0.9451,  ..., 0.8938, 0.8003, 0.8000],
         [0.9457, 0.9457, 0.9453,  ..., 0.8938, 0.8005, 0.8003],
         [0.9459, 0.9453, 0.9452,  ..., 0.8905, 0.8006, 0.7999]],

        ...,

        [[0.9453, 0.9448, 0.9436,  ..., 0.8908, 0.7996, 0.7981],
         [0.9452, 0.9428, 0.9427,  ..., 0.8910, 0.7995, 0.7984],
         [0.9453, 0.9430, 0.9428,  ..., 0.8907, 0.7997, 0.7981],
         ...,
         [0.9451, 0.9450, 0.9449,  ..., 0.8934, 0.8002, 0.8001],
         [0.9452, 0.9451, 0.9451,  ..., 0.8936, 0.8001, 0.7997],
         [0.9455, 0.9453, 0.9452,  ..., 0.8902, 0.8001, 0.7998]],

        [[0.9448, 0.9439, 0.9433,  ..., 0.8876, 0.7991, 0.7971],
         [0.9412, 0.9398, 0.9392,  ..., 0.8829, 0.7971, 0.7965],
         [0.9401, 0.9394, 0.9392,  ..., 0.8835, 0.7972, 0.7969],
         ...,
         [0.9450, 0.9449, 0.9449,  ..., 0.8934, 0.7999, 0.7997],
         [0.9455, 0.9451, 0.9451,  ..., 0.8934, 0.7999, 0.7995],
         [0.9455, 0.9455, 0.9455,  ..., 0.8911, 0.7997, 0.7995]],

        [[0.9433, 0.9429, 0.9420,  ..., 0.8867, 0.7978, 0.7946],
         [0.9395, 0.9385, 0.9366,  ..., 0.8817, 0.7916, 0.7909],
         [0.9382, 0.9344, 0.9326,  ..., 0.8829, 0.7913, 0.7911],
         ...,
         [0.9450, 0.9449, 0.9448,  ..., 0.8935, 0.7998, 0.7995],
         [0.9453, 0.9452, 0.9451,  ..., 0.8935, 0.8001, 0.7993],
         [0.9455, 0.9453, 0.9443,  ..., 0.8907, 0.7995, 0.7990]]],
       grad_fn=<SliceBackward>) 

mat_duij: 
tensor([[[8.0334e-07, 8.3951e-07, 5.5251e-08,  ..., 2.7000e-08,
          4.0229e-07, 1.0507e-07],
         [1.1928e-06, 4.3796e-09, 1.3891e-07,  ..., 5.6508e-06,
          8.2023e-07, 9.6301e-07],
         [1.4108e-06, 2.6735e-06, 1.1478e-07,  ..., 2.6861e-06,
          2.8515e-07, 2.4014e-06],
         ...,
         [5.7771e-07, 9.3915e-08, 6.0124e-06,  ..., 1.1502e-05,
          4.0482e-06, 2.3808e-07],
         [8.8896e-09, 5.9907e-06, 4.2851e-08,  ..., 1.1727e-06,
          1.7400e-07, 4.5655e-06],
         [1.4702e-06, 1.1102e-06, 4.3071e-06,  ..., 5.1937e-06,
          2.9950e-07, 4.5490e-06]],

        [[1.1119e-07, 1.1029e-06, 2.0993e-07,  ..., 4.5120e-06,
          1.1925e-06, 2.8667e-07],
         [1.0727e-06, 5.2309e-07, 2.5052e-07,  ..., 1.0729e-05,
          4.1292e-08, 5.1477e-06],
         [5.9064e-07, 9.2606e-06, 1.6198e-06,  ..., 1.2761e-05,
          5.3947e-07, 2.2209e-07],
         ...,
         [2.2972e-07, 9.4316e-07, 1.6749e-06,  ..., 5.6993e-06,
          4.6163e-08, 5.2810e-07],
         [3.5261e-07, 1.3340e-07, 1.8675e-06,  ..., 4.4696e-07,
          1.1712e-07, 2.6361e-08],
         [1.7340e-06, 2.5889e-06, 6.2374e-07,  ..., 1.0570e-05,
          6.4005e-06, 6.3042e-07]],

        [[4.5540e-06, 2.2649e-06, 1.2634e-06,  ..., 4.3087e-06,
          1.8215e-06, 1.0602e-06],
         [6.7254e-07, 1.0715e-06, 5.8481e-06,  ..., 9.6633e-06,
          2.1121e-06, 7.6915e-09],
         [6.5869e-07, 5.2070e-06, 5.0992e-08,  ..., 1.1649e-07,
          4.6897e-06, 8.2285e-08],
         ...,
         [5.1425e-07, 2.4851e-07, 3.4843e-06,  ..., 5.2451e-08,
          8.8803e-07, 5.5773e-07],
         [1.7201e-07, 1.8546e-07, 6.4725e-07,  ..., 9.3373e-07,
          3.4783e-08, 2.1983e-08],
         [2.0235e-07, 8.3147e-08, 3.0643e-07,  ..., 2.0521e-07,
          3.0659e-07, 1.5834e-06]],

        ...,

        [[6.9259e-07, 2.4479e-06, 5.4625e-06,  ..., 2.3620e-06,
          1.3626e-07, 2.9788e-07],
         [3.9859e-09, 1.6472e-05, 2.7757e-06,  ..., 4.2937e-05,
          5.8365e-08, 5.1967e-05],
         [1.3992e-07, 9.7694e-07, 6.4156e-09,  ..., 1.6646e-06,
          2.6314e-06, 6.5164e-06],
         ...,
         [1.5637e-06, 1.6546e-06, 1.5505e-07,  ..., 3.2572e-08,
          3.0938e-07, 5.6662e-07],
         [3.0165e-07, 2.4591e-08, 1.0824e-06,  ..., 1.2014e-07,
          3.9952e-08, 1.3984e-05],
         [1.0814e-06, 2.6946e-07, 1.5133e-07,  ..., 1.0348e-07,
          5.8102e-07, 7.3256e-07]],

        [[3.7087e-06, 7.8212e-09, 7.3421e-07,  ..., 8.7554e-08,
          9.7296e-06, 8.2539e-06],
         [1.7023e-05, 4.3798e-05, 6.7898e-06,  ..., 1.0827e-04,
          1.6797e-04, 3.7082e-05],
         [3.3255e-05, 1.5911e-05, 1.0872e-04,  ..., 5.8906e-05,
          9.6489e-05, 1.9944e-04],
         ...,
         [9.1514e-07, 2.6996e-08, 2.0661e-06,  ..., 1.4383e-06,
          1.0994e-08, 4.8260e-07],
         [4.4187e-09, 7.5848e-07, 3.0943e-07,  ..., 3.1034e-07,
          8.0306e-08, 8.2500e-07],
         [5.4005e-07, 3.4404e-07, 6.5023e-07,  ..., 9.1276e-07,
          3.3703e-06, 1.1923e-06]],

        [[8.5105e-08, 3.4986e-08, 6.0395e-07,  ..., 1.2986e-06,
          4.8364e-06, 1.0075e-05],
         [3.1774e-08, 8.1633e-06, 7.4724e-07,  ..., 4.9418e-06,
          2.3307e-07, 5.2324e-07],
         [1.2542e-04, 1.8229e-05, 1.9414e-05,  ..., 5.7022e-05,
          1.7687e-04, 2.1884e-05],
         ...,
         [9.8940e-07, 3.9402e-06, 4.4329e-07,  ..., 4.0200e-06,
          2.6686e-08, 2.4835e-06],
         [1.0167e-06, 2.5557e-08, 9.7816e-07,  ..., 8.2208e-07,
          6.7414e-07, 5.2564e-06],
         [4.6416e-07, 2.2625e-08, 1.9765e-07,  ..., 1.0812e-06,
          9.1971e-10, 8.8900e-07]]], grad_fn=<CopySlices>) 

mat_uij: 
tensor([[[0.0009, 0.0008, 0.0003,  ..., 0.0003, 0.0017, 0.0017],
         [0.0009, 0.0013, 0.0013,  ..., 0.0011, 0.0011, 0.0013],
         [0.0013, 0.0024, 0.0012,  ..., 0.0018, 0.0018, 0.0008],
         ...,
         [0.0006, 0.0017, 0.0013,  ..., 0.0015, 0.0013, 0.0008],
         [0.0009, 0.0013, 0.0012,  ..., 0.0006, 0.0005, 0.0009],
         [0.0007, 0.0012, 0.0017,  ..., 0.0022, 0.0010, 0.0010]],

        [[0.0016, 0.0008, 0.0018,  ..., 0.0011, 0.0016, 0.0007],
         [0.0026, 0.0016, 0.0024,  ..., 0.0020, 0.0021, 0.0008],
         [0.0010, 0.0026, 0.0011,  ..., 0.0013, 0.0021, 0.0021],
         ...,
         [0.0006, 0.0007, 0.0008,  ..., 0.0011, 0.0003, 0.0011],
         [0.0004, 0.0009, 0.0011,  ..., 0.0005, 0.0004, 0.0005],
         [0.0008, 0.0007, 0.0011,  ..., 0.0017, 0.0005, 0.0003]],

        [[0.0018, 0.0022, 0.0018,  ..., 0.0023, 0.0024, 0.0008],
         [0.0011, 0.0016, 0.0018,  ..., 0.0012, 0.0011, 0.0023],
         [0.0011, 0.0005, 0.0015,  ..., 0.0017, 0.0011, 0.0018],
         ...,
         [0.0007, 0.0014, 0.0014,  ..., 0.0013, 0.0013, 0.0003],
         [0.0004, 0.0003, 0.0006,  ..., 0.0009, 0.0006, 0.0004],
         [0.0011, 0.0006, 0.0008,  ..., 0.0010, 0.0006, 0.0012]],

        ...,

        [[0.0002, 0.0009, 0.0016,  ..., 0.0066, 0.0009, 0.0016],
         [0.0032, 0.0043, 0.0031,  ..., 0.0049, 0.0023, 0.0032],
         [0.0020, 0.0012, 0.0043,  ..., 0.0052, 0.0018, 0.0016],
         ...,
         [0.0017, 0.0017, 0.0009,  ..., 0.0011, 0.0016, 0.0009],
         [0.0013, 0.0011, 0.0017,  ..., 0.0010, 0.0010, 0.0010],
         [0.0005, 0.0005, 0.0013,  ..., 0.0014, 0.0009, 0.0009]],

        [[0.0009, 0.0005, 0.0008,  ..., 0.0010, 0.0007, 0.0021],
         [0.0072, 0.0076, 0.0124,  ..., 0.0021, 0.0053, 0.0072],
         [0.0090, 0.0087, 0.0124,  ..., 0.0074, 0.0070, 0.0066],
         ...,
         [0.0017, 0.0006, 0.0018,  ..., 0.0008, 0.0014, 0.0013],
         [0.0007, 0.0011, 0.0004,  ..., 0.0011, 0.0015, 0.0017],
         [0.0007, 0.0005, 0.0005,  ..., 0.0011, 0.0013, 0.0010]],

        [[0.0008, 0.0013, 0.0013,  ..., 0.0022, 0.0010, 0.0016],
         [0.0004, 0.0080, 0.0023,  ..., 0.0055, 0.0010, 0.0023],
         [0.0104, 0.0013, 0.0060,  ..., 0.0021, 0.0036, 0.0057],
         ...,
         [0.0006, 0.0018, 0.0010,  ..., 0.0010, 0.0010, 0.0009],
         [0.0013, 0.0011, 0.0004,  ..., 0.0008, 0.0005, 0.0015],
         [0.0005, 0.0013, 0.0020,  ..., 0.0012, 0.0010, 0.0007]]],
       grad_fn=<CopySlices>) 

loss = loss1 + lambda*loss2
loss1:nan loss2:nan
t:2, Finish constructing loss
