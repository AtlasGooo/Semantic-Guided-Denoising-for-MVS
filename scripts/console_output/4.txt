cv_MatI numpy float32: 
[[ 62  61  62 ...  82  79  88]
 [ 62  63  64 ...  80  81  83]
 [ 61  63  63 ...  81  80 102]
 ...
 [ 62  62  62 ...  76  77  79]
 [ 62  62  64 ...  77  80  75]
 [ 63  63  63 ...  88  85  89]]
MatI: 
tensor([[ 62.,  61.,  62.,  ...,  82.,  79.,  88.],
        [ 62.,  63.,  64.,  ...,  80.,  81.,  83.],
        [ 61.,  63.,  63.,  ...,  81.,  80., 102.],
        ...,
        [ 62.,  62.,  62.,  ...,  76.,  77.,  79.],
        [ 62.,  62.,  64.,  ...,  77.,  80.,  75.],
        [ 63.,  63.,  63.,  ...,  88.,  85.,  89.]])
cv_MatI[0:10,35:45]: [[ 65  65  64  65  65  60  64  66  67  68]
 [ 65  65  65  65  66  65  65  64  67  68]
 [ 64  67  68  64 125 101 125   0  99 115]
 [ 65  66  64  68  66 106   0  65 105  58]
 [ 65  66  65  67  66  65  68  66  65  67]
 [ 66  67  68  66 125 100 115  65  98 114]
 [ 66  67  66  67  64 105  66  65  66  67]
 [ 65  66  65  65  56  50  48  54  50  49]
 [ 47  75  77 118 125  77 115 124  76 114]
 [ 49  49  74  69  75  75  73  76  77  75]] 

debug:
MatD.shape: torch.Size([37, 123]) 
has nan? False 
MatD: tensor([[0.0161, 0.0164, 0.0161,  ..., 0.0122, 0.0127, 0.0114],
        [0.0161, 0.0159, 0.0156,  ..., 0.0125, 0.0123, 0.0120],
        [0.0164, 0.0159, 0.0159,  ..., 0.0123, 0.0125, 0.0098],
        ...,
        [0.0161, 0.0161, 0.0161,  ..., 0.0132, 0.0130, 0.0127],
        [0.0161, 0.0161, 0.0156,  ..., 0.0130, 0.0125, 0.0133],
        [0.0159, 0.0159, 0.0159,  ..., 0.0114, 0.0118, 0.0112]]) 

MatU.shape: torch.Size([37, 123, 2]) 
has nan? False 
MatUx: tensor([[ 2.6441e-04, -2.6441e-04, -2.5601e-04,  ...,  4.6311e-04,
         -1.2946e-03, -1.2946e-03],
        [-2.5601e-04, -2.4802e-04,  2.4802e-04,  ..., -1.5432e-04,
         -2.9749e-04, -2.9749e-04],
        [-5.2042e-04,  1.0000e-10,  5.2043e-04,  ...,  1.5432e-04,
         -2.6961e-03, -2.6961e-03],
        ...,
        [ 1.0000e-10,  1.0000e-10, -2.5601e-04,  ..., -1.7088e-04,
         -3.2878e-04, -3.2878e-04],
        [ 1.0000e-10, -5.0403e-04,  5.0403e-04,  ..., -4.8701e-04,
          8.3333e-04,  8.3333e-04],
        [ 1.0000e-10,  1.0000e-10,  2.5602e-04,  ...,  4.0107e-04,
         -5.2875e-04, -5.2875e-04]]) 




test_counter in loss_omega_mat(): 455
test_counter in loss_omega_mat(): 910
test_counter in loss_omega_mat(): 1365
test_counter in loss_omega_mat(): 1820
test_counter in loss_omega_mat(): 2275
test_counter in loss_omega_mat(): 2730
test_counter in loss_omega_mat(): 3185
mat_omega_topk has nan? False 

mat_duij has nan? False 

mat_uij has nan? False 

mat_omega_topk: tensor([[[0.9460, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         ...,
         [0.9459, 0.9458, 0.9454,  ..., 0.8940, 0.8006, 0.8002],
         [0.9459, 0.9458, 0.9455,  ..., 0.8939, 0.8006, 0.8003],
         [0.9459, 0.9458, 0.9455,  ..., 0.8943, 0.8006, 0.8006]],

        [[0.9460, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         ...,
         [0.9458, 0.9456, 0.9455,  ..., 0.8939, 0.8006, 0.8001],
         [0.9458, 0.9456, 0.9454,  ..., 0.8935, 0.8006, 0.8001],
         [0.9458, 0.9458, 0.9454,  ..., 0.8939, 0.8007, 0.8004]],

        [[0.9459, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9459,  ..., 0.8948, 0.8007, 0.8007],
         ...,
         [0.9456, 0.9456, 0.9456,  ..., 0.8935, 0.8002, 0.8002],
         [0.9456, 0.9455, 0.9452,  ..., 0.8930, 0.8002, 0.7997],
         [0.9458, 0.9456, 0.9452,  ..., 0.8932, 0.8005, 0.8001]],

        ...,

        [[0.9447, 0.9432, 0.9421,  ..., 0.8915, 0.7985, 0.7979],
         [0.9422, 0.9389, 0.9355,  ..., 0.8887, 0.7971, 0.7969],
         [0.9420, 0.9356, 0.9355,  ..., 0.8864, 0.7966, 0.7966],
         ...,
         [0.9459, 0.9459, 0.9459,  ..., 0.8947, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9458,  ..., 0.8939, 0.8007, 0.8007],
         [0.9458, 0.9456, 0.9450,  ..., 0.8935, 0.8004, 0.8003]],

        [[0.9444, 0.9421, 0.9415,  ..., 0.8887, 0.7993, 0.7981],
         [0.9371, 0.9341, 0.9335,  ..., 0.8854, 0.7946, 0.7941],
         [0.9331, 0.9331, 0.9306,  ..., 0.8834, 0.7938, 0.7935],
         ...,
         [0.9459, 0.9459, 0.9459,  ..., 0.8947, 0.8007, 0.8007],
         [0.9459, 0.9459, 0.9459,  ..., 0.8940, 0.8007, 0.8006],
         [0.9458, 0.9457, 0.9453,  ..., 0.8938, 0.8004, 0.8003]],

        [[0.9438, 0.9435, 0.9415,  ..., 0.8881, 0.7995, 0.7976],
         [0.9364, 0.9362, 0.9335,  ..., 0.8834, 0.7941, 0.7921],
         [0.9355, 0.9331, 0.9277,  ..., 0.8817, 0.7921, 0.7915],
         ...,
         [0.9459, 0.9459, 0.9458,  ..., 0.8944, 0.8007, 0.8007],
         [0.9459, 0.9458, 0.9457,  ..., 0.8938, 0.8006, 0.8006],
         [0.9458, 0.9457, 0.9455,  ..., 0.8937, 0.8003, 0.7998]]],
       grad_fn=<SliceBackward>) 

mat_duij: tensor([[[1.0000e-20, 1.0000e-20, 1.0000e-20,  ..., 4.0000e-20,
          4.0000e-20, 4.0000e-20],
         [1.0000e-20, 1.0000e-20, 1.0000e-20,  ..., 4.0000e-20,
          6.5544e-08, 6.1512e-08],
         [6.5544e-08, 6.5544e-08, 6.5544e-08,  ..., 6.5544e-08,
          4.0000e-20, 2.6217e-07],
         ...,
         [1.6585e-07, 4.9122e-07, 6.5282e-07,  ..., 3.1451e-07,
          6.6265e-08, 1.9554e-08],
         [3.6224e-06, 8.8138e-07, 8.8138e-07,  ..., 5.6621e-08,
          1.3589e-05, 6.5768e-08],
         [6.5260e-07, 2.2547e-07, 2.2547e-07,  ..., 2.1528e-07,
          1.6452e-06, 2.3720e-08]],

        [[1.0000e-20, 1.0000e-20, 1.0000e-20,  ..., 4.0000e-20,
          6.5544e-08, 4.0000e-20],
         [6.5544e-08, 7.6233e-21, 7.6233e-21,  ..., 2.6217e-07,
          2.6217e-07, 2.6217e-07],
         [7.6233e-21, 2.6217e-07, 2.6217e-07,  ..., 6.5544e-08,
          2.6217e-07, 6.5544e-08],
         ...,
         [3.3333e-07, 4.6862e-07, 6.2515e-06,  ..., 2.6612e-10,
          7.4145e-07, 1.0367e-05],
         [4.7690e-08, 2.1225e-06, 2.1225e-06,  ..., 4.5857e-06,
          1.9634e-06, 3.3157e-06],
         [2.3720e-08, 1.0273e-07, 1.0273e-07,  ..., 1.2913e-06,
          4.1091e-07, 2.2547e-07]],

        [[6.5544e-08, 6.5544e-08, 1.0000e-20,  ..., 6.5544e-08,
          2.6217e-07, 4.0000e-20],
         [2.6217e-07, 7.6233e-21, 2.6217e-07,  ..., 6.5544e-08,
          5.8989e-07, 5.8989e-07],
         [1.0000e-20, 6.5544e-08, 6.5544e-08,  ..., 0.0000e+00,
          4.0000e-20, 4.0000e-20],
         ...,
         [1.1117e-06, 6.9137e-07, 2.7732e-06,  ..., 3.0238e-06,
          6.7745e-06, 1.6086e-07],
         [4.5857e-06, 5.2633e-06, 5.2633e-06,  ..., 1.1213e-05,
          9.2682e-06, 1.7442e-05],
         [1.0000e-20, 1.0000e-20, 1.0000e-20,  ..., 5.2633e-06,
          2.7722e-08, 4.0000e-20]],

        ...,

        [[2.6774e-06, 6.9913e-08, 2.6774e-06,  ..., 1.0607e-05,
          1.0710e-05, 9.5554e-07],
         [1.1292e-09, 2.3942e-05, 1.9264e-05,  ..., 3.6305e-05,
          1.0162e-06, 9.5769e-05],
         [2.3731e-06, 2.2881e-05, 1.4040e-05,  ..., 1.5553e-07,
          1.1032e-05, 4.8858e-05],
         ...,
         [1.0000e-20, 1.2023e-08, 1.0000e-20,  ..., 0.0000e+00,
          4.0000e-20, 4.0000e-20],
         [1.0000e-20, 1.0000e-20, 1.0000e-20,  ..., 1.2540e-08,
          1.2540e-08, 1.2023e-08],
         [4.0801e-06, 5.0351e-06, 1.2540e-08,  ..., 5.0351e-06,
          1.0636e-05, 1.3535e-05]],

        [[9.0995e-06, 2.6261e-06, 2.1502e-05,  ..., 9.0047e-06,
          3.4925e-05, 1.9332e-05],
         [4.2427e-05, 1.5688e-04, 1.9142e-05,  ..., 1.3960e-04,
          4.2827e-04, 1.3011e-04],
         [6.3063e-06, 8.6310e-05, 6.3063e-06,  ..., 4.7423e-05,
          2.3525e-04, 4.6193e-04],
         ...,
         [1.0000e-20, 1.2023e-08, 1.2023e-08,  ..., 1.2023e-08,
          1.2023e-08, 4.8092e-08],
         [1.2540e-08, 1.0000e-20, 1.2540e-08,  ..., 1.2540e-08,
          4.0000e-20, 5.0159e-08],
         [7.7023e-07, 2.6708e-07, 1.3020e-07,  ..., 6.4350e-06,
          3.9173e-06, 7.2729e-07]],

        [[1.4172e-06, 3.6465e-07, 7.6205e-06,  ..., 1.6267e-05,
          5.1625e-06, 6.2726e-06],
         [6.3063e-06, 8.5251e-08, 5.5358e-05,  ..., 3.4743e-06,
          2.4853e-05, 1.3702e-06],
         [2.7662e-05, 2.0674e-04, 2.2503e-05,  ..., 6.0384e-05,
          1.0088e-04, 8.1559e-06],
         ...,
         [4.8092e-08, 1.9862e-07, 1.0376e-20,  ..., 5.4374e-12,
          1.0821e-07, 1.0821e-07],
         [3.4199e-07, 5.4388e-12, 2.2355e-07,  ..., 2.9334e-07,
          1.3679e-06, 2.0280e-07],
         [8.0364e-08, 2.1554e-07, 4.7334e-09,  ..., 8.1354e-08,
          1.6625e-06, 3.7546e-07]]], grad_fn=<CopySlices>) 

mat_uij: tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0003, 0.0003],
         [0.0000, 0.0003, 0.0004,  ..., 0.0000, 0.0004, 0.0006],
         [0.0006, 0.0006, 0.0003,  ..., 0.0004, 0.0003, 0.0003],
         ...,
         [0.0006, 0.0013, 0.0016,  ..., 0.0015, 0.0009, 0.0015],
         [0.0011, 0.0014, 0.0023,  ..., 0.0021, 0.0011, 0.0014],
         [0.0006, 0.0004, 0.0009,  ..., 0.0015, 0.0002, 0.0005]],

        [[0.0000, 0.0003, 0.0004,  ..., 0.0000, 0.0004, 0.0002],
         [0.0004, 0.0007, 0.0007,  ..., 0.0004, 0.0003, 0.0004],
         [0.0004, 0.0006, 0.0007,  ..., 0.0003, 0.0000, 0.0006],
         ...,
         [0.0013, 0.0003, 0.0021,  ..., 0.0021, 0.0011, 0.0011],
         [0.0014, 0.0007, 0.0013,  ..., 0.0009, 0.0003, 0.0014],
         [0.0004, 0.0003, 0.0004,  ..., 0.0020, 0.0002, 0.0007]],

        [[0.0003, 0.0006, 0.0004,  ..., 0.0004, 0.0003, 0.0003],
         [0.0006, 0.0004, 0.0007,  ..., 0.0008, 0.0004, 0.0003],
         [0.0000, 0.0004, 0.0004,  ..., 0.0003, 0.0003, 0.0003],
         ...,
         [0.0012, 0.0003, 0.0013,  ..., 0.0009, 0.0009, 0.0015],
         [0.0007, 0.0009, 0.0017,  ..., 0.0016, 0.0014, 0.0009],
         [0.0003, 0.0013, 0.0002,  ..., 0.0023, 0.0007, 0.0004]],

        ...,

        [[0.0016, 0.0014, 0.0044,  ..., 0.0091, 0.0016, 0.0030],
         [0.0044, 0.0033, 0.0082,  ..., 0.0069, 0.0054, 0.0049],
         [0.0037, 0.0055, 0.0082,  ..., 0.0092, 0.0032, 0.0051],
         ...,
         [0.0001, 0.0002, 0.0000,  ..., 0.0001, 0.0001, 0.0002],
         [0.0000, 0.0001, 0.0001,  ..., 0.0020, 0.0002, 0.0009],
         [0.0012, 0.0003, 0.0021,  ..., 0.0020, 0.0010, 0.0013]],

        [[0.0018, 0.0044, 0.0039,  ..., 0.0069, 0.0022, 0.0036],
         [0.0110, 0.0115, 0.0128,  ..., 0.0032, 0.0095, 0.0097],
         [0.0150, 0.0126, 0.0124,  ..., 0.0071, 0.0106, 0.0103],
         ...,
         [0.0001, 0.0002, 0.0003,  ..., 0.0006, 0.0002, 0.0001],
         [0.0001, 0.0002, 0.0005,  ..., 0.0020, 0.0003, 0.0000],
         [0.0012, 0.0002, 0.0010,  ..., 0.0018, 0.0012, 0.0004]],

        [[0.0016, 0.0035, 0.0039,  ..., 0.0104, 0.0030, 0.0014],
         [0.0022, 0.0028, 0.0128,  ..., 0.0071, 0.0057, 0.0036],
         [0.0007, 0.0150, 0.0102,  ..., 0.0087, 0.0046, 0.0061],
         ...,
         [0.0002, 0.0005, 0.0010,  ..., 0.0011, 0.0002, 0.0001],
         [0.0005, 0.0005, 0.0007,  ..., 0.0006, 0.0006, 0.0009],
         [0.0006, 0.0002, 0.0006,  ..., 0.0014, 0.0013, 0.0010]]],
       grad_fn=<CopySlices>) 

loss = loss1 + lambda*loss2
loss1:0.0 loss2:167.22467041015625
t:0, Finish constructing loss
require grad ? True True False
MatD grad and MatUx grad: torch.Size([37, 123]) torch.Size([37, 123, 2]) 

Grads has nan? MatD.grad: True 	MatU.grad: True

Where is nan? 
MatD.grad nan: tensor([[ 1, 39],
        [ 1, 40],
        [ 2, 39],
        [ 2, 40],
        [ 2, 42],
        [ 3, 39],
        [ 3, 40],
        [ 3, 41],
        [ 3, 42],
        [ 3, 43],
        [ 4, 38],
        [ 4, 39],
        [ 4, 40],
        [ 4, 41],
        [ 4, 42],
        [ 4, 43],
        [ 4, 44],
        [ 5, 38],
        [ 5, 39],
        [ 5, 40],
        [ 5, 41],
        [ 5, 42],
        [ 5, 43],
        [ 5, 44],
        [ 6, 40],
        [ 6, 41],
        [ 6, 42],
        [ 6, 43]]) 
MatU.grad nan: tensor([[ 4, 40,  0],
        [ 4, 40,  1],
        [ 4, 41,  0],
        [ 4, 41,  1]])

MatD.grad: tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0011,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ..., -0.0016,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]) 

MatU.grad[0:10,0:10]: tensor([[[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 2.5146e+01,  1.2373e+01],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 8.6572e+01, -5.0170e+01],
         [-1.5903e+01, -7.4947e+01],
         [ 6.1507e+01, -4.4660e+01],
         [-4.1713e+01, -8.0559e+01],
         [ 8.9156e+01,  2.8103e+01]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [-1.1222e+02, -8.0904e+01],
         [ 1.4050e+01, -2.8835e+01],
         [ 1.1707e+01,  4.1279e+02],
         [-4.5248e+02,  4.0540e+01],
         [ 4.0749e+02,  1.6348e+02],
         [-8.5250e+01, -1.5665e+02]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00, -2.8025e+01],
         [-5.1135e+01, -1.9816e+01],
         [-5.5598e+01,  3.1258e+01],
         [ 4.0460e+02,  4.0460e+02],
         [-2.5852e+02, -4.5335e+02],
         [-3.9703e+02, -1.9901e+01],
         [ 1.6024e+02,  2.7147e+02],
         [ 2.6293e+02, -1.8960e+02]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 4.2325e+00, -8.4796e+01],
         [ 3.9206e+02, -1.5010e+02],
         [-3.7719e+02, -4.2098e+02],
         [ 8.2120e+01, -1.4899e+02],
         [ 1.3886e+01, -6.7809e+01],
         [-2.0309e+02, -5.7344e+01],
         [ 5.8192e+02,  2.0451e+02]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 6.1090e+01,  4.1991e+01],
         [-2.1455e+01,  4.2874e+02],
         [ 7.6156e+01,  1.0522e+02],
         [ 3.9773e+01,  2.9707e+02],
         [-2.9939e+01, -1.5030e+02],
         [ 2.4014e+02,  4.2041e+02],
         [ 2.6624e+02, -4.4338e+02]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 7.7739e+01, -1.9394e-01],
         [-3.5255e+02,  1.6616e+02],
         [ 1.7306e+02,  2.7309e+02],
         [-3.3883e+02,  2.6611e+02],
         [ 4.9380e+02, -1.4257e+02],
         [-5.1911e+02, -3.6161e+02],
         [ 1.9150e+02,  3.4073e+02]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00],
         [ 8.8842e+01,  6.1726e-01],
         [-2.4216e+02, -3.1910e+02],
         [ 3.3123e+02, -3.7228e+02],
         [-5.1855e+02, -3.3620e+02],
         [ 3.0953e+01, -4.3109e+01],
         [ 1.5645e+02, -1.4209e+02],
         [ 3.3396e+02, -5.8559e-01]]]) 

MatU.grad[10:20,10:20]: tensor([[[-585.1490, -156.1891],
         [ 446.0198,  205.9089],
         [  94.7641, -463.1649],
         [-364.9140, -299.4767],
         [-127.3682,  128.7963],
         [ 199.5378,  -37.4100],
         [ 352.8670,    4.1646],
         [-542.7241, -183.6602],
         [ 139.7976,  123.4425],
         [ 196.6683,  469.2116]],

        [[-335.9976, -231.9882],
         [-230.3198,  215.9290],
         [ 153.8904,  530.4575],
         [  60.9625,  310.5788],
         [-102.1823, -447.5497],
         [ 135.2411,  488.3094],
         [ -66.0035, -476.1005],
         [-305.3351,  -25.9096],
         [ 479.3369,  271.2061],
         [-437.0287,  197.1397]],

        [[  59.5621,   42.1134],
         [ 566.5951,  -53.8259],
         [-294.4734, -488.9924],
         [-528.9927,  -45.1036],
         [ 487.8113,  402.9980],
         [-449.2108,  -85.6986],
         [ 334.7124, -175.4483],
         [  67.0285,  386.0750],
         [ 394.3261, -114.0574],
         [-427.5810, -434.4211]],

        [[ -73.8722,  -14.1169],
         [   7.5128,  -26.4452],
         [  17.6310,  -93.1054],
         [ 213.1668,   -9.4122],
         [ -37.8199,  112.9548],
         [-370.8240,  316.7086],
         [ 520.6078,  335.9236],
         [-187.3443, -234.8195],
         [-508.7582, -113.8677],
         [ 337.1807,  109.7878]],

        [[ -40.5527,  -75.1645],
         [ -51.4511,  595.7000],
         [  82.8548,  -39.9064],
         [ 176.7063,  492.0381],
         [ 149.2263, -414.8939],
         [-448.1221, -330.1252],
         [ 253.6831, -381.3142],
         [-210.6090,   -2.0768],
         [ -21.5262,   51.6931],
         [ 558.4421,  109.5957]],

        [[ 549.0851,  -61.2173],
         [-447.2078,   38.5029],
         [ 582.8112,    6.4967],
         [-409.4901, -462.3698],
         [ 199.6121,  -94.6824],
         [-463.4799,   74.6926],
         [ 367.8957,  256.8787],
         [-122.9251, -493.4527],
         [ 295.4229,  323.5256],
         [-321.4349, -341.3242]],

        [[ 563.3396,  -22.2103],
         [-238.1141, -437.3963],
         [-316.9209,  100.1968],
         [ -17.4543,  105.4394],
         [ 481.7838, -166.7807],
         [-336.6743, -225.6898],
         [-132.9661,  309.8182],
         [ 525.7461, -174.5236],
         [-539.3356,  -69.5723],
         [  21.4039,  385.2906]],

        [[ -40.3766,  504.1535],
         [ 303.3399,  -14.1553],
         [-327.0179,   94.2049],
         [-578.0860,   65.5105],
         [ 375.8995,  453.2036],
         [ 122.7732, -199.5042],
         [-466.5464, -225.9005],
         [ 450.5108,  412.1999],
         [ -44.7297, -277.0034],
         [ 544.0659,   36.1308]],

        [[-530.5098, -105.5383],
         [ 357.3361,   -9.6327],
         [-341.3911,   73.6799],
         [ 233.6259,   69.1233],
         [-453.2875,   33.4886],
         [ -75.8462,  382.5146],
         [ 312.3264,   18.5208],
         [-163.2765, -213.5188],
         [ 353.3139,  -66.3824],
         [-143.6073, -458.3197]],

        [[-341.4053, -119.4361],
         [ 445.3792,  -17.0563],
         [-297.0046, -528.3790],
         [  99.5799,  131.9403],
         [ 224.1152, -319.5041],
         [-336.1572, -219.9550],
         [  79.0160,  612.7747],
         [ -17.1195,  325.6225],
         [-384.5723,   78.3041],
         [ 290.5270,  515.0600]]]) 

MatU.grad[20:30,20:30]:  tensor([[[-580.0094,  -48.3845],
         [ 530.2443,  139.5760],
         [  42.5061, -611.5210],
         [-456.3491, -234.4474],
         [ 366.2870,  290.1114],
         [ -94.4237, -509.4729],
         [  43.6477,  155.7214],
         [ 303.0686,  -60.8727],
         [-228.6429, -465.5358],
         [ 269.9425,  -48.9645]],

        [[-300.5220,  -80.7906],
         [-486.2643,  267.1289],
         [ 266.7530,  540.4310],
         [ 170.4326,  285.4300],
         [-553.8574,  120.9174],
         [ 452.0792,  429.2332],
         [-407.0357, -208.4821],
         [-320.8405,  120.9005],
         [ 167.4250,  515.0928],
         [ 319.8752,  301.5030]],

        [[   0.8241,  391.9199],
         [ 180.9590, -371.0873],
         [  59.7414,   65.2093],
         [ -13.9742, -201.7873],
         [ 103.7282, -375.8524],
         [-237.7829, -257.3229],
         [  88.0271,   65.8599],
         [ 518.4298,   48.2502],
         [-443.5248, -129.3961],
         [  34.7165, -266.3802]],

        [[-568.0453, -211.1152],
         [ 444.4269,  182.0097],
         [-178.3371, -616.1036],
         [-363.7436,   76.0406],
         [  79.4518,  443.4744],
         [ 226.4285, -282.7781],
         [ 267.2921,  183.2096],
         [ 397.5135, -110.0801],
         [-256.6195, -451.0111],
         [ 162.2137,  177.6703]],

        [[-206.4733,  -63.1984],
         [-491.2246,  106.2400],
         [ 348.2343,  523.8224],
         [ 119.6435,  247.7246],
         [-583.9799,   59.1723],
         [ 478.7981,  405.3532],
         [-401.6851, -235.0026],
         [-434.6371,   95.9107],
         [ 394.8886,  306.6702],
         [  25.1685, -427.1767]],

        [[-155.2986,  388.5783],
         [ 415.9674, -117.9488],
         [ 107.2209, -233.6456],
         [-238.9571, -344.2982],
         [ 272.0084, -220.5640],
         [ -44.2508, -336.6951],
         [-215.7267,  175.1570],
         [ 224.5901, -190.3006],
         [-302.1725, -276.5007],
         [ 435.4228,  224.6984]],

        [[-554.1385, -171.0259],
         [ 195.1936,  156.9958],
         [ -25.6515, -598.2354],
         [-285.9476,   81.1334],
         [ 135.3000,  242.7513],
         [ 295.4141, -317.3106],
         [-145.2010,  538.9970],
         [ -11.5362,   47.5741],
         [ 214.1360, -232.4766],
         [ 269.2967, -126.3188]],

        [[-338.8760, -257.7783],
         [-540.1505,  236.3804],
         [ 404.8471,  370.1785],
         [ -59.2685,   63.2513],
         [-384.5937,   21.5927],
         [ 493.5225, -107.9725],
         [-389.3543, -418.4982],
         [-241.1287,  123.9418],
         [ 204.1706,  354.2538],
         [-431.7287,   18.3885]],

        [[ -14.8585,  -67.7941],
         [ 317.1995, -312.0332],
         [ -44.3659, -416.4389],
         [ -49.3311,  154.1482],
         [-163.7797,  502.9045],
         [ -15.3391,   93.8717],
         [   6.9507,  375.5336],
         [  26.0595,  284.5550],
         [-128.3557, -461.7674],
         [ 457.0745,  -75.7237]],

        [[-462.2928,  122.4199],
         [  85.8483,  237.4527],
         [  40.8550,  548.9706],
         [ 473.0669, -160.8629],
         [-262.6549, -413.3379],
         [ 385.4167,  -12.5595],
         [-225.9665, -341.3745],
         [-276.4047, -141.5362],
         [ 172.7603,  405.0842],
         [ 215.8787,  390.1227]]]) 

t:0, loss.item(): 1672.2467041015625
Optimized result :
MatD: 
has nan? True 
tensor([[0.0161, 0.0164, 0.0161,  ..., 0.0122, 0.0127, 0.0114],
        [0.0161, 0.0159, 0.0156,  ..., 0.0125, 0.0123, 0.0120],
        [0.0164, 0.0159, 0.0159,  ..., 0.0113, 0.0125, 0.0098],
        ...,
        [0.0161, 0.0161, 0.0161,  ..., 0.0142, 0.0130, 0.0127],
        [0.0161, 0.0161, 0.0156,  ..., 0.0130, 0.0125, 0.0133],
        [0.0159, 0.0159, 0.0159,  ..., 0.0114, 0.0118, 0.0112]],
       requires_grad=True) 

MatUx: 
 has nan? True 
tensor([[ 2.6441e-04, -2.6441e-04, -2.5601e-04,  ...,  4.6311e-04,
         -1.2946e-03, -1.2946e-03],
        [-2.5601e-04, -2.4802e-04,  2.4802e-04,  ..., -1.5432e-04,
         -2.9749e-04, -2.9749e-04],
        [-5.2042e-04,  1.0000e-10,  5.2043e-04,  ...,  1.5432e-04,
         -2.6961e-03, -2.6961e-03],
        ...,
        [ 1.0000e-10,  1.0000e-10, -2.5601e-04,  ..., -1.7088e-04,
         -3.2878e-04, -3.2878e-04],
        [ 1.0000e-10, -5.0403e-04,  5.0403e-04,  ..., -4.8701e-04,
          8.3333e-04,  8.3333e-04],
        [ 1.0000e-10,  1.0000e-10,  2.5602e-04,  ...,  4.0107e-04,
         -5.2875e-04, -5.2875e-04]], grad_fn=<SelectBackward>)  








test_counter in loss_omega_mat(): 455
test_counter in loss_omega_mat(): 910
test_counter in loss_omega_mat(): 1365
test_counter in loss_omega_mat(): 1820
test_counter in loss_omega_mat(): 2275
test_counter in loss_omega_mat(): 2730
test_counter in loss_omega_mat(): 3185
mat_omega_topk has nan? True 

mat_duij has nan? True 

mat_uij has nan? True 

mat_omega_topk: tensor([[[0.9451, 0.9449, 0.9446,  ..., 0.8925, 0.7994, 0.7993],
         [0.9450, 0.9449, 0.9440,  ..., 0.8925, 0.7995, 0.7993],
         [0.9450, 0.9447, 0.9440,  ..., 0.8925, 0.7996, 0.7996],
         ...,
         [0.9454, 0.9447, 0.9447,  ..., 0.8926, 0.8002, 0.7991],
         [0.9455, 0.9447, 0.9444,  ..., 0.8929, 0.8002, 0.7989],
         [0.9452, 0.9447, 0.9445,  ..., 0.8923, 0.7996, 0.7990]],

        [[0.9446, 0.9445, 0.9444,  ..., 0.8926, 0.7991, 0.7989],
         [0.9444, 0.9443, 0.9443,  ..., 0.8925, 0.7996, 0.7994],
         [0.9443, 0.9443, 0.9440,  ..., 0.8925, 0.7996, 0.7992],
         ...,
         [0.9456, 0.9454, 0.9445,  ..., 0.8932, 0.8002, 0.8001],
         [0.9456, 0.9455, 0.9446,  ..., 0.8928, 0.8002, 0.8000],
         [0.9455, 0.9452, 0.9449,  ..., 0.8932, 0.8001, 0.7998]],

        [[0.9448, 0.9447, 0.9447,  ..., 0.8927, 0.7996, 0.7996],
         [0.9447, 0.9447, 0.9446,  ..., 0.8929, 0.8000, 0.7993],
         [0.9447, 0.9444, 0.9443,  ..., 0.8933, 0.7996, 0.7996],
         ...,
         [0.9456, 0.9454, 0.9448,  ..., 0.8935, 0.8002, 0.8001],
         [0.9456, 0.9455, 0.9450,  ..., 0.8936, 0.8002, 0.8002],
         [0.9456, 0.9455, 0.9450,  ..., 0.8935, 0.8001, 0.8000]],

        ...,

        [[0.9447, 0.9445, 0.9435,  ..., 0.8910, 0.7989, 0.7988],
         [0.9437, 0.9407, 0.9401,  ..., 0.8912, 0.7978, 0.7970],
         [0.9435, 0.9405, 0.9401,  ..., 0.8893, 0.7980, 0.7974],
         ...,
         [0.9442, 0.9438, 0.9435,  ..., 0.8931, 0.8001, 0.7993],
         [0.9445, 0.9441, 0.9440,  ..., 0.8929, 0.7998, 0.7990],
         [0.9451, 0.9446, 0.9440,  ..., 0.8917, 0.7994, 0.7993]],

        [[0.9447, 0.9439, 0.9436,  ..., 0.8888, 0.7990, 0.7987],
         [0.9393, 0.9369, 0.9362,  ..., 0.8839, 0.7961, 0.7947],
         [0.9366, 0.9360, 0.9355,  ..., 0.8842, 0.7960, 0.7953],
         ...,
         [0.9442, 0.9442, 0.9438,  ..., 0.8932, 0.7996, 0.7996],
         [0.9448, 0.9446, 0.9445,  ..., 0.8931, 0.7997, 0.7997],
         [0.9453, 0.9451, 0.9446,  ..., 0.8920, 0.7996, 0.7993]],

        [[0.9442, 0.9439, 0.9421,  ..., 0.8890, 0.7988, 0.7985],
         [0.9375, 0.9367, 0.9362,  ..., 0.8840, 0.7925, 0.7909],
         [0.9360, 0.9347, 0.9297,  ..., 0.8839, 0.7905, 0.7902],
         ...,
         [0.9452, 0.9444, 0.9443,  ..., 0.8930, 0.7995, 0.7995],
         [0.9454, 0.9451, 0.9448,  ..., 0.8936, 0.7999, 0.7993],
         [0.9454, 0.9453, 0.9451,  ..., 0.8923, 0.7995, 0.7994]]],
       grad_fn=<SliceBackward>) 

mat_duij: tensor([[[1.0000e-06, 1.0000e-06, 1.0000e-06,  ..., 5.4210e-20,
          2.2849e-06, 9.0000e-06],
         [1.0000e-06, 1.0000e-06, 1.0000e-06,  ..., 3.0415e-06,
          5.0536e-06, 4.0000e-06],
         [5.5351e-07, 5.5351e-07, 5.5351e-07,  ..., 1.4017e-05,
          3.0415e-06, 9.9913e-07],
         ...,
         [8.9480e-08, 3.5135e-07, 3.6874e-08,  ..., 1.1828e-05,
          3.4602e-06, 1.4255e-07],
         [3.7429e-09, 8.1590e-07, 4.7333e-06,  ..., 5.1306e-06,
          1.2458e-06, 9.8352e-08],
         [2.7580e-07, 2.7580e-07, 4.8056e-06,  ..., 1.4313e-06,
          7.8116e-07, 2.3720e-08]],

        [[1.0000e-06, 1.0000e-06, 9.0000e-06,  ..., 4.0000e-06,
          4.0000e-06, 6.5543e-08],
         [1.0000e-06, 5.5351e-07, 1.0000e-06,  ..., 1.2166e-05,
          2.6218e-07, 1.2166e-05],
         [6.1900e-06, 1.0000e-06, 1.0000e-06,  ..., 1.0446e-05,
          6.3979e-11, 2.2141e-06],
         ...,
         [2.8377e-06, 1.7864e-07, 2.8377e-06,  ..., 3.9350e-06,
          6.0872e-07, 2.5344e-06],
         [2.0874e-07, 6.1093e-07, 2.3812e-06,  ..., 2.5738e-06,
          1.1375e-06, 7.9386e-07],
         [4.6170e-07, 7.1569e-07, 4.6170e-07,  ..., 1.0270e-05,
          1.8468e-06, 6.8927e-06]],

        [[1.0000e-06, 5.5351e-07, 7.5295e-06,  ..., 3.0415e-06,
          7.0459e-11, 4.0000e-06],
         [6.1900e-06, 1.0000e-06, 1.0000e-06,  ..., 1.0446e-05,
          3.0415e-06, 1.0446e-05],
         [5.5351e-07, 1.0000e-06, 9.0000e-06,  ..., 5.4210e-20,
          4.0000e-06, 4.0000e-06],
         ...,
         [3.3543e-06, 2.9548e-09, 4.2204e-06,  ..., 1.3979e-05,
          5.7651e-06, 3.6335e-07],
         [1.3029e-06, 1.6749e-06, 4.9816e-07,  ..., 6.1965e-08,
          8.1561e-08, 1.0907e-06],
         [1.0000e-06, 1.0000e-06, 1.0000e-06,  ..., 2.8207e-06,
          1.1950e-05, 1.1064e-05]],

        ...,

        [[1.8597e-06, 5.4109e-07, 1.8597e-06,  ..., 1.5795e-06,
          9.5554e-07, 3.0415e-06],
         [9.3392e-07, 1.5156e-05, 1.1486e-05,  ..., 4.1019e-06,
          9.0484e-06, 3.3480e-05],
         [2.9213e-07, 3.1806e-06, 7.5458e-06,  ..., 1.5553e-07,
          4.6054e-07, 2.4899e-05],
         ...,
         [9.0000e-06, 7.9272e-07, 1.0000e-06,  ..., 1.2197e-19,
          4.0000e-06, 4.0000e-06],
         [1.0000e-06, 1.0000e-06, 1.0000e-06,  ..., 1.2540e-08,
          4.4605e-06, 5.4210e-20],
         [1.0403e-06, 5.7170e-07, 7.8858e-07,  ..., 9.8741e-06,
          2.8191e-06, 4.9460e-06]],

        [[6.8671e-06, 2.6800e-06, 4.0664e-06,  ..., 1.5244e-08,
          2.1279e-05, 3.6471e-06],
         [3.0400e-05, 9.0726e-05, 2.8892e-05,  ..., 1.3960e-04,
          2.7871e-04, 8.8486e-05],
         [6.8730e-05, 1.2329e-05, 1.2329e-05,  ..., 9.7361e-05,
          1.7790e-04, 7.5100e-05],
         ...,
         [9.0000e-06, 7.9272e-07, 1.2313e-06,  ..., 4.0093e-06,
          5.4210e-20, 1.0975e-07],
         [1.2365e-06, 7.8858e-07, 7.8858e-07,  ..., 4.4605e-06,
          4.0000e-06, 4.4605e-06],
         [2.3349e-07, 1.4975e-08, 4.0853e-07,  ..., 2.7593e-09,
          1.0026e-05, 1.3160e-06]],

        [[1.5692e-07, 3.0994e-06, 3.6282e-08,  ..., 9.7273e-08,
          2.0291e-05, 1.8251e-05],
         [5.0130e-07, 2.2838e-06, 1.9716e-05,  ..., 5.4069e-08,
          8.9121e-06, 6.8796e-07],
         [1.7898e-04, 1.8143e-05, 1.4016e-05,  ..., 5.3388e-05,
          2.3579e-05, 2.2366e-04],
         ...,
         [1.0000e-06, 1.0000e-06, 6.5246e-06,  ..., 4.0093e-06,
          8.9517e-06, 6.1263e-06],
         [2.7793e-07, 2.7793e-07, 1.7239e-07,  ..., 1.6984e-06,
          2.3717e-06, 7.3013e-06],
         [5.1339e-07, 2.8701e-07, 8.6713e-07,  ..., 1.4393e-06,
          1.9245e-06, 8.4546e-07]]], grad_fn=<CopySlices>) 

mat_uij: tensor([[[1.4142e-03, 2.0000e-03, 1.4142e-03,  ..., 2.4664e-03,
          7.2351e-04, 1.5992e-03],
         [1.7440e-03, 2.0000e-03, 1.7627e-03,  ..., 1.7627e-03,
          1.8230e-03, 2.5070e-03],
         [1.7440e-03, 1.5331e-03, 2.2925e-03,  ..., 1.7627e-03,
          1.0522e-03, 4.8865e-04],
         ...,
         [7.4836e-04, 6.2109e-04, 1.6446e-03,  ..., 1.4162e-03,
          5.8190e-04, 4.1779e-04],
         [1.0483e-03, 1.1855e-03, 2.6707e-04,  ..., 1.6998e-03,
          6.0980e-04, 1.7388e-03],
         [1.8614e-03, 2.0664e-03, 2.2566e-03,  ..., 1.5239e-03,
          1.9424e-03, 2.4981e-03]],

        [[2.6536e-03, 2.0000e-03, 2.0000e-03,  ..., 1.4142e-03,
          5.2042e-04, 1.7627e-03],
         [2.1043e-03, 1.7627e-03, 2.1043e-03,  ..., 2.4664e-03,
          2.2977e-03, 1.7440e-03],
         [2.1043e-03, 2.5614e-04, 1.7627e-03,  ..., 1.7627e-03,
          2.1156e-03, 1.1642e-10],
         ...,
         [2.6695e-04, 7.4836e-04, 1.0907e-03,  ..., 7.1241e-04,
          9.3790e-04, 1.9500e-03],
         [7.0139e-04, 1.0483e-03, 1.5979e-03,  ..., 7.8242e-04,
          1.5438e-03, 1.4106e-03],
         [3.2051e-04, 1.8614e-03, 1.8616e-03,  ..., 1.5330e-03,
          6.9207e-04, 1.1813e-03]],

        [[3.5645e-04, 2.2871e-03, 1.5098e-03,  ..., 1.7440e-03,
          2.2740e-03, 2.5602e-04],
         [1.5098e-03, 1.7627e-03, 2.2925e-03,  ..., 1.7627e-03,
          1.7627e-03, 1.7627e-03],
         [1.7627e-03, 1.7440e-03, 1.1642e-10,  ..., 1.7627e-03,
          2.0000e-03, 2.5602e-04],
         ...,
         [2.6695e-04, 1.9702e-03, 5.8488e-04,  ..., 1.2822e-03,
          5.8190e-04, 9.4474e-04],
         [7.0139e-04, 9.3320e-04, 1.2833e-03,  ..., 1.1838e-03,
          1.3451e-03, 6.0980e-04],
         [6.9301e-04, 3.2051e-04, 2.7161e-03,  ..., 2.1780e-03,
          9.4564e-04, 1.8202e-03]],

        ...,

        [[1.6164e-03, 1.3988e-03, 3.6372e-04,  ..., 8.1619e-03,
          1.3141e-03, 1.4234e-03],
         [4.5944e-03, 3.2956e-03, 6.2112e-03,  ..., 4.3391e-03,
          3.8556e-03, 2.9367e-03],
         [3.2498e-03, 2.7301e-03, 6.2112e-03,  ..., 7.1725e-03,
          3.1913e-03, 2.9156e-03],
         ...,
         [1.8904e-03, 1.8935e-03, 2.0000e-03,  ..., 2.0031e-03,
          2.7504e-03, 2.1161e-03],
         [1.1198e-04, 1.8880e-03, 1.7303e-04,  ..., 1.8312e-03,
          1.5837e-04, 1.4196e-03],
         [1.9979e-03, 2.5040e-04, 1.7303e-04,  ..., 6.7629e-04,
          1.8853e-03, 2.1161e-03]],

        [[1.6164e-03, 1.3700e-03, 1.8265e-03,  ..., 1.4023e-03,
          1.5707e-03, 2.2099e-04],
         [9.0847e-03, 1.0199e-02, 1.0243e-02,  ..., 3.2489e-03,
          6.9107e-03, 7.7602e-03],
         [1.0788e-02, 1.2167e-02, 1.0518e-02,  ..., 7.7904e-03,
          7.8401e-03, 1.2539e-02],
         ...,
         [1.8904e-03, 2.5970e-03, 1.5673e-04,  ..., 1.1201e-04,
          7.9667e-04, 1.7408e-03],
         [1.5313e-03, 1.8953e-03, 1.1198e-04,  ..., 2.0031e-03,
          1.7772e-03, 1.7140e-03],
         [1.8826e-04, 1.9979e-03, 1.8953e-03,  ..., 1.8426e-03,
          1.7408e-03, 1.6834e-03]],

        [[1.5124e-03, 1.3700e-03, 8.0653e-04,  ..., 2.2404e-03,
          1.4234e-03, 1.4285e-03],
         [8.6164e-04, 3.0223e-03, 1.0243e-02,  ..., 7.4765e-03,
          3.0717e-03, 1.6372e-03],
         [1.2167e-02, 7.3448e-04, 8.0066e-03,  ..., 3.2489e-03,
          5.4810e-03, 5.9941e-03],
         ...,
         [2.2346e-03, 2.0579e-03, 2.3601e-03,  ..., 1.1278e-03,
          1.4022e-03, 9.9021e-04],
         [1.6083e-03, 1.5003e-03, 1.5313e-03,  ..., 1.4325e-03,
          1.3532e-03, 2.4823e-03],
         [1.5136e-03, 1.8826e-04, 1.5003e-03,  ..., 1.8635e-03,
          9.9021e-04, 1.3897e-03]]], grad_fn=<CopySlices>) 

loss = loss1 + lambda*loss2
loss1:nan loss2:nan
t:1, Finish constructing loss
require grad ? True True False
MatD grad and MatUx grad: torch.Size([37, 123]) torch.Size([37, 123, 2]) 

Grads has nan? MatD.grad: True 	MatU.grad: True

Where is nan? 
MatD.grad nan: tensor([[ 0, 32],
        [ 0, 33],
        [ 0, 34],
        [ 0, 35],
        [ 0, 36],
        [ 0, 37],
        [ 0, 38],
        [ 0, 39],
        [ 0, 40],
        [ 0, 41],
        [ 0, 42],
        [ 0, 43],
        [ 0, 44],
        [ 0, 45],
        [ 0, 46],
        [ 0, 47],
        [ 0, 48],
        [ 0, 49],
        [ 0, 50],
        [ 1, 32],
        [ 1, 33],
        [ 1, 34],
        [ 1, 35],
        [ 1, 36],
        [ 1, 37],
        [ 1, 38],
        [ 1, 39],
        [ 1, 40],
        [ 1, 41],
        [ 1, 42],
        [ 1, 43],
        [ 1, 44],
        [ 1, 45],
        [ 1, 46],
        [ 1, 47],
        [ 1, 48],
        [ 1, 49],
        [ 1, 50],
        [ 2, 32],
        [ 2, 33],
        [ 2, 34],
        [ 2, 35],
        [ 2, 36],
        [ 2, 37],
        [ 2, 38],
        [ 2, 39],
        [ 2, 40],
        [ 2, 41],
        [ 2, 42],
        [ 2, 43],
        [ 2, 44],
        [ 2, 45],
        [ 2, 46],
        [ 2, 47],
        [ 2, 48],
        [ 2, 49],
        [ 2, 50],
        [ 3, 31],
        [ 3, 32],
        [ 3, 33],
        [ 3, 34],
        [ 3, 35],
        [ 3, 36],
        [ 3, 37],
        [ 3, 38],
        [ 3, 39],
        [ 3, 40],
        [ 3, 41],
        [ 3, 42],
        [ 3, 43],
        [ 3, 44],
        [ 3, 45],
        [ 3, 46],
        [ 3, 47],
        [ 3, 48],
        [ 3, 49],
        [ 3, 50],
        [ 3, 51],
        [ 4, 31],
        [ 4, 32],
        [ 4, 33],
        [ 4, 34],
        [ 4, 35],
        [ 4, 36],
        [ 4, 37],
        [ 4, 38],
        [ 4, 39],
        [ 4, 40],
        [ 4, 41],
        [ 4, 42],
        [ 4, 43],
        [ 4, 44],
        [ 4, 45],
        [ 4, 46],
        [ 4, 47],
        [ 4, 48],
        [ 4, 49],
        [ 4, 50],
        [ 4, 51],
        [ 5, 31],
        [ 5, 32],
        [ 5, 33],
        [ 5, 34],
        [ 5, 35],
        [ 5, 36],
        [ 5, 37],
        [ 5, 38],
        [ 5, 39],
        [ 5, 40],
        [ 5, 41],
        [ 5, 42],
        [ 5, 43],
        [ 5, 44],
        [ 5, 45],
        [ 5, 46],
        [ 5, 47],
        [ 5, 48],
        [ 5, 49],
        [ 5, 50],
        [ 5, 51],
        [ 6, 31],
        [ 6, 32],
        [ 6, 33],
        [ 6, 34],
        [ 6, 35],
        [ 6, 36],
        [ 6, 37],
        [ 6, 38],
        [ 6, 39],
        [ 6, 40],
        [ 6, 41],
        [ 6, 42],
        [ 6, 43],
        [ 6, 44],
        [ 6, 45],
        [ 6, 46],
        [ 6, 47],
        [ 6, 48],
        [ 6, 49],
        [ 6, 50],
        [ 6, 51],
        [ 7, 31],
        [ 7, 32],
        [ 7, 33],
        [ 7, 34],
        [ 7, 35],
        [ 7, 36],
        [ 7, 37],
        [ 7, 38],
        [ 7, 39],
        [ 7, 40],
        [ 7, 41],
        [ 7, 42],
        [ 7, 43],
        [ 7, 44],
        [ 7, 45],
        [ 7, 46],
        [ 7, 47],
        [ 7, 48],
        [ 7, 49],
        [ 7, 50],
        [ 7, 51],
        [ 8, 31],
        [ 8, 32],
        [ 8, 33],
        [ 8, 34],
        [ 8, 35],
        [ 8, 36],
        [ 8, 37],
        [ 8, 38],
        [ 8, 39],
        [ 8, 40],
        [ 8, 41],
        [ 8, 42],
        [ 8, 43],
        [ 8, 44],
        [ 8, 45],
        [ 8, 46],
        [ 8, 47],
        [ 8, 48],
        [ 8, 49],
        [ 8, 50],
        [ 8, 51],
        [ 9, 31],
        [ 9, 32],
        [ 9, 33],
        [ 9, 34],
        [ 9, 35],
        [ 9, 36],
        [ 9, 37],
        [ 9, 38],
        [ 9, 39],
        [ 9, 40],
        [ 9, 41],
        [ 9, 42],
        [ 9, 43],
        [ 9, 44],
        [ 9, 45],
        [ 9, 46],
        [ 9, 47],
        [ 9, 48],
        [ 9, 49],
        [ 9, 50],
        [ 9, 51],
        [10, 31],
        [10, 32],
        [10, 33],
        [10, 34],
        [10, 35],
        [10, 36],
        [10, 37],
        [10, 38],
        [10, 39],
        [10, 40],
        [10, 41],
        [10, 42],
        [10, 43],
        [10, 44],
        [10, 45],
        [10, 46],
        [10, 47],
        [10, 48],
        [10, 49],
        [10, 50],
        [10, 51],
        [11, 32],
        [11, 33],
        [11, 34],
        [11, 35],
        [11, 36],
        [11, 37],
        [11, 38],
        [11, 39],
        [11, 40],
        [11, 41],
        [11, 42],
        [11, 43],
        [11, 44],
        [11, 45],
        [11, 46],
        [11, 47],
        [11, 48],
        [11, 49],
        [11, 50],
        [12, 33],
        [12, 34],
        [12, 35],
        [12, 36],
        [12, 37],
        [12, 38],
        [12, 39],
        [12, 40],
        [12, 41],
        [12, 42],
        [12, 43],
        [12, 44],
        [12, 45],
        [12, 46],
        [12, 47],
        [12, 48],
        [12, 49],
        [13, 35],
        [13, 36],
        [13, 37],
        [13, 38],
        [13, 39],
        [13, 40],
        [13, 41],
        [13, 42],
        [13, 43],
        [13, 44],
        [13, 45],
        [13, 46],
        [13, 47],
        [13, 48]]) 
MatU.grad nan: tensor([[ 1, 34,  0],
        [ 1, 34,  1],
        [ 1, 35,  0],
        ...,
        [11, 45,  1],
        [11, 46,  0],
        [11, 46,  1]])

MatD.grad: tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000, -0.0108,  ...,  0.0238,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0104,  ..., -0.0213,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]) 

MatU.grad[0:10,0:10]: tensor([[[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -21.8318,  -17.4932],
         [   7.7365,  -26.8914],
         [  19.7895,   19.7895],
         [ -16.9265,   22.2830],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -22.1064,  -22.1064],
         [  -1.2863,  -45.4675],
         [   6.2905,   58.8867],
         [  60.1941,   75.8551],
         [ -17.1239,   89.9087],
         [   5.3690,   28.8202],
         [ -24.6241,  -11.6836]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -19.7845,  -19.7845],
         [ -45.4806,   -1.2979],
         [ 266.6105,  225.8790],
         [-338.7769,  276.2790],
         [-347.5982, -253.9496],
         [ 213.3303, -367.8251],
         [-120.0779, -231.9895],
         [ 328.4002,  430.0141]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  31.2451,   33.0534],
         [ 222.9527, -377.5865],
         [-175.6545, -394.9361],
         [ 299.9423,   63.6656],
         [ 300.5691,  338.0744],
         [-387.8467, -331.4312],
         [-356.2341,  373.1154]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -73.9241,   14.0169],
         [-131.6447,  321.1703],
         [ 391.9864,  277.5122],
         [-390.2207,  163.1447],
         [-355.1605,  307.3723],
         [ 479.4215,  186.0683],
         [ -15.3671, -359.9090]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -27.6856,    4.1152],
         [ -44.3133,   -7.0058],
         [ 418.7128,  -60.1626],
         [-388.5963, -318.6688],
         [-232.3173, -360.0276],
         [ 425.1961,  259.0225],
         [-131.9242, -318.0721],
         [-291.0424,  137.2235]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -19.8121,   19.7783],
         [ -67.3408,   87.2743],
         [ 220.3708, -189.9322],
         [-302.0483, -130.2156],
         [ 382.6494, -344.4196],
         [-202.9208,  311.0588],
         [ 392.0568,   99.0715],
         [-148.9702, -396.9560]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -83.1910,  -30.9942],
         [ 353.6143,  263.5802],
         [-392.3709,  253.3961],
         [ 270.5105,  251.1340],
         [-474.2166,  262.4694],
         [-171.9281,  346.6575],
         [ -19.2520,  463.1266]]]) 

MatU.grad[10:20,10:20]: tensor([[[ 117.5469,  318.9756],
         [  48.1878, -305.9551],
         [-300.4724,   45.2657],
         [ 103.0931,  316.6236],
         [ 376.6962, -403.2518],
         [-301.4042,  502.5528],
         [-334.8794, -482.9172],
         [ 169.0212,  304.7395],
         [-425.8293, -392.4553],
         [-341.1638,  -47.8435]],

        [[ 272.9643,  261.8468],
         [ 352.5696, -356.6719],
         [ -70.0821,  520.5651],
         [-527.1201, -303.1927],
         [ 427.4663,   58.0599],
         [-406.0432,  -67.5366],
         [ 459.7679,   59.6675],
         [ 402.2572,  348.0424],
         [ -14.5000, -384.1729],
         [ 359.4548, -410.1653]],

        [[-368.3798, -320.9815],
         [ 142.8084,  321.5445],
         [ 202.7695, -373.6871],
         [ -94.1135,  200.4182],
         [ 210.5660,  123.4391],
         [ -10.1252,  391.3913],
         [-253.2531,  378.5430],
         [-393.6268, -391.3869],
         [-270.9966,  416.3033],
         [ 170.7333,  103.6772]],

        [[ 350.4877,  146.9629],
         [-329.2742,  182.9205],
         [-411.6106,  258.2878],
         [-194.3322,  506.1902],
         [ 367.1040, -519.5226],
         [   6.2322, -272.7355],
         [  59.5889, -388.1562],
         [ 409.4186,  176.0359],
         [  51.0466,  364.6357],
         [-364.9867, -331.8560]],

        [[ 386.0805,  347.1507],
         [ 340.4453, -395.8796],
         [ -75.9331,  355.1281],
         [-226.3306, -348.7144],
         [-422.1245,   38.8781],
         [  58.0272,  208.3787],
         [-434.4311,  226.2294],
         [ 362.0519,  458.2703],
         [ 297.6689, -481.2669],
         [ -60.3349, -332.2319]],

        [[-534.7491,  159.9758],
         [ 253.5874, -455.0238],
         [-288.5887, -345.6392],
         [ 284.1805,  123.1693],
         [-406.1111,  365.4470],
         [  57.5701, -581.4334],
         [-182.7187, -343.1284],
         [ 384.2039,  136.9048],
         [-332.8559, -340.3370],
         [ 214.9934,  219.1769]],

        [[-229.6363,  225.8846],
         [ 271.0445,  362.1728],
         [ 122.8617, -221.1508],
         [ 500.9485, -247.3966],
         [-136.8309,  313.7399],
         [ 235.0931,  236.8394],
         [ 378.9012, -346.8233],
         [-265.8959,  355.9798],
         [ 151.1234,  417.6330],
         [-379.1880, -246.7555]],

        [[ 373.6536, -397.6131],
         [-363.1976,  234.9914],
         [ -14.3357, -309.3401],
         [-116.5654, -164.4277],
         [-270.3275, -118.2493],
         [-414.7136,  364.3037],
         [ 166.7458,  325.8534],
         [-186.9354, -238.5907],
         [ 544.0245,  169.3179],
         [  -9.0762, -492.4168]],

        [[ 472.1546,  205.2214],
         [-436.1019,  408.0008],
         [ 414.3086, -264.2260],
         [-412.5236, -211.0649],
         [ 364.4907, -272.0756],
         [ 431.5859, -233.4796],
         [-370.2390, -343.4312],
         [ 267.8247,  440.1677],
         [-247.2548,  410.2906],
         [ 264.8900,  199.6157]],

        [[ 270.7785,  274.2854],
         [-300.1137,  242.3160],
         [ 298.3065,  379.4233],
         [-447.6022, -206.9776],
         [-297.9631,  368.7729],
         [ 358.2375,  366.8049],
         [-497.0354,  -74.9500],
         [ 513.0563, -222.0035],
         [ 274.9747, -406.6055],
         [-109.2697, -253.8322]]]) 

MatU.grad[20:30,20:30]:  tensor([[[ 2.8034e+02,  3.0206e+02],
         [ 7.1463e+01, -3.7965e+02],
         [-3.8820e+02,  2.3823e+02],
         [ 1.0658e+02,  4.1335e+02],
         [-1.3916e+02, -8.9239e+01],
         [-8.0723e+00, -3.2376e+02],
         [-7.2710e+01,  4.4269e+01],
         [ 2.9727e+02, -9.8537e+00],
         [-2.1107e+02, -4.6481e+02],
         [-1.0995e+02,  1.5705e+02]],

        [[ 4.5798e+02,  2.9985e+02],
         [ 4.6805e+02, -2.5034e+02],
         [-1.4456e+02,  4.6996e+01],
         [-3.5411e+02, -2.0353e+02],
         [-1.5850e+02, -5.1556e+02],
         [ 4.6715e+02,  4.1515e+02],
         [-2.9972e+02,  1.0275e+02],
         [-3.2242e+02,  7.5337e+01],
         [ 1.4313e+02,  4.8567e+02],
         [ 2.8955e+02,  2.8819e+01]],

        [[-4.1371e+02, -3.3389e+02],
         [-3.8201e+02,  3.7471e+02],
         [-3.7393e+02, -4.6442e+02],
         [ 4.6530e+02,  4.2713e+02],
         [-3.7037e+02,  3.7416e+02],
         [ 1.6232e+02,  7.1969e+01],
         [ 1.5427e+01, -3.3635e+02],
         [ 5.2095e+02,  2.0451e+00],
         [-4.4018e+02, -1.0666e+02],
         [-2.0579e+02,  7.4239e+01]],

        [[ 1.4082e+02,  3.1228e+02],
         [-1.2834e+02, -2.9952e+02],
         [ 3.9152e+02,  1.8028e+02],
         [ 3.6426e+02, -3.3424e+02],
         [-5.0999e+02, -5.1219e+01],
         [-1.3520e+02,  2.2373e+02],
         [ 2.8462e+02, -6.3773e+01],
         [ 3.9643e+02, -5.5514e+01],
         [-2.3628e+02, -4.5073e+02],
         [-3.0575e+01, -1.5300e+02]],

        [[ 4.0237e+02,  4.1908e+02],
         [ 1.8910e+02, -4.4833e+02],
         [-1.2118e+02,  1.0891e+02],
         [-4.1506e+02, -2.9225e+02],
         [-6.0442e+01, -4.7834e+02],
         [ 5.6256e+02,  3.7916e+02],
         [-4.0485e+02,  1.9769e+02],
         [-4.1355e+02, -1.2324e+02],
         [ 3.9452e+02,  2.6707e+02],
         [-6.1230e+01, -4.1529e+02]],

        [[ 3.8945e+02, -2.9780e+02],
         [-2.7785e+02,  4.3575e+02],
         [-3.9215e+02,  3.0053e+02],
         [ 2.5642e+02,  3.6423e+02],
         [-3.0055e+02,  3.8168e+02],
         [ 4.2952e+02, -4.7959e+01],
         [ 2.6154e+01, -3.7829e+02],
         [-7.2591e+01,  1.0649e+02],
         [-1.9251e+02, -2.4313e+02],
         [ 4.5937e+02,  9.3013e+01]],

        [[ 5.3796e+01,  2.9891e+02],
         [-4.1237e+02, -4.3358e+02],
         [ 4.3197e+02,  9.1080e+01],
         [ 2.6947e+02, -4.0670e+02],
         [-5.0750e+02, -2.4021e+02],
         [-7.6231e+00,  1.9239e+01],
         [-1.0886e+02,  5.3785e+02],
         [ 1.9135e+02, -2.3318e+02],
         [ 1.9263e+02, -5.7710e+01],
         [ 2.4912e+02,  7.8262e+00]],

        [[ 2.7057e+02,  3.5341e+02],
         [ 1.3281e+01, -4.7698e+02],
         [-1.5956e+02,  1.1740e+02],
         [ 2.3659e+02, -3.0213e+02],
         [-1.9126e+02, -1.1612e+02],
         [ 4.8429e+02, -4.9482e+01],
         [-4.0057e+02, -3.9333e+02],
         [-2.3312e+02,  5.9775e+01],
         [ 1.2546e+02,  3.6510e+02],
         [-4.0289e+02, -2.9489e+02]],

        [[ 3.2509e+02,  4.7703e+02],
         [-3.4841e+02,  2.5443e+02],
         [ 2.4362e+02,  1.4411e+02],
         [ 1.2239e+02, -2.5875e+01],
         [-1.4466e+02,  5.0016e+02],
         [ 4.1677e+00,  9.0363e+01],
         [ 1.0214e+01,  3.7310e+02],
         [-5.7785e+00,  2.8459e+02],
         [-3.4001e-01, -4.2175e+02],
         [ 4.6386e+02,  6.9749e+01]],

        [[ 1.1370e+02, -3.8144e+02],
         [-3.2138e+02, -1.9758e+02],
         [-5.2436e+01,  5.3217e+02],
         [ 4.7445e+02, -1.3157e+02],
         [-2.6047e+02, -4.0717e+02],
         [ 3.4257e+02,  2.4425e+01],
         [-1.9851e+02, -2.9535e+02],
         [-2.7662e+02, -1.2952e+02],
         [ 1.3490e+02,  3.7492e+02],
         [ 1.4070e+02,  3.7481e+02]]]) 

t:1, loss.item(): nan
Optimized result :
MatD: 
has nan? True 
tensor([[0.0161, 0.0164, 0.0161,  ..., 0.0122, 0.0127, 0.0114],
        [0.0161, 0.0159, 0.0156,  ..., 0.0125, 0.0123, 0.0120],
        [0.0164, 0.0159, 0.0166,  ..., 0.0106, 0.0125, 0.0098],
        ...,
        [0.0161, 0.0161, 0.0154,  ..., 0.0149, 0.0130, 0.0127],
        [0.0161, 0.0161, 0.0156,  ..., 0.0130, 0.0125, 0.0133],
        [0.0159, 0.0159, 0.0159,  ..., 0.0114, 0.0118, 0.0112]],
       requires_grad=True) 

MatUx: 
 has nan? True 
tensor([[ 2.6441e-04, -2.6441e-04, -2.5601e-04,  ...,  4.6311e-04,
         -1.2946e-03, -1.2946e-03],
        [-2.5601e-04, -2.4802e-04,  2.4802e-04,  ..., -1.5432e-04,
         -2.9749e-04, -2.9749e-04],
        [-5.2042e-04,  1.0000e-10,  5.2043e-04,  ...,  1.5432e-04,
         -2.6961e-03, -2.6961e-03],
        ...,
        [ 1.0000e-10,  1.0000e-10, -2.5601e-04,  ..., -1.7088e-04,
         -3.2878e-04, -3.2878e-04],
        [ 1.0000e-10, -5.0403e-04,  5.0403e-04,  ..., -4.8701e-04,
          8.3333e-04,  8.3333e-04],
        [ 1.0000e-10,  1.0000e-10,  2.5602e-04,  ...,  4.0107e-04,
         -5.2875e-04, -5.2875e-04]], grad_fn=<SelectBackward>)  








test_counter in loss_omega_mat(): 455
test_counter in loss_omega_mat(): 910
test_counter in loss_omega_mat(): 1365
test_counter in loss_omega_mat(): 1820
test_counter in loss_omega_mat(): 2275
test_counter in loss_omega_mat(): 2730
test_counter in loss_omega_mat(): 3185
mat_omega_topk has nan? True 

mat_duij has nan? True 

mat_uij has nan? True 

mat_omega_topk: tensor([[[0.9450, 0.9445, 0.9445,  ..., 0.8913, 0.7987, 0.7983],
         [0.9450, 0.9448, 0.9444,  ..., 0.8919, 0.7994, 0.7991],
         [0.9448, 0.9444, 0.9440,  ..., 0.8921, 0.7995, 0.7994],
         ...,
         [0.9457, 0.9451, 0.9448,  ..., 0.8924, 0.8003, 0.8000],
         [0.9457, 0.9448, 0.9448,  ..., 0.8926, 0.8002, 0.7996],
         [0.9450, 0.9448, 0.9438,  ..., 0.8903, 0.7993, 0.7992]],

        [[0.9446, 0.9445, 0.9445,  ..., 0.8913, 0.7990, 0.7988],
         [0.9447, 0.9446, 0.9445,  ..., 0.8926, 0.7998, 0.7998],
         [0.9449, 0.9447, 0.9445,  ..., 0.8932, 0.8001, 0.7997],
         ...,
         [0.9457, 0.9457, 0.9448,  ..., 0.8938, 0.8001, 0.8001],
         [0.9457, 0.9457, 0.9449,  ..., 0.8935, 0.8005, 0.8004],
         [0.9452, 0.9450, 0.9449,  ..., 0.8912, 0.8002, 0.8001]],

        [[0.9448, 0.9446, 0.9445,  ..., 0.8913, 0.7998, 0.7996],
         [0.9449, 0.9448, 0.9448,  ..., 0.8932, 0.8001, 0.7997],
         [0.9449, 0.9449, 0.9448,  ..., 0.8937, 0.8001, 0.7997],
         ...,
         [0.9457, 0.9455, 0.9451,  ..., 0.8938, 0.8003, 0.8000],
         [0.9457, 0.9457, 0.9453,  ..., 0.8938, 0.8005, 0.8003],
         [0.9459, 0.9453, 0.9452,  ..., 0.8905, 0.8006, 0.7999]],

        ...,

        [[0.9453, 0.9448, 0.9436,  ..., 0.8908, 0.7996, 0.7981],
         [0.9452, 0.9428, 0.9427,  ..., 0.8910, 0.7995, 0.7984],
         [0.9453, 0.9430, 0.9428,  ..., 0.8907, 0.7997, 0.7981],
         ...,
         [0.9451, 0.9450, 0.9449,  ..., 0.8934, 0.8002, 0.8001],
         [0.9452, 0.9451, 0.9451,  ..., 0.8936, 0.8001, 0.7997],
         [0.9455, 0.9453, 0.9452,  ..., 0.8902, 0.8001, 0.7998]],

        [[0.9448, 0.9439, 0.9433,  ..., 0.8876, 0.7991, 0.7971],
         [0.9412, 0.9398, 0.9392,  ..., 0.8829, 0.7971, 0.7965],
         [0.9401, 0.9394, 0.9392,  ..., 0.8835, 0.7972, 0.7969],
         ...,
         [0.9450, 0.9449, 0.9449,  ..., 0.8934, 0.7999, 0.7997],
         [0.9455, 0.9451, 0.9451,  ..., 0.8934, 0.7999, 0.7995],
         [0.9455, 0.9455, 0.9455,  ..., 0.8911, 0.7997, 0.7995]],

        [[0.9433, 0.9429, 0.9420,  ..., 0.8867, 0.7978, 0.7946],
         [0.9395, 0.9385, 0.9366,  ..., 0.8817, 0.7916, 0.7909],
         [0.9382, 0.9344, 0.9326,  ..., 0.8829, 0.7913, 0.7911],
         ...,
         [0.9450, 0.9449, 0.9448,  ..., 0.8935, 0.7998, 0.7995],
         [0.9453, 0.9452, 0.9451,  ..., 0.8935, 0.8001, 0.7993],
         [0.9455, 0.9453, 0.9443,  ..., 0.8907, 0.7995, 0.7990]]],
       grad_fn=<SliceBackward>) 

mat_duij: tensor([[[8.0334e-07, 8.3951e-07, 5.5251e-08,  ..., 2.7000e-08,
          4.0229e-07, 1.0507e-07],
         [1.1928e-06, 4.3796e-09, 1.3891e-07,  ..., 5.6508e-06,
          8.2023e-07, 9.6301e-07],
         [1.4108e-06, 2.6735e-06, 1.1478e-07,  ..., 2.6861e-06,
          2.8515e-07, 2.4014e-06],
         ...,
         [5.7771e-07, 9.3915e-08, 6.0124e-06,  ..., 1.1502e-05,
          4.0482e-06, 2.3808e-07],
         [8.8896e-09, 5.9907e-06, 4.2851e-08,  ..., 1.1727e-06,
          1.7400e-07, 4.5655e-06],
         [1.4702e-06, 1.1102e-06, 4.3071e-06,  ..., 5.1937e-06,
          2.9950e-07, 4.5490e-06]],

        [[1.1119e-07, 1.1029e-06, 2.0993e-07,  ..., 4.5120e-06,
          1.1925e-06, 2.8667e-07],
         [1.0727e-06, 5.2309e-07, 2.5052e-07,  ..., 1.0729e-05,
          4.1292e-08, 5.1477e-06],
         [5.9064e-07, 9.2606e-06, 1.6198e-06,  ..., 1.2761e-05,
          5.3947e-07, 2.2209e-07],
         ...,
         [2.2972e-07, 9.4316e-07, 1.6749e-06,  ..., 5.6993e-06,
          4.6163e-08, 5.2810e-07],
         [3.5261e-07, 1.3340e-07, 1.8675e-06,  ..., 4.4696e-07,
          1.1712e-07, 2.6361e-08],
         [1.7340e-06, 2.5889e-06, 6.2374e-07,  ..., 1.0570e-05,
          6.4005e-06, 6.3042e-07]],

        [[4.5540e-06, 2.2649e-06, 1.2634e-06,  ..., 4.3087e-06,
          1.8215e-06, 1.0602e-06],
         [6.7254e-07, 1.0715e-06, 5.8481e-06,  ..., 9.6633e-06,
          2.1121e-06, 7.6915e-09],
         [6.5869e-07, 5.2070e-06, 5.0992e-08,  ..., 1.1649e-07,
          4.6897e-06, 8.2285e-08],
         ...,
         [5.1425e-07, 2.4851e-07, 3.4843e-06,  ..., 5.2451e-08,
          8.8803e-07, 5.5773e-07],
         [1.7201e-07, 1.8546e-07, 6.4725e-07,  ..., 9.3373e-07,
          3.4783e-08, 2.1983e-08],
         [2.0235e-07, 8.3147e-08, 3.0643e-07,  ..., 2.0521e-07,
          3.0659e-07, 1.5834e-06]],

        ...,

        [[6.9259e-07, 2.4479e-06, 5.4625e-06,  ..., 2.3620e-06,
          1.3626e-07, 2.9788e-07],
         [3.9859e-09, 1.6472e-05, 2.7757e-06,  ..., 4.2937e-05,
          5.8365e-08, 5.1967e-05],
         [1.3992e-07, 9.7694e-07, 6.4156e-09,  ..., 1.6646e-06,
          2.6314e-06, 6.5164e-06],
         ...,
         [1.5637e-06, 1.6546e-06, 1.5505e-07,  ..., 3.2572e-08,
          3.0938e-07, 5.6662e-07],
         [3.0165e-07, 2.4591e-08, 1.0824e-06,  ..., 1.2014e-07,
          3.9952e-08, 1.3984e-05],
         [1.0814e-06, 2.6946e-07, 1.5133e-07,  ..., 1.0348e-07,
          5.8102e-07, 7.3256e-07]],

        [[3.7087e-06, 7.8212e-09, 7.3421e-07,  ..., 8.7554e-08,
          9.7296e-06, 8.2539e-06],
         [1.7023e-05, 4.3798e-05, 6.7898e-06,  ..., 1.0827e-04,
          1.6797e-04, 3.7082e-05],
         [3.3255e-05, 1.5911e-05, 1.0872e-04,  ..., 5.8906e-05,
          9.6489e-05, 1.9944e-04],
         ...,
         [9.1514e-07, 2.6996e-08, 2.0661e-06,  ..., 1.4383e-06,
          1.0994e-08, 4.8260e-07],
         [4.4187e-09, 7.5848e-07, 3.0943e-07,  ..., 3.1034e-07,
          8.0306e-08, 8.2500e-07],
         [5.4005e-07, 3.4404e-07, 6.5023e-07,  ..., 9.1276e-07,
          3.3703e-06, 1.1923e-06]],

        [[8.5105e-08, 3.4986e-08, 6.0395e-07,  ..., 1.2986e-06,
          4.8364e-06, 1.0075e-05],
         [3.1774e-08, 8.1633e-06, 7.4724e-07,  ..., 4.9418e-06,
          2.3307e-07, 5.2324e-07],
         [1.2542e-04, 1.8229e-05, 1.9414e-05,  ..., 5.7022e-05,
          1.7687e-04, 2.1884e-05],
         ...,
         [9.8940e-07, 3.9402e-06, 4.4329e-07,  ..., 4.0200e-06,
          2.6686e-08, 2.4835e-06],
         [1.0167e-06, 2.5557e-08, 9.7816e-07,  ..., 8.2208e-07,
          6.7414e-07, 5.2564e-06],
         [4.6416e-07, 2.2625e-08, 1.9765e-07,  ..., 1.0812e-06,
          9.1971e-10, 8.8900e-07]]], grad_fn=<CopySlices>) 

mat_uij: tensor([[[0.0009, 0.0008, 0.0003,  ..., 0.0003, 0.0017, 0.0017],
         [0.0009, 0.0013, 0.0013,  ..., 0.0011, 0.0011, 0.0013],
         [0.0013, 0.0024, 0.0012,  ..., 0.0018, 0.0018, 0.0008],
         ...,
         [0.0006, 0.0017, 0.0013,  ..., 0.0015, 0.0013, 0.0008],
         [0.0009, 0.0013, 0.0012,  ..., 0.0006, 0.0005, 0.0009],
         [0.0007, 0.0012, 0.0017,  ..., 0.0022, 0.0010, 0.0010]],

        [[0.0016, 0.0008, 0.0018,  ..., 0.0011, 0.0016, 0.0007],
         [0.0026, 0.0016, 0.0024,  ..., 0.0020, 0.0021, 0.0008],
         [0.0010, 0.0026, 0.0011,  ..., 0.0013, 0.0021, 0.0021],
         ...,
         [0.0006, 0.0007, 0.0008,  ..., 0.0011, 0.0003, 0.0011],
         [0.0004, 0.0009, 0.0011,  ..., 0.0005, 0.0004, 0.0005],
         [0.0008, 0.0007, 0.0011,  ..., 0.0017, 0.0005, 0.0003]],

        [[0.0018, 0.0022, 0.0018,  ..., 0.0023, 0.0024, 0.0008],
         [0.0011, 0.0016, 0.0018,  ..., 0.0012, 0.0011, 0.0023],
         [0.0011, 0.0005, 0.0015,  ..., 0.0017, 0.0011, 0.0018],
         ...,
         [0.0007, 0.0014, 0.0014,  ..., 0.0013, 0.0013, 0.0003],
         [0.0004, 0.0003, 0.0006,  ..., 0.0009, 0.0006, 0.0004],
         [0.0011, 0.0006, 0.0008,  ..., 0.0010, 0.0006, 0.0012]],

        ...,

        [[0.0002, 0.0009, 0.0016,  ..., 0.0066, 0.0009, 0.0016],
         [0.0032, 0.0043, 0.0031,  ..., 0.0049, 0.0023, 0.0032],
         [0.0020, 0.0012, 0.0043,  ..., 0.0052, 0.0018, 0.0016],
         ...,
         [0.0017, 0.0017, 0.0009,  ..., 0.0011, 0.0016, 0.0009],
         [0.0013, 0.0011, 0.0017,  ..., 0.0010, 0.0010, 0.0010],
         [0.0005, 0.0005, 0.0013,  ..., 0.0014, 0.0009, 0.0009]],

        [[0.0009, 0.0005, 0.0008,  ..., 0.0010, 0.0007, 0.0021],
         [0.0072, 0.0076, 0.0124,  ..., 0.0021, 0.0053, 0.0072],
         [0.0090, 0.0087, 0.0124,  ..., 0.0074, 0.0070, 0.0066],
         ...,
         [0.0017, 0.0006, 0.0018,  ..., 0.0008, 0.0014, 0.0013],
         [0.0007, 0.0011, 0.0004,  ..., 0.0011, 0.0015, 0.0017],
         [0.0007, 0.0005, 0.0005,  ..., 0.0011, 0.0013, 0.0010]],

        [[0.0008, 0.0013, 0.0013,  ..., 0.0022, 0.0010, 0.0016],
         [0.0004, 0.0080, 0.0023,  ..., 0.0055, 0.0010, 0.0023],
         [0.0104, 0.0013, 0.0060,  ..., 0.0021, 0.0036, 0.0057],
         ...,
         [0.0006, 0.0018, 0.0010,  ..., 0.0010, 0.0010, 0.0009],
         [0.0013, 0.0011, 0.0004,  ..., 0.0008, 0.0005, 0.0015],
         [0.0005, 0.0013, 0.0020,  ..., 0.0012, 0.0010, 0.0007]]],
       grad_fn=<CopySlices>) 

loss = loss1 + lambda*loss2
loss1:nan loss2:nan
t:2, Finish constructing loss
require grad ? True True False
MatD grad and MatUx grad: torch.Size([37, 123]) torch.Size([37, 123, 2]) 

Grads has nan? MatD.grad: True 	MatU.grad: True

Where is nan? 
MatD.grad nan: tensor([[ 0, 26],
        [ 0, 27],
        [ 0, 28],
        ...,
        [19, 51],
        [19, 52],
        [19, 53]]) 
MatU.grad nan: tensor([[ 1, 28,  0],
        [ 1, 28,  1],
        [ 1, 29,  0],
        ...,
        [17, 50,  1],
        [17, 51,  0],
        [17, 51,  1]])

MatD.grad: tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000, -0.0049,  ...,  0.0482,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0179,  ..., -0.0348,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]) 

MatU.grad[0:10,0:10]: tensor([[[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  19.1494,   24.6277],
         [  49.2258,   37.7520],
         [ -78.1479,   44.9311],
         [  18.4751,   77.1926],
         [ -51.9411,   71.9739],
         [  67.5783,   52.0237],
         [ -49.1558,  -70.7710]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  28.9108,   56.0756],
         [  95.9071,   32.2469],
         [-193.9874,   60.5352],
         [ -30.0489, -391.5644],
         [ 302.5128, -206.2575],
         [-376.1819, -149.5469],
         [ 183.0515,  310.7068]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  80.6423,   36.8871],
         [ 133.5275, -274.1152],
         [-416.4554, -356.6573],
         [ 235.2677,  533.3581],
         [ 455.3759,   53.0475],
         [ -86.6302, -364.0937],
         [-272.9644,  271.6545]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   5.0746,   79.4516],
         [-371.0950,  209.0676],
         [ 387.0459,  292.6087],
         [-292.8371,  372.4550],
         [-244.8520,   34.3705],
         [ 404.2205,   44.8890],
         [-493.3343, -133.9385]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -58.0474,  -38.0086],
         [ 192.3045, -356.3365],
         [-153.0194,   -7.6101],
         [ -83.9422, -303.5520],
         [ 190.0383,  252.3646],
         [-298.5616, -532.1490],
         [-213.6258,  486.1464]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -76.5596,   66.3949],
         [ 459.0778, -113.0369],
         [-317.7105, -450.4351],
         [ 299.1013, -323.2299],
         [-504.8845,  257.3463],
         [ 495.6959,  359.5800],
         [-139.5723, -319.5717]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -85.9160,   -8.3452],
         [ 186.5434,  295.5103],
         [-461.8904,  369.7151],
         [ 431.2117,  367.5872],
         [   1.0120,   49.8608],
         [ -10.8043,  213.1859],
         [-457.6710,   86.6519]]]) 

MatU.grad[10:20,10:20]: tensor([[[ 307.5009,  216.1314],
         [-325.8645, -282.4695],
         [ -39.8705,  452.5866],
         [ 421.4778,  334.0934],
         [  92.8172, -189.5652],
         [-235.7823,  232.7236],
         [-449.1703, -148.3050],
         [ 475.3515,  200.9985],
         [-132.5177,  -45.2066],
         [-204.8289, -510.9974]],

        [[ 433.3780,  381.3592],
         [ 392.1694, -402.7509],
         [-432.2139,   16.4124],
         [-333.2849, -366.9946],
         [ -97.2351,  597.2450],
         [  49.6821, -387.9749],
         [ 123.3203,  519.2745],
         [ 402.2117,   72.3135],
         [-503.4661, -236.3535],
         [ 356.0486, -304.8283]],

        [[-164.8993, -173.0858],
         [-331.6498,  201.0381],
         [ 397.4372,  393.2774],
         [ 413.9257,  -52.9384],
         [-518.2372, -315.7265],
         [ 393.1233,   54.4028],
         [-358.8424,  210.9476],
         [ -17.6671, -429.6920],
         [-373.0960,  275.3138],
         [ 304.0025,  351.3494]],

        [[ 393.7485,   37.3894],
         [-114.9316,  110.4157],
         [  51.5847,  346.0506],
         [-350.6088,   46.3231],
         [  29.5460, -279.4771],
         [ 430.1759, -309.4444],
         [-493.9864, -238.1691],
         [ 257.7669,  388.0681],
         [ 504.6673,  110.8398],
         [-206.1551,  -82.0230]],

        [[ 276.5999,  231.9583],
         [ 168.5930, -536.0934],
         [-397.2512,  249.5083],
         [-186.5780, -541.1361],
         [-150.6644,  511.3268],
         [ 205.4537,  310.4732],
         [-271.0356,  318.5316],
         [ 363.4419,  -22.6601],
         [  38.4664, -410.9091],
         [-455.2327,  -87.4531]],

        [[-392.8748,  207.6140],
         [ 462.5834, -127.0770],
         [-434.4512,  -86.4228],
         [ 330.8573,  319.2840],
         [-280.2534,   62.9613],
         [ 251.4570, -326.8753],
         [-350.7134, -314.6400],
         [ 111.1751,  510.5757],
         [-309.4870, -423.6953],
         [ 295.9534,  373.2667]],

        [[-551.2427,   -7.5474],
         [ 268.1907,  416.7759],
         [ 162.0332, -289.0780],
         [  92.5026, -151.9837],
         [-557.5012,  119.7839],
         [ 274.1019,  344.8594],
         [ 209.5651, -477.3451],
         [-318.8037,  269.8224],
         [ 519.6381,   53.4742],
         [  22.0554, -379.8526]],

        [[ 188.2440, -442.6711],
         [-328.3633,  172.7804],
         [ 526.0312,  -47.8842],
         [ 549.5053, -139.7666],
         [-326.1974, -432.4607],
         [-276.7845,  307.1677],
         [ 494.6848,  187.7907],
         [-233.4892, -399.4640],
         [ 127.1218,  511.9548],
         [-518.6466,  -97.5735]],

        [[ 379.9871,  255.5902],
         [-292.8427,   90.2504],
         [ 147.8098, -158.0018],
         [-514.6627,  -25.1980],
         [ 389.9596,   10.2114],
         [ 219.6015, -425.5078],
         [-426.8322,   10.2033],
         [ 254.4370,  280.4857],
         [-296.2902,  277.9727],
         [  83.6144,  353.5563]],

        [[ 504.4553,  167.5829],
         [-535.7797,  136.1021],
         [ 194.1915,  421.2548],
         [-231.3423, -243.0020],
         [-313.2792,  475.1696],
         [ 472.5140,  219.0539],
         [-337.4740, -383.6448],
         [ 109.7152, -352.5731],
         [ 457.2582,  -44.8375],
         [-445.8975, -368.5834]]]) 

MatU.grad[20:30,20:30]:  tensor([[[ 487.6069,  132.3958],
         [-492.5226,  -63.8072],
         [ -49.4775,  376.0695],
         [ 303.6773,  215.1657],
         [-423.1077, -433.4162],
         [ 346.5378,  189.5218],
         [ -45.3670, -300.0797],
         [ 288.3324,   21.7604],
         [-193.1149, -461.9109],
         [-206.7944,   93.5889]],

        [[ 230.3086,  162.9825],
         [ 403.8276, -294.5231],
         [-372.3700, -466.3589],
         [-231.2228, -254.5063],
         [ 262.1798, -215.3142],
         [ -19.5758, -112.5117],
         [ 106.9378,  139.3659],
         [-283.1091,  -59.2845],
         [ 111.3033,  489.1568],
         [-126.7230, -145.6085]],

        [[ -57.7627, -485.4309],
         [-311.5210,  413.9398],
         [ -50.6308,  -24.4387],
         [ 104.0939,  276.6595],
         [-339.4263,  387.5457],
         [ 311.2787,  411.0865],
         [-284.1065,   34.4846],
         [ 512.6656,  -41.1213],
         [-435.4211,  -79.5738],
         [ -24.8729,  281.4383]],

        [[ 485.0928,  303.3928],
         [-508.3130, -172.0244],
         [ 301.8257,  490.5538],
         [ 427.5127, -249.5032],
         [-313.1597, -576.0303],
         [-260.8197,  320.5465],
         [-196.1538, -256.2654],
         [ 398.7295,    1.9313],
         [-221.7547, -445.9236],
         [-230.3374,  -31.1925]],

        [[ 157.9011,  245.6353],
         [ 453.7219, -218.1893],
         [-304.1793, -436.3803],
         [-285.4868, -182.4291],
         [ 165.7324, -182.9290],
         [ 281.2023, -101.4900],
         [ 267.5105,  209.6971],
         [-326.5539, -219.6762],
         [ 385.1248,  214.1706],
         [ -45.7588, -397.1192]],

        [[ 169.2544, -476.3714],
         [-450.7961,  220.9667],
         [-184.2169,  331.1877],
         [ 379.8498,  224.6292],
         [-401.6006,  129.4091],
         [  69.2665,  429.2988],
         [ 497.4595, -259.5175],
         [-428.6095,   86.5523],
         [ 117.1963,  -89.7800],
         [ 450.9856,  -59.7811]],

        [[ 539.9165,  220.6811],
         [-388.2964, -294.6024],
         [  53.3308,  457.1414],
         [ 431.6123, -258.0854],
         [-310.2899, -435.2631],
         [-294.1118,  143.1298],
         [ -26.7110,  531.7426],
         [-173.5271, -172.3363],
         [ -68.5002,  190.7141],
         [ 175.1482,  124.2078]],

        [[ 252.3487,  359.6328],
         [ 430.4854, -376.7501],
         [-272.9826, -414.2351],
         [-161.1646, -107.8963],
         [ 149.8072,  142.2936],
         [ 476.8030,   34.9072],
         [-417.0293, -381.8434],
         [ -26.5839, -289.1320],
         [  -3.0377,  363.0578],
         [-155.2685, -388.2610]],

        [[-109.6490,   73.9385],
         [-351.6978,  277.2477],
         [ 115.3259,  328.4462],
         [ 122.3743, -169.7773],
         [-105.0147,  504.6361],
         [  40.2860,   63.7673],
         [  -6.1843,  337.0452],
         [ -15.2142,  208.3684],
         [ 190.2493, -292.3222],
         [ 456.3853,  138.5005]],

        [[ 400.9868, -245.1975],
         [-238.0136, -301.5575],
         [ -20.5787,  503.6993],
         [ 473.8331,  -93.7023],
         [-250.1301, -404.0123],
         [ 334.5861,   18.0288],
         [-177.6712, -270.6850],
         [-237.7101,  -88.8970],
         [  78.1428,  412.9917],
         [  18.3905,  366.4847]]]) 

t:2, loss.item(): nan
Optimized result :
MatD: 
has nan? True 
tensor([[0.0161, 0.0164, 0.0161,  ..., 0.0122, 0.0127, 0.0114],
        [0.0161, 0.0159, 0.0156,  ..., 0.0125, 0.0123, 0.0120],
        [0.0164, 0.0159, 0.0174,  ..., 0.0097, 0.0125, 0.0098],
        ...,
        [0.0161, 0.0161, 0.0145,  ..., 0.0158, 0.0130, 0.0127],
        [0.0161, 0.0161, 0.0156,  ..., 0.0130, 0.0125, 0.0133],
        [0.0159, 0.0159, 0.0159,  ..., 0.0114, 0.0118, 0.0112]],
       requires_grad=True) 

MatUx: 
 has nan? True 
tensor([[ 2.6441e-04, -2.6441e-04, -2.5601e-04,  ...,  4.6311e-04,
         -1.2946e-03, -1.2946e-03],
        [-2.5601e-04, -2.4802e-04,  2.4802e-04,  ..., -1.5432e-04,
         -2.9749e-04, -2.9749e-04],
        [-5.2042e-04,  1.0000e-10,  5.2043e-04,  ...,  1.5432e-04,
         -2.6961e-03, -2.6961e-03],
        ...,
        [ 1.0000e-10,  1.0000e-10, -2.5601e-04,  ..., -1.7088e-04,
         -3.2878e-04, -3.2878e-04],
        [ 1.0000e-10, -5.0403e-04,  5.0403e-04,  ..., -4.8701e-04,
          8.3333e-04,  8.3333e-04],
        [ 1.0000e-10,  1.0000e-10,  2.5602e-04,  ...,  4.0107e-04,
         -5.2875e-04, -5.2875e-04]], grad_fn=<SelectBackward>)  








test_counter in loss_omega_mat(): 455
test_counter in loss_omega_mat(): 910
test_counter in loss_omega_mat(): 1365
test_counter in loss_omega_mat(): 1820
test_counter in loss_omega_mat(): 2275
test_counter in loss_omega_mat(): 2730
test_counter in loss_omega_mat(): 3185
mat_omega_topk has nan? True 

mat_duij has nan? True 

mat_uij has nan? True 

mat_omega_topk: tensor([[[0.9454, 0.9452, 0.9429,  ..., 0.8899, 0.7994, 0.7993],
         [0.9455, 0.9454, 0.9453,  ..., 0.8923, 0.8003, 0.7998],
         [0.9453, 0.9452, 0.9447,  ..., 0.8919, 0.8003, 0.7998],
         ...,
         [0.9458, 0.9458, 0.9457,  ..., 0.8922, 0.8006, 0.8005],
         [0.9458, 0.9457, 0.9456,  ..., 0.8924, 0.8005, 0.8003],
         [0.9456, 0.9453, 0.9433,  ..., 0.8886, 0.8002, 0.7993]],

        [[0.9455, 0.9455, 0.9452,  ..., 0.8912, 0.8002, 0.7999],
         [0.9455, 0.9455, 0.9455,  ..., 0.8938, 0.8006, 0.8004],
         [0.9455, 0.9455, 0.9455,  ..., 0.8944, 0.8006, 0.8005],
         ...,
         [0.9458, 0.9457, 0.9457,  ..., 0.8944, 0.8004, 0.8003],
         [0.9458, 0.9458, 0.9457,  ..., 0.8943, 0.8005, 0.8004],
         [0.9456, 0.9454, 0.9453,  ..., 0.8893, 0.8003, 0.7999]],

        [[0.9455, 0.9455, 0.9455,  ..., 0.8909, 0.8004, 0.8002],
         [0.9456, 0.9456, 0.9455,  ..., 0.8944, 0.8006, 0.8004],
         [0.9457, 0.9456, 0.9456,  ..., 0.8946, 0.8006, 0.8005],
         ...,
         [0.9457, 0.9457, 0.9457,  ..., 0.8941, 0.8005, 0.8002],
         [0.9458, 0.9457, 0.9455,  ..., 0.8940, 0.8004, 0.8003],
         [0.9458, 0.9455, 0.9454,  ..., 0.8873, 0.8005, 0.7998]],

        ...,

        [[0.9454, 0.9446, 0.9445,  ..., 0.8915, 0.8002, 0.7995],
         [0.9454, 0.9445, 0.9445,  ..., 0.8914, 0.8003, 0.7997],
         [0.9454, 0.9447, 0.9445,  ..., 0.8916, 0.8003, 0.7995],
         ...,
         [0.9456, 0.9455, 0.9455,  ..., 0.8940, 0.8004, 0.8003],
         [0.9457, 0.9455, 0.9455,  ..., 0.8942, 0.8003, 0.8002],
         [0.9457, 0.9456, 0.9456,  ..., 0.8881, 0.8004, 0.8002]],

        [[0.9448, 0.9446, 0.9439,  ..., 0.8889, 0.7989, 0.7989],
         [0.9439, 0.9432, 0.9418,  ..., 0.8854, 0.7986, 0.7982],
         [0.9434, 0.9432, 0.9421,  ..., 0.8863, 0.7989, 0.7988],
         ...,
         [0.9455, 0.9454, 0.9453,  ..., 0.8938, 0.8000, 0.8000],
         [0.9458, 0.9454, 0.9453,  ..., 0.8940, 0.7999, 0.7998],
         [0.9458, 0.9456, 0.9455,  ..., 0.8898, 0.8000, 0.7999]],

        [[0.9432, 0.9422, 0.9421,  ..., 0.8846, 0.7964, 0.7941],
         [0.9421, 0.9406, 0.9379,  ..., 0.8831, 0.7944, 0.7922],
         [0.9400, 0.9376, 0.9358,  ..., 0.8847, 0.7941, 0.7931],
         ...,
         [0.9454, 0.9452, 0.9448,  ..., 0.8933, 0.7998, 0.7994],
         [0.9453, 0.9453, 0.9453,  ..., 0.8931, 0.7997, 0.7996],
         [0.9455, 0.9453, 0.9435,  ..., 0.8894, 0.7998, 0.7994]]],
       grad_fn=<SliceBackward>) 

mat_duij: tensor([[[5.0545e-08, 9.7808e-08, 5.7187e-07,  ..., 5.4895e-06,
          2.9585e-07, 2.6883e-07],
         [8.1056e-08, 3.7747e-07, 5.0219e-07,  ..., 1.4258e-06,
          2.5023e-06, 7.5940e-08],
         [1.0545e-06, 2.4739e-06, 1.3186e-08,  ..., 5.2131e-06,
          5.3145e-07, 1.5112e-06],
         ...,
         [2.6015e-07, 8.3834e-08, 1.5369e-06,  ..., 2.6007e-06,
          3.1494e-08, 1.1040e-06],
         [1.7366e-07, 1.7670e-06, 4.3094e-08,  ..., 9.6112e-08,
          1.2754e-06, 2.3574e-07],
         [9.5775e-11, 1.9348e-06, 1.7479e-06,  ..., 6.2580e-06,
          2.3022e-06, 4.5470e-06]],

        [[1.1146e-07, 2.7171e-07, 3.9470e-07,  ..., 9.4124e-07,
          3.6058e-06, 9.3484e-07],
         [3.3051e-10, 5.4527e-07, 2.4283e-07,  ..., 2.7815e-06,
          2.7832e-06, 4.3474e-07],
         [1.5198e-09, 4.7314e-06, 9.3777e-07,  ..., 4.6383e-06,
          3.1652e-07, 7.9484e-07],
         ...,
         [9.2303e-09, 3.5817e-09, 1.6047e-08,  ..., 1.1675e-07,
          3.2275e-07, 8.9052e-09],
         [1.6620e-06, 8.8597e-07, 1.2938e-07,  ..., 1.2403e-06,
          9.7553e-08, 9.1854e-07],
         [1.0260e-06, 7.4468e-07, 2.2878e-06,  ..., 3.7391e-06,
          1.7446e-06, 3.4414e-06]],

        [[1.2874e-06, 8.4209e-07, 1.4648e-06,  ..., 2.6454e-06,
          3.2959e-06, 3.2897e-09],
         [3.5013e-07, 4.4995e-08, 1.0821e-06,  ..., 2.4219e-06,
          9.6325e-09, 3.3731e-07],
         [2.8618e-07, 1.8844e-07, 3.2595e-07,  ..., 3.0160e-07,
          3.3003e-07, 1.3084e-06],
         ...,
         [9.2905e-08, 2.1510e-07, 2.5072e-07,  ..., 1.4302e-07,
          4.0987e-07, 1.7119e-08],
         [8.6841e-08, 3.9618e-07, 4.3807e-09,  ..., 2.2216e-07,
          2.5544e-07, 8.7855e-07],
         [1.7475e-08, 2.2068e-07, 8.9266e-12,  ..., 3.0319e-07,
          1.1804e-06, 9.7934e-07]],

        ...,

        [[1.8240e-08, 6.9299e-07, 1.6386e-06,  ..., 1.7020e-06,
          1.7505e-07, 1.2991e-06],
         [1.2981e-08, 5.5569e-06, 8.7786e-07,  ..., 1.1742e-05,
          2.5272e-06, 2.0096e-05],
         [1.2823e-06, 2.5631e-10, 4.6552e-08,  ..., 1.0483e-06,
          9.5789e-07, 9.7780e-07],
         ...,
         [9.2458e-07, 1.5318e-07, 9.0212e-07,  ..., 1.2841e-06,
          1.7747e-07, 1.2675e-06],
         [3.6191e-08, 1.0278e-06, 2.5207e-07,  ..., 1.5551e-08,
          9.8209e-07, 3.2178e-06],
         [6.2558e-08, 2.5219e-08, 2.0676e-06,  ..., 7.3029e-08,
          4.9535e-07, 1.2291e-07]],

        [[1.2858e-06, 9.7533e-07, 2.8603e-07,  ..., 5.3805e-07,
          7.8630e-06, 1.6327e-06],
         [4.4428e-06, 3.1185e-06, 2.6037e-05,  ..., 7.5721e-05,
          4.5040e-08, 6.4864e-06],
         [1.4958e-05, 5.7938e-05, 1.7382e-05,  ..., 3.0631e-05,
          1.2881e-04, 6.9126e-05],
         ...,
         [5.7223e-07, 4.4685e-07, 1.8396e-07,  ..., 5.9872e-08,
          2.3934e-06, 1.5876e-07],
         [2.3653e-08, 1.1523e-06, 5.0299e-07,  ..., 3.3011e-06,
          3.5999e-06, 3.5573e-06],
         [6.1739e-07, 8.0375e-08, 6.3350e-07,  ..., 3.0575e-07,
          7.7834e-07, 1.0603e-06]],

        [[1.6599e-06, 2.7553e-07, 3.4524e-08,  ..., 1.1916e-05,
          7.9085e-08, 1.0274e-05],
         [1.3322e-07, 1.5768e-07, 1.9266e-06,  ..., 4.7179e-06,
          6.6158e-07, 1.5280e-07],
         [7.5035e-05, 9.4066e-06, 1.3890e-05,  ..., 1.4802e-05,
          1.0892e-05, 1.0739e-04],
         ...,
         [1.0482e-07, 2.6497e-06, 2.9438e-08,  ..., 1.8097e-06,
          5.4097e-07, 9.1501e-07],
         [2.5184e-09, 1.8380e-07, 2.8440e-07,  ..., 4.1905e-07,
          6.9624e-08, 3.5157e-06],
         [1.8817e-07, 1.3251e-07, 7.9630e-09,  ..., 5.3499e-07,
          4.4886e-08, 1.3138e-08]]], grad_fn=<CopySlices>) 

mat_uij: tensor([[[0.0006, 0.0005, 0.0008,  ..., 0.0009, 0.0008, 0.0010],
         [0.0013, 0.0006, 0.0004,  ..., 0.0012, 0.0010, 0.0008],
         [0.0004, 0.0017, 0.0011,  ..., 0.0015, 0.0009, 0.0012],
         ...,
         [0.0005, 0.0012, 0.0011,  ..., 0.0005, 0.0011, 0.0010],
         [0.0009, 0.0011, 0.0008,  ..., 0.0003, 0.0003, 0.0004],
         [0.0008, 0.0008, 0.0006,  ..., 0.0022, 0.0004, 0.0009]],

        [[0.0010, 0.0008, 0.0005,  ..., 0.0012, 0.0008, 0.0015],
         [0.0015, 0.0018, 0.0010,  ..., 0.0010, 0.0012, 0.0013],
         [0.0015, 0.0018, 0.0008,  ..., 0.0014, 0.0013, 0.0012],
         ...,
         [0.0005, 0.0009, 0.0008,  ..., 0.0006, 0.0004, 0.0004],
         [0.0009, 0.0007, 0.0002,  ..., 0.0002, 0.0010, 0.0013],
         [0.0007, 0.0010, 0.0008,  ..., 0.0009, 0.0008, 0.0002]],

        [[0.0011, 0.0014, 0.0008,  ..., 0.0017, 0.0015, 0.0013],
         [0.0005, 0.0004, 0.0015,  ..., 0.0005, 0.0013, 0.0008],
         [0.0005, 0.0005, 0.0004,  ..., 0.0013, 0.0004, 0.0005],
         ...,
         [0.0008, 0.0006, 0.0002,  ..., 0.0009, 0.0010, 0.0007],
         [0.0007, 0.0006, 0.0006,  ..., 0.0008, 0.0007, 0.0004],
         [0.0008, 0.0006, 0.0010,  ..., 0.0014, 0.0009, 0.0004]],

        ...,

        [[0.0011, 0.0016, 0.0023,  ..., 0.0051, 0.0013, 0.0007],
         [0.0015, 0.0021, 0.0023,  ..., 0.0048, 0.0011, 0.0023],
         [0.0005, 0.0012, 0.0021,  ..., 0.0003, 0.0008, 0.0007],
         ...,
         [0.0010, 0.0012, 0.0006,  ..., 0.0005, 0.0007, 0.0003],
         [0.0014, 0.0012, 0.0006,  ..., 0.0009, 0.0011, 0.0008],
         [0.0014, 0.0005, 0.0014,  ..., 0.0015, 0.0007, 0.0002]],

        [[0.0011, 0.0016, 0.0055,  ..., 0.0010, 0.0049, 0.0005],
         [0.0055, 0.0096, 0.0051,  ..., 0.0018, 0.0041, 0.0062],
         [0.0069, 0.0096, 0.0067,  ..., 0.0067, 0.0049, 0.0071],
         ...,
         [0.0006, 0.0008, 0.0011,  ..., 0.0010, 0.0007, 0.0016],
         [0.0013, 0.0013, 0.0008,  ..., 0.0005, 0.0007, 0.0009],
         [0.0013, 0.0014, 0.0009,  ..., 0.0007, 0.0007, 0.0011]],

        [[0.0014, 0.0018, 0.0006,  ..., 0.0017, 0.0008, 0.0040],
         [0.0006, 0.0059, 0.0008,  ..., 0.0035, 0.0017, 0.0018],
         [0.0081, 0.0041, 0.0013,  ..., 0.0040, 0.0040, 0.0026],
         ...,
         [0.0008, 0.0010, 0.0003,  ..., 0.0009, 0.0006, 0.0004],
         [0.0008, 0.0014, 0.0002,  ..., 0.0016, 0.0006, 0.0011],
         [0.0009, 0.0002, 0.0017,  ..., 0.0004, 0.0008, 0.0004]]],
       grad_fn=<CopySlices>) 

loss = loss1 + lambda*loss2
loss1:nan loss2:nan
t:3, Finish constructing loss
require grad ? True True False
MatD grad and MatUx grad: torch.Size([37, 123]) torch.Size([37, 123, 2]) 

Grads has nan? MatD.grad: True 	MatU.grad: True

Where is nan? 
MatD.grad nan: tensor([[ 0, 20],
        [ 0, 21],
        [ 0, 22],
        ...,
        [25, 56],
        [25, 57],
        [25, 58]]) 
MatU.grad nan: tensor([[ 1, 22,  0],
        [ 1, 22,  1],
        [ 1, 23,  0],
        ...,
        [23, 55,  1],
        [23, 56,  0],
        [23, 56,  1]])

MatD.grad: tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000, -0.0391,  ...,  0.0553,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0179,  ..., -0.0141,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]) 

MatU.grad[0:10,0:10]: tensor([[[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  24.0474,   19.7938],
         [  -7.7453,   62.2579],
         [ -87.7714,   36.0323],
         [ -77.8208,   38.2813],
         [ -89.3682,   17.6300],
         [  74.7799,   55.5568],
         [ -63.1044,  -65.7825]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  62.6194,   -7.9681],
         [ -11.6206,  -33.5066],
         [ 291.2318, -216.7762],
         [ 113.6008, -400.4419],
         [ 273.6969,  207.4998],
         [-406.9861,   -5.6127],
         [-145.4082, -187.8552]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  93.2088,   -9.4458],
         [-157.4904,  187.0966],
         [-438.3450, -288.0491],
         [ -44.5197,  610.4035],
         [ 292.4717, -336.7759],
         [ 152.0158,  -69.1003],
         [  10.3722,  235.6765]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  50.5287,   78.8085],
         [-401.2077,   50.9278],
         [ 168.5578,  438.8102],
         [ 203.0731,  282.1678],
         [ 467.5607, -144.0206],
         [   3.8329,  -97.3973],
         [-607.0664,   41.9660]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -39.4365,  -24.0505],
         [-180.6413, -451.7524],
         [ 217.2126,  202.1532],
         [ 178.4510, -337.3496],
         [-428.8719,  108.1928],
         [-244.9187, -458.4453],
         [ -60.7358,  537.7766]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -44.9438,    2.1043],
         [ 404.6695, -152.1162],
         [ -76.2518, -442.7976],
         [  85.2389, -130.4000],
         [-596.5086,   54.5054],
         [ 415.8889,  491.3114],
         [-131.1033, -213.5973]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -84.6712,   35.8145],
         [  57.6279,  306.5699],
         [-452.5046,  357.0461],
         [ 449.3929,  408.6410],
         [ 265.0836, -289.2366],
         [ -13.2001,  141.4011],
         [-480.7532, -247.8850]]]) 

MatU.grad[10:20,10:20]: tensor([[[ 462.0031, -322.5894],
         [-495.9657,  176.4999],
         [ 161.1179,  469.7372],
         [ 298.9233, -192.9781],
         [-406.4785,  216.1725],
         [ -22.1989, -425.1974],
         [-243.9638,  359.2357],
         [ 559.8146,   13.0656],
         [  95.3966,  214.6872],
         [ -57.8265, -607.1119]],

        [[ 160.8466,   42.0371],
         [ -70.4705,   62.6022],
         [ -90.7413, -626.1268],
         [  31.9418,  -57.3537],
         [-290.5401,  526.3891],
         [ 159.7441, -360.0985],
         [-144.7069,  597.3135],
         [ 220.2972, -378.5820],
         [-612.6503,  -48.0323],
         [ 293.5799,  142.1406]],

        [[ 281.2558,  287.8225],
         [-491.7171, -246.6624],
         [-202.5144,  602.4706],
         [ 516.4898,   28.5884],
         [-466.6845, -356.9634],
         [ 501.8072, -207.5378],
         [-306.5871, -123.9533],
         [ 300.2311,  -94.8052],
         [-341.9528, -167.9100],
         [ 315.8944,  441.7255]],

        [[-210.6820, -240.8573],
         [ 481.6267, -248.7009],
         [ 317.8357,   62.4515],
         [-240.7099, -151.3078],
         [-443.3686,  244.4678],
         [ 271.5667, -138.6967],
         [-572.4886,  -76.4574],
         [  81.5810,  405.4563],
         [ 571.4417, -147.3053],
         [ -13.4886,  109.8690]],

        [[-388.8431, -121.9613],
         [-134.3049, -500.3311],
         [-154.5149, -173.2277],
         [ -15.4334, -422.5266],
         [   7.1015,  522.2678],
         [ 365.0253,  143.5473],
         [  47.3015,  243.8920],
         [ 118.9371, -482.6952],
         [-397.0763,  130.8082],
         [-504.8709,  176.8647]],

        [[ -41.2827,   10.9306],
         [ 479.4502,  293.1431],
         [-446.5827,  295.3160],
         [ 159.5260,  301.9960],
         [ 100.0085, -369.3535],
         [ 557.0543,  139.9496],
         [-516.2275,  -68.8329],
         [   2.4646,  635.6765],
         [ -59.0130, -204.7215],
         [ 263.1266,  200.0833]],

        [[-539.5234,  -27.4785],
         [ 108.1745,  365.8839],
         [ 296.9713,  -53.8302],
         [-359.8947,  101.6825],
         [-582.5504,  -81.8579],
         [ 154.4612,  195.9948],
         [-184.9490, -249.1933],
         [-304.1588,  -48.7312],
         [ 619.9525, -213.8394],
         [ 183.7805, -237.6691]],

        [[ -80.4784, -328.7970],
         [-176.2818, -424.2600],
         [ 481.2859,  -96.0177],
         [ 636.6367,   77.0551],
         [-305.9438, -492.4080],
         [ 116.1308, -162.7028],
         [ 615.4141,  147.9659],
         [-468.6553, -309.0481],
         [-169.9309,  459.6407],
         [-514.6336,  198.9448]],

        [[ 537.4383,  184.8200],
         [-216.9963, -136.0363],
         [ -38.4976,  273.8853],
         [-341.7818, -102.1007],
         [ 347.7813,  318.8064],
         [-341.0880, -262.0095],
         [ -89.9029,  500.8592],
         [ 193.1055,   84.6189],
         [-137.5078, -329.1075],
         [  26.6005,  381.1489]],

        [[ 377.8765,  147.1425],
         [-523.8118, -274.6507],
         [ 111.1898,  496.6253],
         [  41.2664, -273.2446],
         [-293.0115,  434.8031],
         [ 233.9259,    6.2304],
         [ 331.2415, -499.2618],
         [-246.0597, -243.2205],
         [ 433.5123,  232.1923],
         [-432.5526, -352.8709]]]) 

MatU.grad[20:30,20:30]:  tensor([[[ 494.2754, -170.6274],
         [-609.6345,  146.0182],
         [ 205.8313,  423.3845],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan]],

        [[-117.6727,  -76.4696],
         [  36.3215, -344.1549],
         [-245.8558, -536.5845],
         [ -11.6010, -203.4263],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan]],

        [[ 229.8769, -428.1711],
         [  92.0604,  240.9392],
         [ 353.0777,  284.3369],
         [-479.8363, -106.9385],
         [ 236.0150,  -75.7158],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan]],

        [[ 567.4349,   37.7451],
         [-539.0290,   35.5240],
         [-279.7258,  403.6880],
         [ -77.5798,  434.5432],
         [ 197.4253, -514.4452],
         [ -52.7995,  -81.1102],
         [-440.9389,  -84.5356],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan]],

        [[  30.7923, -231.9759],
         [ 430.9087,  311.4673],
         [-274.5664, -546.7924],
         [ 328.6171,  -41.5706],
         [ 450.4941,  339.4817],
         [-384.1713, -487.8476],
         [ 421.5586,  -62.7597],
         [ -35.9555, -147.8084],
         [ 359.6288,  122.0559],
         [ -17.5472, -351.7904]],

        [[-256.7975, -374.1499],
         [-416.1039, -148.2740],
         [ 261.7469, -100.6983],
         [-137.3504,  -27.4052],
         [-214.0137, -343.5031],
         [-285.8503,  347.6085],
         [ 196.0260,   33.3735],
         [-385.1503, -156.7900],
         [ 299.5427,  215.7102],
         [ 385.4707, -177.6999]],

        [[ 569.9807,  -75.5407],
         [ -90.0016,  110.0569],
         [-393.5372,  387.4901],
         [  32.1511,  367.3837],
         [ 101.0712, -315.6962],
         [-357.3533,  134.2150],
         [  74.1049,  501.8151],
         [-146.4438,   94.7773],
         [-418.2410,  218.9985],
         [-125.8728,   60.9502]],

        [[ 242.6718,   44.2683],
         [ 587.0667,   80.9514],
         [-232.7794, -546.4496],
         [ 134.9613,  227.9339],
         [ 336.0620, -166.7200],
         [ 458.3684,   82.3390],
         [-418.7036, -370.0785],
         [ 285.2852, -299.2974],
         [-209.1955, -198.4639],
         [ 300.3559, -101.8177]],

        [[-313.2130, -223.3041],
         [-236.7496,  224.5168],
         [-199.0547,  302.0618],
         [-143.4687, -182.4798],
         [ -55.3395,  501.8329],
         [  30.2864,   55.3721],
         [ -21.9933,  306.6263],
         [ -29.3971,  210.8625],
         [  64.0166,  -74.4473],
         [ 461.2827,  131.8791]],

        [[ 417.4720,  122.3118],
         [  10.2811, -295.8286],
         [  32.1221,  496.3291],
         [ 469.8485,  -51.2282],
         [-233.8182, -402.8904],
         [ 326.0350,   10.4502],
         [-177.1620, -265.3483],
         [-221.1162,  -63.9420],
         [  -9.4738,  418.7584],
         [-138.2045,  306.8505]]]) 

t:3, loss.item(): nan
Optimized result :
MatD: 
has nan? True 
tensor([[0.0161, 0.0164, 0.0161,  ..., 0.0122, 0.0127, 0.0114],
        [0.0161, 0.0159, 0.0156,  ..., 0.0125, 0.0123, 0.0120],
        [0.0164, 0.0159, 0.0181,  ..., 0.0088, 0.0125, 0.0098],
        ...,
        [0.0161, 0.0161, 0.0136,  ..., 0.0167, 0.0130, 0.0127],
        [0.0161, 0.0161, 0.0156,  ..., 0.0130, 0.0125, 0.0133],
        [0.0159, 0.0159, 0.0159,  ..., 0.0114, 0.0118, 0.0112]],
       requires_grad=True) 

MatUx: 
 has nan? True 
tensor([[ 2.6441e-04, -2.6441e-04, -2.5601e-04,  ...,  4.6311e-04,
         -1.2946e-03, -1.2946e-03],
        [-2.5601e-04, -2.4802e-04,  2.4802e-04,  ..., -1.5432e-04,
         -2.9749e-04, -2.9749e-04],
        [-5.2042e-04,  1.0000e-10,  5.2043e-04,  ...,  1.5432e-04,
         -2.6961e-03, -2.6961e-03],
        ...,
        [ 1.0000e-10,  1.0000e-10, -2.5601e-04,  ..., -1.7088e-04,
         -3.2878e-04, -3.2878e-04],
        [ 1.0000e-10, -5.0403e-04,  5.0403e-04,  ..., -4.8701e-04,
          8.3333e-04,  8.3333e-04],
        [ 1.0000e-10,  1.0000e-10,  2.5602e-04,  ...,  4.0107e-04,
         -5.2875e-04, -5.2875e-04]], grad_fn=<SelectBackward>)  








test_counter in loss_omega_mat(): 455
test_counter in loss_omega_mat(): 910
test_counter in loss_omega_mat(): 1365
test_counter in loss_omega_mat(): 1820
test_counter in loss_omega_mat(): 2275
test_counter in loss_omega_mat(): 2730
test_counter in loss_omega_mat(): 3185
mat_omega_topk has nan? True 

mat_duij has nan? True 

mat_uij has nan? True 

mat_omega_topk: tensor([[[0.9453, 0.9452, 0.9414,  ..., 0.8883, 0.7998, 0.7997],
         [0.9457, 0.9456, 0.9453,  ..., 0.8918, 0.8006, 0.8004],
         [0.9456, 0.9454, 0.9454,  ..., 0.8915, 0.8004, 0.8002],
         ...,
         [0.9458, 0.9457, 0.9457,  ..., 0.8897, 0.8006, 0.8004],
         [0.9458, 0.9457, 0.9457,  ..., 0.8914, 0.8006, 0.8005],
         [0.9457, 0.9456, 0.9428,  ..., 0.8871, 0.8003, 0.8001]],

        [[0.9458, 0.9458, 0.9452,  ..., 0.8906, 0.8005, 0.8005],
         [0.9459, 0.9458, 0.9457,  ..., 0.8940, 0.8006, 0.8005],
         [0.9457, 0.9456, 0.9455,  ..., 0.8943, 0.8005, 0.8004],
         ...,
         [0.9458, 0.9458, 0.9456,  ..., 0.8943, 0.8006, 0.8005],
         [0.9458, 0.9458, 0.9456,  ..., 0.8943, 0.8005, 0.8004],
         [0.9457, 0.9456, 0.9456,  ..., 0.8883, 0.8003, 0.8003]],

        [[0.9458, 0.9458, 0.9457,  ..., 0.8899, 0.8005, 0.8004],
         [0.9459, 0.9458, 0.9457,  ..., 0.8945, 0.8006, 0.8006],
         [0.9458, 0.9457, 0.9457,  ..., 0.8944, 0.8005, 0.8004],
         ...,
         [0.9459, 0.9458, 0.9454,  ..., 0.8942, 0.8006, 0.8006],
         [0.9458, 0.9458, 0.9455,  ..., 0.8942, 0.8006, 0.8004],
         [0.9457, 0.9457, 0.9455,  ..., 0.8856, 0.8004, 0.8001]],

        ...,

        [[0.9454, 0.9452, 0.9443,  ..., 0.8919, 0.8004, 0.8002],
         [0.9455, 0.9454, 0.9454,  ..., 0.8915, 0.8004, 0.8002],
         [0.9454, 0.9454, 0.9454,  ..., 0.8921, 0.8003, 0.8002],
         ...,
         [0.9456, 0.9455, 0.9453,  ..., 0.8941, 0.8003, 0.8002],
         [0.9455, 0.9455, 0.9455,  ..., 0.8941, 0.8002, 0.8002],
         [0.9457, 0.9456, 0.9455,  ..., 0.8859, 0.8004, 0.8003]],

        [[0.9454, 0.9449, 0.9443,  ..., 0.8892, 0.7998, 0.7988],
         [0.9454, 0.9454, 0.9431,  ..., 0.8881, 0.7999, 0.7988],
         [0.9454, 0.9454, 0.9432,  ..., 0.8891, 0.8000, 0.7998],
         ...,
         [0.9456, 0.9453, 0.9452,  ..., 0.8939, 0.8001, 0.8001],
         [0.9455, 0.9455, 0.9454,  ..., 0.8941, 0.8000, 0.8000],
         [0.9456, 0.9455, 0.9455,  ..., 0.8880, 0.8001, 0.8001]],

        [[0.9438, 0.9435, 0.9414,  ..., 0.8823, 0.7967, 0.7958],
         [0.9438, 0.9422, 0.9412,  ..., 0.8854, 0.7973, 0.7932],
         [0.9413, 0.9412, 0.9393,  ..., 0.8873, 0.7967, 0.7946],
         ...,
         [0.9454, 0.9453, 0.9453,  ..., 0.8933, 0.8000, 0.7999],
         [0.9456, 0.9454, 0.9454,  ..., 0.8924, 0.8000, 0.7999],
         [0.9456, 0.9455, 0.9432,  ..., 0.8876, 0.8000, 0.7998]]],
       grad_fn=<SliceBackward>) 

mat_duij: tensor([[[2.5187e-07, 8.0031e-08, 1.5099e-06,  ..., 1.1598e-05,
          1.8171e-07, 4.1221e-09],
         [1.7151e-07, 5.4320e-07, 1.0951e-07,  ..., 1.6803e-08,
          7.6219e-07, 7.6443e-07],
         [2.2381e-07, 6.5363e-07, 1.6037e-08,  ..., 4.4352e-06,
          1.8941e-06, 2.2181e-07],
         ...,
         [1.8548e-08, 2.1196e-11, 9.1376e-08,  ..., 8.2037e-07,
          1.1927e-09, 6.5442e-10],
         [5.9586e-07, 9.3031e-09, 1.1485e-09,  ..., 1.0792e-07,
          1.9985e-07, 1.2992e-08],
         [3.8759e-07, 1.0515e-06, 2.9453e-07,  ..., 4.1534e-06,
          1.2428e-06, 1.7531e-06]],

        [[6.7198e-07, 4.9002e-07, 2.9698e-08,  ..., 1.8064e-07,
          2.8391e-06, 1.5065e-06],
         [2.6967e-07, 2.4535e-10, 3.1817e-07,  ..., 1.0017e-07,
          2.6080e-07, 4.5609e-07],
         [1.7132e-08, 4.7968e-07, 2.7172e-07,  ..., 5.2691e-07,
          1.2106e-06, 6.5498e-08],
         ...,
         [2.9423e-07, 5.5465e-08, 5.9451e-07,  ..., 5.5531e-07,
          3.6794e-08, 1.8728e-06],
         [7.2686e-08, 1.8670e-06, 3.2985e-07,  ..., 4.8211e-08,
          7.5094e-07, 5.7388e-07],
         [2.0354e-08, 1.9642e-07, 7.5603e-07,  ..., 7.0157e-07,
          3.5176e-06, 3.2602e-07]],

        [[1.8620e-07, 7.1163e-07, 3.2239e-07,  ..., 4.8109e-07,
          2.9754e-06, 6.7255e-07],
         [1.9949e-07, 6.6033e-09, 1.7677e-08,  ..., 9.4947e-08,
          8.7995e-07, 3.2769e-07],
         [3.9342e-07, 3.8611e-07, 1.8797e-08,  ..., 1.1359e-08,
          2.8775e-07, 2.2006e-06],
         ...,
         [1.8388e-08, 5.7372e-07, 1.3874e-06,  ..., 1.1966e-06,
          1.4592e-06, 1.8051e-07],
         [7.3122e-08, 3.2439e-09, 4.9821e-09,  ..., 4.4273e-08,
          3.0910e-07, 5.1092e-09],
         [5.7708e-08, 2.0631e-09, 4.6027e-07,  ..., 8.5550e-08,
          4.5141e-07, 4.0448e-07]],

        ...,

        [[4.7415e-08, 9.6735e-07, 3.9417e-09,  ..., 8.4456e-08,
          1.8050e-06, 4.1665e-07],
         [4.4245e-08, 1.9553e-07, 4.2533e-07,  ..., 5.2516e-07,
          2.1061e-06, 1.6456e-06],
         [3.9480e-07, 5.2859e-08, 6.6044e-07,  ..., 4.2077e-08,
          1.0470e-07, 4.4864e-07],
         ...,
         [3.6125e-06, 9.1253e-09, 5.0053e-07,  ..., 6.9624e-07,
          8.9810e-07, 8.6488e-07],
         [3.9498e-07, 5.5071e-07, 2.5227e-10,  ..., 5.2981e-07,
          1.6624e-08, 9.1213e-07],
         [3.5019e-08, 6.4318e-07, 3.4965e-07,  ..., 6.9974e-08,
          2.7783e-08, 1.3925e-06]],

        [[9.6511e-07, 2.9994e-06, 6.5760e-08,  ..., 9.2509e-06,
          7.4776e-06, 1.6637e-07],
         [7.3249e-09, 7.3157e-07, 1.4695e-05,  ..., 4.7658e-05,
          7.2895e-08, 8.4761e-07],
         [1.1084e-05, 2.2752e-05, 6.3120e-06,  ..., 1.2546e-05,
          6.4149e-05, 7.6913e-05],
         ...,
         [1.2296e-06, 1.9403e-07, 5.9008e-07,  ..., 8.5453e-07,
          2.1980e-06, 4.9088e-08],
         [3.1030e-08, 1.9935e-12, 2.6013e-07,  ..., 1.2867e-06,
          4.2336e-06, 4.1884e-07],
         [1.9138e-08, 1.1832e-06, 3.0879e-08,  ..., 3.8062e-07,
          4.9698e-06, 1.6022e-06]],

        [[2.3324e-07, 3.1548e-06, 1.3454e-07,  ..., 2.9082e-06,
          3.3101e-06, 1.4820e-06],
         [3.3511e-08, 4.4789e-06, 4.4945e-07,  ..., 2.4576e-06,
          1.6357e-06, 4.2686e-06],
         [3.5530e-05, 1.2901e-06, 2.2020e-06,  ..., 1.5111e-05,
          2.0113e-06, 5.5188e-06],
         ...,
         [9.9701e-07, 7.2525e-07, 4.0427e-07,  ..., 6.4702e-08,
          1.1109e-06, 2.3679e-08],
         [2.0390e-07, 1.2920e-07, 1.9680e-07,  ..., 2.8559e-09,
          2.9409e-06, 1.5068e-06],
         [1.6243e-08, 3.5693e-07, 1.2241e-08,  ..., 4.7789e-07,
          2.2330e-07, 7.7582e-07]]], grad_fn=<CopySlices>) 

mat_uij: tensor([[[1.0416e-03, 1.0999e-03, 5.8581e-04,  ..., 8.9177e-04,
          3.4160e-04, 9.6964e-04],
         [1.1220e-03, 2.7119e-04, 1.0416e-03,  ..., 1.2395e-03,
          1.0635e-03, 1.1732e-03],
         [2.7119e-04, 9.9544e-04, 9.0373e-04,  ..., 1.2533e-03,
          2.9672e-04, 1.0268e-03],
         ...,
         [5.4274e-04, 7.6256e-04, 3.0754e-04,  ..., 7.5458e-04,
          6.5259e-04, 8.5753e-04],
         [8.0708e-04, 3.0754e-04, 6.3882e-04,  ..., 5.7865e-04,
          2.8168e-04, 5.1585e-04],
         [6.3882e-04, 1.0717e-03, 7.8444e-04,  ..., 1.4937e-03,
          7.9475e-04, 9.8237e-04]],

        [[1.4086e-03, 7.3331e-04, 1.0999e-03,  ..., 1.5381e-03,
          4.7711e-04, 1.4964e-03],
         [7.3090e-05, 7.3331e-04, 1.1220e-03,  ..., 3.8189e-04,
          7.7461e-04, 5.2449e-04],
         [1.2521e-03, 4.7581e-04, 8.9772e-04,  ..., 4.0531e-04,
          4.7711e-04, 4.8365e-04],
         ...,
         [2.4140e-04, 5.4274e-04, 8.1918e-04,  ..., 9.0940e-04,
          8.6038e-04, 6.8040e-04],
         [6.0353e-04, 8.0708e-04, 1.1348e-03,  ..., 1.0605e-03,
          1.5502e-03, 1.1074e-03],
         [2.3457e-04, 1.1348e-03, 1.0717e-03,  ..., 4.2737e-04,
          7.0192e-04, 4.4374e-04]],

        [[3.7337e-04, 1.4086e-03, 7.4616e-04,  ..., 6.2140e-04,
          8.9136e-04, 1.1589e-03],
         [7.3090e-05, 7.0258e-04, 7.4616e-04,  ..., 9.6719e-04,
          1.0635e-03, 8.8754e-04],
         [9.1367e-04, 1.2521e-03, 1.0711e-03,  ..., 1.1921e-03,
          1.2199e-03, 2.9672e-04],
         ...,
         [9.8444e-04, 2.4140e-04, 9.9420e-04,  ..., 2.2787e-04,
          6.5259e-04, 3.4872e-04],
         [6.0353e-04, 1.0124e-03, 6.2618e-04,  ..., 7.8406e-04,
          2.8168e-04, 7.4760e-04],
         [2.8992e-04, 2.3457e-04, 6.2618e-04,  ..., 1.6264e-03,
          1.0987e-03, 9.8237e-04]],

        ...,

        [[8.7033e-04, 1.3159e-03, 1.5376e-03,  ..., 1.3491e-03,
          9.5240e-04, 7.8626e-04],
         [3.7225e-04, 5.0441e-04, 8.7033e-04,  ..., 4.2788e-03,
          8.2368e-04, 1.2806e-03],
         [7.7760e-04, 5.0441e-04, 8.2456e-04,  ..., 1.1395e-03,
          1.0234e-03, 7.8626e-04],
         ...,
         [8.4604e-04, 6.4543e-04, 1.1850e-03,  ..., 1.1952e-03,
          1.0643e-03, 1.0811e-03],
         [6.8752e-04, 8.0207e-04, 4.3276e-04,  ..., 1.0001e-03,
          3.8867e-04, 4.0796e-04],
         [1.9585e-04, 1.4771e-03, 8.0207e-04,  ..., 8.8697e-04,
          3.5872e-04, 1.0643e-03]],

        [[3.8907e-03, 1.7767e-03, 1.5376e-03,  ..., 3.0832e-03,
          3.5576e-03, 2.5419e-04],
         [3.8907e-03, 6.8900e-03, 3.4501e-03,  ..., 1.8130e-03,
          2.7615e-03, 4.8462e-03],
         [4.9041e-03, 6.8900e-03, 4.2512e-03,  ..., 5.5316e-03,
          4.5352e-03, 3.5576e-03],
         ...,
         [8.4604e-04, 4.3830e-04, 1.1122e-03,  ..., 7.4603e-04,
          3.9102e-04, 6.3816e-04],
         [1.4865e-03, 6.8752e-04, 8.8647e-04,  ..., 8.3380e-04,
          3.0988e-04, 1.0295e-03],
         [1.4771e-03, 1.4865e-03, 6.6346e-04,  ..., 3.4954e-04,
          3.9102e-04, 1.4496e-03]],

        [[6.9674e-04, 1.3637e-03, 2.2788e-03,  ..., 1.8030e-03,
          2.2990e-03, 6.4555e-04],
         [6.9674e-04, 3.8907e-03, 2.1369e-03,  ..., 1.5160e-03,
          1.4496e-03, 4.4459e-04],
         [5.6735e-03, 2.1369e-03, 1.8740e-03,  ..., 2.4723e-03,
          2.2990e-03, 3.0255e-03],
         ...,
         [1.2338e-03, 4.3830e-04, 8.9423e-04,  ..., 1.7368e-03,
          7.7340e-04, 1.2118e-03],
         [7.7076e-04, 8.8647e-04, 1.3788e-03,  ..., 1.6463e-03,
          5.2763e-04, 2.6073e-04],
         [7.7076e-04, 6.6346e-04, 1.1425e-03,  ..., 1.0758e-03,
          7.7340e-04, 8.1366e-04]]], grad_fn=<CopySlices>) 

loss = loss1 + lambda*loss2
loss1:nan loss2:nan
t:4, Finish constructing loss
require grad ? True True False
MatD grad and MatUx grad: torch.Size([37, 123]) torch.Size([37, 123, 2]) 

Grads has nan? MatD.grad: True 	MatU.grad: True

Where is nan? 
MatD.grad nan: tensor([[ 0, 14],
        [ 0, 15],
        [ 0, 16],
        ...,
        [32, 23],
        [32, 24],
        [32, 25]]) 
MatU.grad nan: tensor([[ 1, 16,  0],
        [ 1, 16,  1],
        [ 1, 17,  0],
        ...,
        [29, 60,  1],
        [29, 61,  0],
        [29, 61,  1]])

MatD.grad: tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000, -0.0545,  ...,  0.0412,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0153,  ..., -0.0343,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]) 

MatU.grad[0:10,0:10]: tensor([[[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  25.7876,   17.3676],
         [ -22.2517,   51.8662],
         [ -94.5497,   12.0799],
         [ -79.6643,  -25.0181],
         [ -56.2342,  -68.1603],
         [  47.4086,  -14.0425],
         [ -60.6356,    1.7583]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  52.3855,  -27.9209],
         [-156.9898, -149.5995],
         [ 391.9233, -328.9904],
         [ 333.4331,    4.1478],
         [ 136.7849,  428.4335],
         [-210.3741,  222.3096],
         [-243.2634, -353.4290]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  73.5918,  -23.5706],
         [-188.9321,  472.8173],
         [-326.5306,  131.4755],
         [-165.1535,  350.2400],
         [-157.7233, -321.0454],
         [ 294.0001,  241.2214],
         [ 365.5609, -477.7122]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  65.8640,   47.0750],
         [-189.8863, -337.8901],
         [-193.4569,   78.0119],
         [ 460.9570, -388.7828],
         [ 406.2894, -211.3268],
         [-448.0661, -135.0916],
         [-521.6149,  254.9526]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  63.2752,  -39.5726],
         [-435.9354, -256.8721],
         [ 395.8380,  112.7453],
         [ 235.6065,  434.6467],
         [-367.6907, -355.3754],
         [  18.4038,   14.1280],
         [ 293.7433,  381.7264]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  45.3503,  -74.8475],
         [ -65.3616,  221.2925],
         [ 494.5035,  -86.7463],
         [-353.0156,  402.0354],
         [-100.5835, -452.9534],
         [ 148.0085,  544.7973],
         [ -62.6242,  188.3698]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  76.3387,   14.2964],
         [-358.6647, -131.2697],
         [ 260.5773,  -45.4737],
         [ -23.1408,  -89.8744],
         [ 479.9219, -103.7936],
         [-156.7007, -524.4211],
         [-382.2647, -472.8749]]]) 

MatU.grad[10:20,10:20]: tensor([[[ 313.2870, -278.4597],
         [-181.3386,  262.5145],
         [ 168.5336,  -83.2910],
         [-322.6704, -318.7424],
         [-227.4006,  397.9266],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan]],

        [[ -93.3351, -386.0995],
         [-384.6400,  319.9872],
         [ 251.0345, -441.6356],
         [ 507.9956,  257.4594],
         [-281.0569,   78.5143],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan]],

        [[ 364.0844,  146.5645],
         [-248.9027, -346.6667],
         [-228.5193,  513.7349],
         [  94.6473, -125.9716],
         [-379.7739, -250.1900],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan]],

        [[-469.9090,   81.9796],
         [ 392.8115,  -15.3048],
         [  92.5232, -502.0845],
         [  85.7654, -342.9643],
         [-355.9628,  389.0770],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan]],

        [[-210.8835, -340.4749],
         [-400.6520,  212.6113],
         [ 318.7017, -465.7454],
         [ 143.0655,  182.8789],
         [ 335.9596,  205.5308],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan]],

        [[ 402.1646, -350.7585],
         [ 173.8481,  411.8090],
         [-182.1053,  381.0454],
         [-269.3439,   30.3044],
         [ 279.1820, -343.7401],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan]],

        [[ -77.4537,  -37.6793],
         [ -68.0327,  -11.0815],
         [ 249.0597,  443.0007],
         [-528.1875,  117.3649],
         [-340.5872, -282.6619],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan]],

        [[-538.5345,  262.2885],
         [ 223.1859, -180.7681],
         [ 116.3580,  263.1102],
         [ 552.2256,   45.6599],
         [-127.1030, -197.7691],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan]],

        [[ -50.6388, -401.8821],
         [ 296.9220, -419.4667],
         [-346.8581,  138.1744],
         [ 208.2774,  218.2225],
         [-201.5765,   80.1074],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan]],

        [[-127.1030, -375.6576],
         [  30.1920, -209.2370],
         [-290.2759, -216.9046],
         [ 298.7766,  430.0809],
         [ 247.3967, -313.1193],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan],
         [      nan,       nan]]]) 

MatU.grad[20:30,20:30]:  tensor([[[     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan]],

        [[     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan]],

        [[     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan]],

        [[     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan]],

        [[     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan]],

        [[     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan]],

        [[     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan]],

        [[     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan]],

        [[     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan]],

        [[125.0081, 470.5891],
         [228.7149, -59.4495],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan],
         [     nan,      nan]]]) 

t:4, loss.item(): nan
Optimized result :
MatD: 
has nan? True 
tensor([[0.0161, 0.0164, 0.0161,  ..., 0.0122, 0.0127, 0.0114],
        [0.0161, 0.0159, 0.0156,  ..., 0.0125, 0.0123, 0.0120],
        [0.0164, 0.0159, 0.0190,  ..., 0.0079, 0.0125, 0.0098],
        ...,
        [0.0161, 0.0161, 0.0127,  ..., 0.0176, 0.0130, 0.0127],
        [0.0161, 0.0161, 0.0156,  ..., 0.0130, 0.0125, 0.0133],
        [0.0159, 0.0159, 0.0159,  ..., 0.0114, 0.0118, 0.0112]],
       requires_grad=True) 

MatUx: 
 has nan? True 
tensor([[ 2.6441e-04, -2.6441e-04, -2.5601e-04,  ...,  4.6311e-04,
         -1.2946e-03, -1.2946e-03],
        [-2.5601e-04, -2.4802e-04,  2.4802e-04,  ..., -1.5432e-04,
         -2.9749e-04, -2.9749e-04],
        [-5.2042e-04,  1.0000e-10,  5.2043e-04,  ...,  1.5432e-04,
         -2.6961e-03, -2.6961e-03],
        ...,
        [ 1.0000e-10,  1.0000e-10, -2.5601e-04,  ..., -1.7088e-04,
         -3.2878e-04, -3.2878e-04],
        [ 1.0000e-10, -5.0403e-04,  5.0403e-04,  ..., -4.8701e-04,
          8.3333e-04,  8.3333e-04],
        [ 1.0000e-10,  1.0000e-10,  2.5602e-04,  ...,  4.0107e-04,
         -5.2875e-04, -5.2875e-04]], grad_fn=<SelectBackward>)  








test_counter in loss_omega_mat(): 455
test_counter in loss_omega_mat(): 910
test_counter in loss_omega_mat(): 1365
test_counter in loss_omega_mat(): 1820
test_counter in loss_omega_mat(): 2275
test_counter in loss_omega_mat(): 2730
test_counter in loss_omega_mat(): 3185
mat_omega_topk has nan? True 

mat_duij has nan? True 

mat_uij has nan? True 

mat_omega_topk: tensor([[[0.9451, 0.9450, 0.9400,  ..., 0.8867, 0.7998, 0.7996],
         [0.9457, 0.9454, 0.9451,  ..., 0.8907, 0.8005, 0.8004],
         [0.9457, 0.9457, 0.9454,  ..., 0.8911, 0.8004, 0.8004],
         ...,
         [0.9457, 0.9454, 0.9454,  ..., 0.8873, 0.8005, 0.8002],
         [0.9458, 0.9455, 0.9454,  ..., 0.8905, 0.8006, 0.8001],
         [0.9457, 0.9455, 0.9417,  ..., 0.8860, 0.8006, 0.8002]],

        [[0.9456, 0.9456, 0.9450,  ..., 0.8888, 0.8006, 0.8002],
         [0.9456, 0.9456, 0.9454,  ..., 0.8937, 0.8005, 0.8003],
         [0.9455, 0.9454, 0.9454,  ..., 0.8942, 0.8002, 0.8002],
         ...,
         [0.9457, 0.9457, 0.9452,  ..., 0.8940, 0.8004, 0.8004],
         [0.9458, 0.9458, 0.9455,  ..., 0.8941, 0.8005, 0.8002],
         [0.9457, 0.9457, 0.9455,  ..., 0.8878, 0.8005, 0.8002]],

        [[0.9456, 0.9456, 0.9456,  ..., 0.8886, 0.8005, 0.8003],
         [0.9456, 0.9456, 0.9456,  ..., 0.8945, 0.8005, 0.8004],
         [0.9456, 0.9456, 0.9455,  ..., 0.8943, 0.8004, 0.8003],
         ...,
         [0.9457, 0.9457, 0.9454,  ..., 0.8941, 0.8005, 0.8005],
         [0.9458, 0.9457, 0.9456,  ..., 0.8942, 0.8006, 0.8004],
         [0.9457, 0.9457, 0.9456,  ..., 0.8846, 0.8006, 0.8005]],

        ...,

        [[0.9454, 0.9451, 0.9444,  ..., 0.8912, 0.8004, 0.7998],
         [0.9456, 0.9454, 0.9454,  ..., 0.8918, 0.8004, 0.7997],
         [0.9455, 0.9454, 0.9453,  ..., 0.8922, 0.8001, 0.7998],
         ...,
         [0.9456, 0.9455, 0.9453,  ..., 0.8943, 0.8003, 0.8003],
         [0.9456, 0.9455, 0.9454,  ..., 0.8940, 0.8003, 0.8002],
         [0.9457, 0.9455, 0.9454,  ..., 0.8830, 0.8005, 0.8002]],

        [[0.9455, 0.9444, 0.9440,  ..., 0.8885, 0.7994, 0.7988],
         [0.9455, 0.9454, 0.9442,  ..., 0.8901, 0.7996, 0.7986],
         [0.9454, 0.9453, 0.9440,  ..., 0.8908, 0.7997, 0.7994],
         ...,
         [0.9456, 0.9455, 0.9455,  ..., 0.8940, 0.8004, 0.8003],
         [0.9456, 0.9455, 0.9455,  ..., 0.8940, 0.8003, 0.8002],
         [0.9455, 0.9455, 0.9454,  ..., 0.8853, 0.8001, 0.8001]],

        [[0.9445, 0.9438, 0.9395,  ..., 0.8802, 0.7982, 0.7961],
         [0.9445, 0.9433, 0.9429,  ..., 0.8840, 0.7987, 0.7947],
         [0.9429, 0.9425, 0.9412,  ..., 0.8896, 0.7982, 0.7967],
         ...,
         [0.9457, 0.9457, 0.9453,  ..., 0.8929, 0.8002, 0.8002],
         [0.9457, 0.9457, 0.9454,  ..., 0.8913, 0.8003, 0.7999],
         [0.9457, 0.9454, 0.9428,  ..., 0.8851, 0.8002, 0.7997]]],
       grad_fn=<SliceBackward>) 

mat_duij: tensor([[[8.5561e-07, 3.3493e-07, 5.8192e-07,  ..., 9.8503e-06,
          1.7933e-08, 5.1778e-07],
         [1.6341e-08, 6.5172e-08, 1.0052e-06,  ..., 1.1888e-06,
          8.5464e-10, 4.5504e-07],
         [3.1719e-08, 5.7986e-08, 1.5982e-07,  ..., 1.5466e-06,
          1.4701e-08, 7.1513e-07],
         ...,
         [4.8693e-09, 1.6207e-06, 3.3525e-07,  ..., 1.0379e-09,
          8.4183e-07, 1.2643e-06],
         [4.4470e-07, 9.8501e-08, 1.2274e-06,  ..., 1.3843e-06,
          1.1811e-07, 1.3229e-07],
         [7.1197e-08, 4.7451e-07, 3.0955e-09,  ..., 1.9948e-06,
          1.8421e-07, 1.9405e-09]],

        [[3.9498e-07, 4.0363e-07, 4.3944e-07,  ..., 2.2283e-06,
          5.5056e-07, 4.5907e-07],
         [1.3119e-07, 1.3973e-07, 1.4195e-08,  ..., 2.7787e-06,
          5.5984e-07, 4.3832e-08],
         [4.7723e-07, 9.1083e-07, 5.0889e-07,  ..., 2.1048e-07,
          5.6167e-08, 3.6032e-07],
         ...,
         [1.8487e-09, 6.7395e-07, 1.6921e-06,  ..., 1.8308e-06,
          1.5405e-08, 1.0241e-06],
         [3.7446e-07, 1.4297e-07, 7.2419e-07,  ..., 7.3723e-07,
          2.5136e-07, 3.1835e-07],
         [8.3310e-08, 3.3921e-08, 6.0706e-08,  ..., 3.0644e-08,
          2.7696e-07, 1.1238e-06]],

        [[7.1663e-08, 1.0411e-06, 6.1134e-08,  ..., 2.2265e-07,
          5.8086e-07, 6.0838e-07],
         [1.0921e-07, 1.3045e-06, 6.0807e-07,  ..., 2.4273e-06,
          3.2507e-06, 1.8987e-06],
         [4.4137e-08, 4.0260e-08, 1.8098e-06,  ..., 5.7402e-06,
          1.0928e-06, 4.1812e-06],
         ...,
         [4.6092e-07, 7.0369e-07, 2.1410e-07,  ..., 1.8577e-06,
          3.3626e-07, 1.7392e-06],
         [4.4990e-07, 3.4438e-07, 2.7169e-07,  ..., 4.3313e-07,
          1.2352e-07, 2.5579e-07],
         [8.6474e-08, 1.1907e-07, 3.7354e-07,  ..., 2.9073e-07,
          4.7967e-07, 2.1446e-07]],

        ...,

        [[5.6473e-07, 6.4586e-07, 4.4695e-07,  ..., 1.7853e-07,
          2.8859e-07, 1.7239e-07],
         [8.4266e-07, 2.8832e-08, 8.4267e-07,  ..., 1.8753e-06,
          6.3240e-08, 3.1336e-06],
         [4.1276e-08, 2.0055e-07, 2.6377e-07,  ..., 1.3911e-09,
          5.0131e-07, 3.9340e-06],
         ...,
         [1.9406e-06, 4.3629e-08, 1.9064e-06,  ..., 9.3245e-09,
          3.7445e-06, 1.0166e-06],
         [3.0401e-07, 1.1065e-08, 4.0834e-07,  ..., 2.4639e-07,
          5.4404e-07, 5.3617e-08],
         [1.4159e-08, 2.3622e-10, 7.1264e-08,  ..., 4.1578e-08,
          1.9754e-07, 1.3640e-06]],

        [[3.4076e-06, 4.9943e-07, 2.6939e-06,  ..., 6.4374e-06,
          3.4787e-06, 2.3979e-06],
         [3.6934e-06, 9.0283e-09, 8.2301e-06,  ..., 2.3549e-05,
          4.5519e-07, 1.3242e-05],
         [4.7500e-06, 7.0974e-06, 1.1530e-07,  ..., 4.0398e-06,
          5.0697e-05, 3.8263e-05],
         ...,
         [5.3588e-07, 1.5218e-06, 4.5552e-07,  ..., 5.0190e-07,
          1.6876e-06, 7.8346e-08],
         [7.0795e-07, 3.4999e-07, 1.6283e-07,  ..., 2.1217e-06,
          1.2133e-06, 1.0531e-06],
         [4.8278e-08, 1.8350e-07, 6.2830e-07,  ..., 9.2193e-07,
          3.4294e-06, 1.1278e-07]],

        [[3.7458e-08, 3.3406e-06, 4.6302e-09,  ..., 1.8526e-07,
          1.3645e-07, 6.4319e-06],
         [5.2200e-08, 1.2431e-05, 6.0593e-08,  ..., 1.2356e-05,
          1.0454e-06, 1.9258e-05],
         [3.2079e-08, 9.9861e-06, 5.0302e-07,  ..., 1.4441e-05,
          1.1596e-07, 7.3427e-06],
         ...,
         [1.5846e-07, 1.9092e-07, 1.4572e-06,  ..., 4.0617e-07,
          1.0725e-07, 5.4504e-07],
         [5.5252e-07, 3.8782e-08, 4.5259e-09,  ..., 1.6921e-07,
          1.8725e-07, 1.8822e-06],
         [2.3242e-08, 7.6628e-07, 2.0072e-08,  ..., 1.0434e-07,
          5.8310e-08, 5.4518e-07]]], grad_fn=<CopySlices>) 

mat_uij: tensor([[[8.5409e-04, 8.8832e-04, 6.9369e-05,  ..., 2.4639e-04,
          6.0328e-04, 9.4426e-04],
         [3.6909e-04, 5.6197e-04, 8.5409e-04,  ..., 8.6646e-04,
          9.4814e-04, 8.2157e-04],
         [5.8742e-04, 3.6909e-04, 6.3905e-04,  ..., 1.0930e-03,
          2.4660e-04, 8.8953e-04],
         ...,
         [4.5683e-05, 7.6397e-04, 7.0695e-04,  ..., 7.0065e-04,
          6.0382e-04, 7.2678e-04],
         [4.0056e-04, 4.5612e-04, 7.6397e-04,  ..., 9.2846e-04,
          4.1691e-04, 2.1426e-04],
         [7.3695e-04, 4.5612e-04, 9.0624e-04,  ..., 4.6283e-04,
          7.0755e-04, 7.2678e-04]],

        [[1.3412e-03, 6.8234e-04, 8.8832e-04,  ..., 5.4596e-04,
          9.0404e-04, 7.7995e-04],
         [1.1099e-03, 6.8234e-04, 5.6197e-04,  ..., 9.4778e-04,
          5.3448e-04, 8.4861e-04],
         [8.6554e-04, 6.3905e-04, 6.5951e-04,  ..., 5.5363e-04,
          6.3485e-04, 5.8332e-04],
         ...,
         [4.5683e-05, 6.3290e-04, 8.9437e-04,  ..., 7.4700e-04,
          6.6895e-04, 4.0031e-04],
         [4.0056e-04, 6.9195e-04, 8.9193e-04,  ..., 5.2246e-04,
          1.1939e-03, 5.2891e-04],
         [5.9343e-04, 7.3695e-04, 8.9193e-04,  ..., 1.2382e-03,
          3.0986e-04, 1.0165e-05]],

        [[1.3412e-03, 5.6434e-04, 9.1750e-04,  ..., 7.1825e-04,
          1.0172e-03, 4.8803e-04],
         [7.7547e-04, 1.1099e-03, 5.6434e-04,  ..., 1.0617e-03,
          9.4814e-04, 7.7806e-04],
         [1.0337e-03, 1.2246e-03, 8.6554e-04,  ..., 1.0966e-03,
          8.8953e-04, 1.3501e-03],
         ...,
         [6.3290e-04, 9.5557e-04, 6.8444e-04,  ..., 5.2246e-04,
          6.0382e-04, 3.4131e-04],
         [6.9195e-04, 8.9408e-04, 2.3730e-04,  ..., 3.7261e-04,
          4.1691e-04, 3.6050e-04],
         [5.9343e-04, 8.1184e-04, 2.3730e-04,  ..., 1.1701e-03,
          7.0755e-04, 8.2932e-04]],

        ...,

        [[6.9979e-04, 6.7129e-04, 8.1181e-04,  ..., 1.6839e-03,
          2.4997e-04, 8.8059e-04],
         [7.4558e-04, 6.9979e-04, 1.3659e-03,  ..., 3.6399e-03,
          3.0105e-04, 1.1080e-03],
         [1.0785e-03, 1.3659e-03, 5.6373e-04,  ..., 1.0727e-03,
          1.5794e-03, 8.8059e-04],
         ...,
         [1.0491e-03, 7.4309e-04, 1.1227e-03,  ..., 1.1105e-03,
          1.1804e-03, 1.4272e-03],
         [6.0997e-04, 9.1095e-04, 3.9323e-04,  ..., 6.0411e-04,
          3.8850e-04, 5.7034e-04],
         [4.6487e-04, 8.8714e-04, 3.9323e-04,  ..., 4.4925e-04,
          4.5965e-04, 9.2411e-04]],

        [[2.4468e-03, 8.1181e-04, 1.7540e-03,  ..., 3.1005e-03,
          2.4801e-03, 1.6492e-04],
         [2.4468e-03, 4.2153e-03, 3.2264e-03,  ..., 1.8563e-03,
          1.8158e-03, 3.6312e-03],
         [4.2153e-03, 2.8763e-03, 2.3218e-03,  ..., 3.8060e-03,
          2.5138e-03, 2.4801e-03],
         ...,
         [1.0491e-03, 7.3842e-04, 5.0807e-04,  ..., 5.6966e-05,
          1.5627e-03, 5.5507e-04],
         [6.0997e-04, 1.0225e-03, 5.0807e-04,  ..., 9.0821e-04,
          5.5963e-04, 6.7234e-04],
         [8.8714e-04, 1.0225e-03, 1.3909e-04,  ..., 1.1052e-04,
          8.2941e-04, 1.3014e-03]],

        [[6.0805e-04, 7.7923e-04, 2.7029e-03,  ..., 1.9522e-03,
          7.4615e-04, 5.0923e-05],
         [6.0805e-04, 2.0524e-03, 2.2860e-04,  ..., 3.3664e-03,
          1.3645e-03, 1.3502e-03],
         [2.2860e-04, 3.1938e-03, 1.4374e-03,  ..., 2.2367e-03,
          7.4615e-04, 2.0097e-03],
         ...,
         [9.6844e-04, 6.7166e-04, 7.2632e-04,  ..., 1.5495e-03,
          6.9708e-04, 1.1281e-03],
         [7.5726e-04, 6.7166e-04, 5.6150e-04,  ..., 1.1706e-03,
          3.6054e-04, 7.8456e-04],
         [7.5726e-04, 1.3909e-04, 1.0952e-03,  ..., 1.3961e-03,
          6.9708e-04, 7.5906e-04]]], grad_fn=<CopySlices>) 

loss = loss1 + lambda*loss2
loss1:nan loss2:nan
t:5, Finish constructing loss
require grad ? True True False
MatD grad and MatUx grad: torch.Size([37, 123]) torch.Size([37, 123, 2]) 

Grads has nan? MatD.grad: True 	MatU.grad: True

Where is nan? 
MatD.grad nan: tensor([[ 0,  8],
        [ 0,  9],
        [ 0, 10],
        ...,
        [36, 66],
        [36, 67],
        [36, 68]]) 
MatU.grad nan: tensor([[ 1, 10,  0],
        [ 1, 10,  1],
        [ 1, 11,  0],
        ...,
        [32, 68,  1],
        [32, 69,  0],
        [32, 69,  1]])

MatD.grad: tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000, -0.0347,  ...,  0.0167,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0158,  ..., -0.0437,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]) 

MatU.grad[0:10,0:10]: tensor([[[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [      nan,       nan]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  29.0995,  -10.7862],
         [ -32.3198,  -38.1473],
         [ -62.5839,  -65.8530],
         [ -19.0258,  -88.2998],
         [ -11.4437,  -92.8169],
         [ -49.2893,  -36.1690],
         [      nan,       nan]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  33.7839,  -49.5938],
         [-195.4156,    5.9885],
         [ 354.4738, -138.5499],
         [ 339.7166,  209.9515],
         [-176.0981,  396.2256],
         [ 210.5252,    6.8865],
         [      nan,       nan]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [ -62.2870,  -45.7831],
         [-104.9917,  449.4330],
         [ 214.5414,  450.2128],
         [-187.9374, -137.1144],
         [-392.8223, -111.1730],
         [ 170.5611,  322.1373],
         [      nan,       nan]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  33.1824,   16.8268],
         [ 153.4196, -394.3050],
         [-374.1141, -257.9535],
         [ 395.9292, -421.4460],
         [ 324.7657, -156.7910],
         [-475.3734,   40.1450],
         [      nan,       nan]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  52.0590,    8.7772],
         [-432.1584,  -80.9638],
         [ 263.2381,  -84.9510],
         [  10.8299,  444.1075],
         [-229.6860, -414.4507],
         [ 292.0934,  448.2908],
         [      nan,       nan]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  55.2595,  -77.1334],
         [-323.3773,  240.8613],
         [ 359.5699,  424.2863],
         [-169.4762,  426.2941],
         [ 307.7119, -365.2645],
         [-419.0494,  -90.6471],
         [      nan,       nan]],

        [[   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [   0.0000,    0.0000],
         [  82.8135,    3.0681],
         [-184.0678, -232.0409],
         [ 486.1636, -325.9604],
         [-305.3226, -402.4741],
         [ 153.7643,  173.7181],
         [  29.0419, -470.2317],
         [      nan,       nan]]]) 

MatU.grad[10:20,10:20]: tensor([[[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]]]) 

MatU.grad[20:30,20:30]:  tensor([[[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]]]) 

t:5, loss.item(): nan
Optimized result :
MatD: 
has nan? True 
tensor([[0.0161, 0.0164, 0.0161,  ..., 0.0122, 0.0127, 0.0114],
        [0.0161, 0.0159, 0.0156,  ..., 0.0125, 0.0123, 0.0120],
        [0.0164, 0.0159, 0.0198,  ..., 0.0070, 0.0125, 0.0098],
        ...,
        [0.0161, 0.0161, 0.0118,  ..., 0.0185, 0.0130, 0.0127],
        [0.0161, 0.0161, 0.0156,  ..., 0.0130, 0.0125, 0.0133],
        [0.0159, 0.0159, 0.0159,  ..., 0.0114, 0.0118, 0.0112]],
       requires_grad=True) 

MatUx: 
 has nan? True 
tensor([[ 2.6441e-04, -2.6441e-04, -2.5601e-04,  ...,  4.6311e-04,
         -1.2946e-03, -1.2946e-03],
        [-2.5601e-04, -2.4802e-04,  2.4802e-04,  ..., -1.5432e-04,
         -2.9749e-04, -2.9749e-04],
        [-5.2042e-04,  1.0000e-10,  5.2043e-04,  ...,  1.5432e-04,
         -2.6961e-03, -2.6961e-03],
        ...,
        [ 1.0000e-10,  1.0000e-10, -2.5601e-04,  ..., -1.7088e-04,
         -3.2878e-04, -3.2878e-04],
        [ 1.0000e-10, -5.0403e-04,  5.0403e-04,  ..., -4.8701e-04,
          8.3333e-04,  8.3333e-04],
        [ 1.0000e-10,  1.0000e-10,  2.5602e-04,  ...,  4.0107e-04,
         -5.2875e-04, -5.2875e-04]], grad_fn=<SelectBackward>)  








test_counter in loss_omega_mat(): 455
test_counter in loss_omega_mat(): 910
test_counter in loss_omega_mat(): 1365
test_counter in loss_omega_mat(): 1820
test_counter in loss_omega_mat(): 2275
test_counter in loss_omega_mat(): 2730
test_counter in loss_omega_mat(): 3185
mat_omega_topk has nan? True 

mat_duij has nan? True 

mat_uij has nan? True 

mat_omega_topk: tensor([[[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.9457, 0.9454, 0.9454,  ..., 0.8854, 0.8005, 0.8002],
         [0.9457, 0.9455, 0.9454,  ..., 0.8897, 0.8004, 0.8000],
         [0.9456, 0.9455, 0.9400,  ..., 0.8816, 0.8003, 0.8001]],

        [[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.9457, 0.9456, 0.9453,  ..., 0.8942, 0.8004, 0.8004],
         [0.9457, 0.9456, 0.9456,  ..., 0.8942, 0.8004, 0.8002],
         [0.9457, 0.9456, 0.9456,  ..., 0.8853, 0.8005, 0.8003]],

        [[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.9456, 0.9456, 0.9455,  ..., 0.8943, 0.8005, 0.8005],
         [0.9458, 0.9457, 0.9456,  ..., 0.8943, 0.8005, 0.8005],
         [0.9458, 0.9458, 0.9457,  ..., 0.8831, 0.8006, 0.8005]],

        ...,

        [[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.9458, 0.9458, 0.9455,  ..., 0.8944, 0.8005, 0.8005],
         [0.9458, 0.9457, 0.9455,  ..., 0.8944, 0.8004, 0.8003],
         [0.9457, 0.9456, 0.9455,  ..., 0.8800, 0.8004, 0.8004]],

        [[   nan,    nan,    nan,  ...,    nan, 1.0000, 0.9451],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.9458, 0.9458, 0.9457,  ..., 0.8943, 0.8005, 0.8004],
         [0.9458, 0.9458, 0.9456,  ..., 0.8941, 0.8005, 0.8004],
         [0.9456, 0.9456, 0.9456,  ..., 0.8822, 0.8002, 0.8002]],

        [[   nan,    nan,    nan,  ..., 0.9446, 0.9440, 0.9364],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.9457, 0.9456, 0.9455,  ..., 0.8920, 0.8002, 0.8001],
         [0.9457, 0.9456, 0.9455,  ..., 0.8903, 0.8002, 0.8002],
         [0.9456, 0.9456, 0.9426,  ..., 0.8820, 0.8001, 0.7999]]],
       grad_fn=<SliceBackward>) 

mat_duij: tensor([[[2.0263e-07,        nan, 4.8318e-07,  ...,        nan,
                 nan, 4.8257e-07],
         [       nan,        nan,        nan,  ..., 2.1563e-09,
                 nan,        nan],
         [3.0684e-05, 8.0454e-06, 1.1783e-05,  ..., 7.4414e-07,
          2.9524e-05, 2.2726e-05],
         ...,
         [7.7300e-09, 8.7734e-07, 1.7891e-06,  ..., 2.5066e-07,
          1.4893e-06, 7.0459e-07],
         [6.3994e-08, 1.4363e-07, 1.6595e-06,  ..., 1.3557e-06,
          1.2109e-08, 9.1306e-08],
         [2.4960e-07, 5.4409e-08, 6.8411e-08,  ..., 5.9913e-07,
          4.0118e-08, 1.4416e-06]],

        [[8.9413e-07,        nan, 9.9828e-08,  ..., 9.8882e-08,
                 nan,        nan],
         [       nan,        nan, 4.1062e-07,  ..., 4.5711e-06,
                 nan,        nan],
         [1.5416e-05, 1.1149e-05, 1.3263e-05,  ..., 7.5461e-07,
          3.1739e-07, 5.2029e-07],
         ...,
         [9.3117e-08, 5.4670e-07, 1.1350e-06,  ..., 2.2409e-06,
          1.3026e-07, 1.1745e-07],
         [9.1744e-08, 4.8831e-07, 4.9032e-07,  ..., 9.6750e-10,
          3.3419e-08, 3.8120e-09],
         [5.3919e-08, 1.0632e-06, 7.0435e-07,  ..., 3.4026e-08,
          4.8263e-07, 1.0217e-07]],

        [[2.4477e-06,        nan, 1.9567e-09,  ..., 7.4740e-08,
                 nan,        nan],
         [       nan,        nan, 4.2796e-08,  ..., 5.9889e-06,
                 nan,        nan],
         [6.4709e-07, 1.1457e-06, 7.6232e-07,  ..., 1.0289e-07,
          6.9627e-10, 7.6078e-08],
         ...,
         [1.7463e-06, 2.5004e-07, 2.9534e-08,  ..., 5.7761e-07,
          3.8210e-06, 2.5818e-08],
         [3.6772e-07, 3.1801e-07, 4.2361e-07,  ..., 3.0036e-07,
          4.2967e-07, 5.1499e-10],
         [4.6831e-08, 3.7019e-08, 1.9955e-07,  ..., 4.0120e-07,
          1.2032e-06, 7.9067e-07]],

        ...,

        [[       nan, 9.4792e-07, 1.0901e-06,  ..., 7.2679e-08,
                 nan, 1.0408e-07],
         [3.6158e-06,        nan,        nan,  ...,        nan,
          2.4552e-06, 1.2718e-05],
         [7.5937e-06, 2.3190e-06, 1.4918e-09,  ..., 9.5958e-06,
          1.1590e-06, 3.1918e-08],
         ...,
         [4.3030e-08, 3.0882e-08, 2.3821e-07,  ..., 8.4129e-07,
          1.0790e-06, 6.9646e-07],
         [4.4540e-09, 1.7941e-08, 7.0599e-08,  ..., 5.6277e-08,
          4.5236e-07, 1.3254e-09],
         [7.6230e-08, 2.8778e-07, 3.3944e-08,  ..., 1.8221e-08,
          4.0575e-08, 4.1523e-07]],

        [[4.2252e-07, 1.1100e-06, 1.2610e-05,  ...,        nan,
          0.0000e+00, 3.5763e-06],
         [2.7636e-06, 1.9692e-06, 2.7801e-06,  ...,        nan,
                 nan,        nan],
         [1.0055e-05, 9.5738e-08, 2.0416e-06,  ..., 5.7952e-06,
          1.2937e-07, 2.1344e-06],
         ...,
         [3.5000e-08, 1.8052e-08, 5.4357e-07,  ..., 9.4170e-08,
          1.1728e-07, 4.1422e-06],
         [1.3484e-07, 7.0432e-07, 1.4577e-07,  ..., 2.4868e-07,
          3.5312e-06, 1.7292e-08],
         [1.6857e-08, 6.8083e-07, 2.4703e-09,  ..., 1.2645e-06,
          2.3945e-07, 8.3166e-07]],

        [[7.6389e-07,        nan, 2.6902e-05,  ..., 5.9070e-08,
          2.7892e-06, 9.2978e-08],
         [7.8103e-06,        nan,        nan,  ..., 5.1889e-06,
          1.1414e-07, 5.7066e-06],
         [1.4375e-06,        nan, 3.1305e-06,  ...,        nan,
          5.6614e-06, 3.0109e-06],
         ...,
         [2.5547e-08, 8.5035e-07, 6.9983e-07,  ..., 6.4689e-07,
          7.5741e-07, 1.6555e-07],
         [5.0289e-08, 9.7006e-08, 3.3596e-08,  ..., 2.0194e-07,
          4.0129e-07, 2.1444e-07],
         [8.1370e-08, 1.3468e-09, 1.2865e-08,  ..., 2.0883e-07,
          1.9069e-10, 4.1990e-08]]], grad_fn=<CopySlices>) 

mat_uij: tensor([[[8.7408e-04, 9.2958e-04, 6.3257e-04,  ..., 3.0888e-04,
          5.1679e-04, 4.2148e-04],
         [9.5127e-04, 4.9458e-04, 3.9453e-04,  ..., 1.5458e-04,
          5.7171e-04, 1.9540e-04],
         [9.4876e-04, 7.2160e-04, 5.3538e-04,  ..., 3.0191e-03,
          3.4403e-03, 4.1583e-03],
         ...,
         [6.0852e-04, 9.1156e-04, 1.0788e-03,  ..., 1.0025e-04,
          7.1844e-04, 5.9512e-04],
         [5.6610e-04, 3.5538e-04, 1.0788e-03,  ..., 6.3215e-04,
          8.2291e-04, 4.3323e-04],
         [5.6039e-04, 3.5538e-04, 5.5586e-04,  ..., 9.2599e-04,
          1.7154e-04, 7.5966e-04]],

        [[1.6743e-04, 3.4381e-04, 8.1613e-04,  ..., 8.4075e-05,
          7.9342e-04, 1.4617e-04],
         [9.0765e-04, 1.0866e-03, 1.1135e-03,  ..., 8.1410e-04,
          4.4125e-04, 9.6895e-04],
         [3.7157e-03, 3.6160e-03, 3.5262e-03,  ..., 2.4586e-04,
          2.1987e-04, 5.7044e-04],
         ...,
         [6.0852e-04, 8.4021e-04, 4.2660e-04,  ..., 8.5601e-04,
          1.0463e-04, 1.9764e-04],
         [5.6610e-04, 5.4239e-04, 3.3045e-04,  ..., 2.3491e-04,
          4.7595e-04, 2.7615e-04],
         [7.2891e-04, 5.6039e-04, 3.3045e-04,  ..., 1.2364e-03,
          1.9138e-04, 5.7193e-04]],

        [[4.0091e-04, 9.9968e-04, 2.6192e-04,  ..., 6.8803e-04,
          7.6476e-04, 3.2486e-04],
         [5.9361e-04, 8.1536e-04, 5.8877e-04,  ..., 1.1885e-04,
          3.8038e-04, 8.7149e-04],
         [3.9123e-04, 2.7886e-04, 4.3432e-04,  ..., 4.7939e-04,
          7.7511e-04, 9.4474e-04],
         ...,
         [6.7909e-04, 8.4021e-04, 9.4103e-04,  ..., 4.1374e-04,
          5.0634e-04, 5.8962e-04],
         [5.3017e-04, 4.7642e-04, 5.4239e-04,  ..., 2.2145e-04,
          5.0095e-04, 5.2943e-04],
         [8.3130e-04, 5.3017e-04, 7.2891e-04,  ..., 7.7266e-04,
          6.0213e-04, 5.8962e-04]],

        ...,

        [[2.1183e-04, 4.9041e-04, 1.2667e-03,  ..., 9.2876e-04,
          1.2503e-03, 1.4519e-03],
         [1.1088e-03, 1.0135e-03, 6.5793e-04,  ..., 1.6650e-03,
          2.1721e-03, 7.6680e-04],
         [1.4632e-03, 1.8489e-03, 1.8611e-03,  ..., 1.7417e-03,
          1.9323e-03, 1.5134e-03],
         ...,
         [8.9906e-04, 7.3566e-04, 1.4017e-03,  ..., 2.1261e-04,
          1.1032e-03, 4.3948e-04],
         [9.3029e-04, 8.0033e-04, 7.2769e-04,  ..., 2.0186e-04,
          7.0947e-04, 1.0377e-03],
         [5.5174e-04, 6.3154e-04, 8.0763e-04,  ..., 9.6418e-04,
          1.8859e-04, 3.8879e-04]],

        [[9.5219e-04, 7.3379e-04, 1.0202e-03,  ..., 9.9742e-04,
          0.0000e+00, 1.5187e-03],
         [3.5072e-03, 2.7008e-03, 2.4704e-03,  ..., 2.1016e-03,
          3.4307e-03, 3.0910e-03],
         [2.5487e-03, 2.7816e-03, 2.3520e-03,  ..., 1.6814e-03,
          2.2675e-03, 1.9135e-03],
         ...,
         [8.9906e-04, 5.3360e-04, 8.7219e-04,  ..., 6.9845e-04,
          1.1420e-03, 7.1753e-04],
         [5.3360e-04, 9.3029e-04, 7.5173e-04,  ..., 5.0072e-04,
          2.3327e-04, 3.7783e-04],
         [7.5173e-04, 5.8282e-04, 6.3154e-04,  ..., 1.0265e-04,
          9.1905e-04, 9.3437e-04]],

        [[1.1358e-03, 1.0166e-03, 1.1167e-03,  ..., 5.6128e-04,
          2.1257e-04, 2.9413e-03],
         [1.1249e-03, 2.3850e-03, 2.8204e-03,  ..., 1.5489e-03,
          1.5655e-03, 2.0811e-03],
         [8.1985e-04, 1.4239e-03, 6.3213e-04,  ..., 1.5340e-03,
          1.5855e-03, 4.6177e-04],
         ...,
         [2.4039e-04, 6.3626e-04, 7.9410e-04,  ..., 6.9782e-04,
          2.7690e-04, 2.9519e-04],
         [2.4039e-04, 2.7585e-04, 2.7555e-04,  ..., 7.3651e-04,
          4.9092e-04, 7.1325e-04],
         [5.8282e-04, 2.7585e-04, 9.9990e-04,  ..., 1.3156e-03,
          2.9519e-04, 4.5703e-04]]], grad_fn=<CopySlices>) 

loss = loss1 + lambda*loss2
loss1:nan loss2:nan
t:6, Finish constructing loss
require grad ? True True False
MatD grad and MatUx grad: torch.Size([37, 123]) torch.Size([37, 123, 2]) 

Grads has nan? MatD.grad: True 	MatU.grad: True

Where is nan? 
MatD.grad nan: tensor([[ 0,  2],
        [ 0,  3],
        [ 0,  4],
        ...,
        [36, 77],
        [36, 78],
        [36, 79]]) 
MatU.grad nan: tensor([[ 1,  4,  0],
        [ 1,  4,  1],
        [ 1,  5,  0],
        ...,
        [33, 73,  1],
        [33, 74,  0],
        [33, 74,  1]])

MatD.grad: tensor([[ 0.0000,  0.0000,     nan,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,     nan,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,     nan,  ...,  0.0217,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,     nan,  ..., -0.0446,  0.0000,  0.0000],
        [ 0.0000,  0.0000,     nan,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]) 

MatU.grad[0:10,0:10]: tensor([[[0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.]],

        [[0., 0.],
         [0., 0.],
         [0., 0.],
         [0., 0.],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[0., 0.],
         [0., 0.],
         [0., 0.],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[0., 0.],
         [0., 0.],
         [0., 0.],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[0., 0.],
         [0., 0.],
         [0., 0.],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[0., 0.],
         [0., 0.],
         [0., 0.],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[0., 0.],
         [0., 0.],
         [0., 0.],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[0., 0.],
         [0., 0.],
         [0., 0.],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[0., 0.],
         [0., 0.],
         [0., 0.],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[0., 0.],
         [0., 0.],
         [0., 0.],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]]]) 

MatU.grad[10:20,10:20]: tensor([[[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]]]) 

MatU.grad[20:30,20:30]:  tensor([[[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]],

        [[nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan],
         [nan, nan]]]) 

t:6, loss.item(): nan
Optimized result :
MatD: 
has nan? True 
tensor([[0.0161, 0.0164,    nan,  ..., 0.0122, 0.0127, 0.0114],
        [0.0161, 0.0159,    nan,  ..., 0.0125, 0.0123, 0.0120],
        [0.0164, 0.0159,    nan,  ..., 0.0062, 0.0125, 0.0098],
        ...,
        [0.0161, 0.0161,    nan,  ..., 0.0195, 0.0130, 0.0127],
        [0.0161, 0.0161,    nan,  ..., 0.0130, 0.0125, 0.0133],
        [0.0159, 0.0159, 0.0159,  ..., 0.0114, 0.0118, 0.0112]],
       requires_grad=True) 

MatUx: 
 has nan? True 
tensor([[ 2.6441e-04, -2.6441e-04, -2.5601e-04,  ...,  4.6311e-04,
         -1.2946e-03, -1.2946e-03],
        [-2.5601e-04, -2.4802e-04,  2.4802e-04,  ..., -1.5432e-04,
         -2.9749e-04, -2.9749e-04],
        [-5.2042e-04,  1.0000e-10,  5.2043e-04,  ...,  1.5432e-04,
         -2.6961e-03, -2.6961e-03],
        ...,
        [ 1.0000e-10,  1.0000e-10, -2.5601e-04,  ..., -1.7088e-04,
         -3.2878e-04, -3.2878e-04],
        [ 1.0000e-10, -5.0403e-04,  5.0403e-04,  ..., -4.8701e-04,
          8.3333e-04,  8.3333e-04],
        [ 1.0000e-10,  1.0000e-10,  2.5602e-04,  ...,  4.0107e-04,
         -5.2875e-04, -5.2875e-04]], grad_fn=<SelectBackward>)  








test_counter in loss_omega_mat(): 455
test_counter in loss_omega_mat(): 910
test_counter in loss_omega_mat(): 1365
test_counter in loss_omega_mat(): 1820
test_counter in loss_omega_mat(): 2275
test_counter in loss_omega_mat(): 2730
test_counter in loss_omega_mat(): 3185
mat_omega_topk has nan? True 

mat_duij has nan? True 

mat_uij has nan? True 

mat_omega_topk: tensor([[[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.9457, 0.9457, 0.9455,  ..., 0.8839, 0.8006, 0.8003],
         [0.9456, 0.9456, 0.9455,  ..., 0.8890, 0.8001, 0.8000],
         [0.9456, 0.9455, 0.9383,  ..., 0.8755, 0.8001, 0.7997]],

        [[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.9457, 0.9457, 0.9457,  ..., 0.8944, 0.8006, 0.8005],
         [0.9457, 0.9457, 0.9457,  ..., 0.8942, 0.8005, 0.8004],
         [0.9457, 0.9456, 0.9455,  ..., 0.8808, 0.8005, 0.8002]],

        [[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.9458, 0.9458, 0.9458,  ..., 0.8946, 0.8006, 0.8006],
         [0.9459, 0.9458, 0.9458,  ..., 0.8945, 0.8006, 0.8006],
         [0.9459, 0.9459, 0.9456,  ..., 0.8807, 0.8006, 0.8006]],

        ...,

        [[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.9457, 0.9457, 0.9456,  ..., 0.8946, 0.8006, 0.8006],
         [0.9458, 0.9458, 0.9456,  ..., 0.8946, 0.8005, 0.8005],
         [0.9458, 0.9457, 0.9456,  ..., 0.8772, 0.8005, 0.8004]],

        [[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.9457, 0.9457, 0.9456,  ..., 0.8945, 0.8005, 0.8005],
         [0.9458, 0.9457, 0.9457,  ..., 0.8942, 0.8006, 0.8005],
         [0.9458, 0.9457, 0.9457,  ..., 0.8788, 0.8004, 0.8004]],

        [[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.9456, 0.9454, 0.9453,  ..., 0.8907, 0.8003, 0.8002],
         [0.9456, 0.9454, 0.9454,  ..., 0.8890, 0.8003, 0.8002],
         [0.9457, 0.9454, 0.9416,  ..., 0.8776, 0.8003, 0.8000]]],
       grad_fn=<SliceBackward>) 

mat_duij: tensor([[[       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         ...,
         [3.2543e-10, 7.0046e-07, 7.5917e-07,  ..., 3.8985e-07,
          9.6605e-07, 1.3541e-06],
         [1.0092e-07, 6.6406e-08, 1.0295e-06,  ..., 5.1441e-07,
          1.4317e-08, 1.0306e-07],
         [7.9832e-09, 3.5226e-07, 5.5075e-07,  ..., 8.0546e-08,
          2.2832e-06, 1.3725e-07]],

        [[       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         ...,
         [1.5098e-07, 3.9740e-07, 4.1253e-08,  ..., 6.3257e-07,
          1.6784e-08, 5.9405e-07],
         [9.5466e-09, 1.0944e-07, 3.4125e-07,  ..., 1.2745e-06,
          3.4760e-07, 5.8290e-07],
         [5.7252e-07, 4.2339e-08, 1.0451e-06,  ..., 6.7154e-07,
          1.1767e-06, 1.5197e-07]],

        [[       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         ...,
         [1.2062e-06, 1.1097e-08, 1.6521e-06,  ..., 1.0762e-08,
          1.9232e-06, 9.4806e-08],
         [2.2011e-08, 4.4483e-07, 2.6200e-09,  ..., 1.0756e-07,
          6.6344e-08, 1.6972e-08],
         [1.3033e-07, 6.3781e-10, 1.2646e-11,  ..., 5.1125e-09,
          4.1386e-08, 7.6205e-07]],

        ...,

        [[       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         ...,
         [4.8722e-09, 1.3884e-06, 9.7524e-08,  ..., 1.3606e-06,
          1.1561e-06, 8.5465e-08],
         [5.5202e-07, 1.6788e-07, 3.0837e-07,  ..., 9.2110e-07,
          4.7603e-08, 2.0282e-09],
         [3.4982e-07, 7.9835e-12, 1.2772e-07,  ..., 1.0897e-09,
          8.8669e-08, 1.4962e-07]],

        [[       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         ...,
         [1.6108e-07, 1.0480e-06, 3.4153e-12,  ..., 4.0892e-07,
          9.3517e-08, 2.4014e-06],
         [8.2540e-09, 4.1978e-08, 7.0669e-10,  ..., 3.4325e-07,
          1.7807e-06, 1.1636e-06],
         [1.0516e-07, 1.3891e-07, 2.0592e-07,  ..., 4.4307e-07,
          1.1791e-06, 1.5307e-06]],

        [[       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan,  ...,        nan,
                 nan,        nan],
         ...,
         [3.4114e-09, 4.2284e-07, 7.0973e-07,  ..., 2.5248e-07,
          2.6792e-07, 3.5889e-08],
         [2.4490e-08, 4.6254e-08, 3.4030e-08,  ..., 2.4452e-08,
          2.0827e-07, 1.1291e-06],
         [1.2034e-07, 8.8509e-10, 2.4948e-10,  ..., 1.2634e-06,
          5.5089e-07, 1.1563e-07]]], grad_fn=<CopySlices>) 

mat_uij: tensor([[[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.0008, 0.0009, 0.0009,  ..., 0.0006, 0.0007, 0.0008],
         [0.0004, 0.0009, 0.0009,  ..., 0.0002, 0.0007, 0.0007],
         [0.0004, 0.0007, 0.0005,  ..., 0.0006, 0.0010, 0.0004]],

        [[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.0005, 0.0008, 0.0003,  ..., 0.0005, 0.0004, 0.0005],
         [0.0007, 0.0005, 0.0002,  ..., 0.0006, 0.0006, 0.0004],
         [0.0007, 0.0003, 0.0007,  ..., 0.0010, 0.0007, 0.0005]],

        [[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.0003, 0.0007, 0.0006,  ..., 0.0008, 0.0005, 0.0002],
         [0.0005, 0.0007, 0.0002,  ..., 0.0007, 0.0006, 0.0006],
         [0.0005, 0.0004, 0.0003,  ..., 0.0010, 0.0002, 0.0007]],

        ...,

        [[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.0004, 0.0009, 0.0011,  ..., 0.0007, 0.0004, 0.0006],
         [0.0009, 0.0004, 0.0010,  ..., 0.0003, 0.0007, 0.0009],
         [0.0010, 0.0006, 0.0010,  ..., 0.0013, 0.0004, 0.0005]],

        [[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.0009, 0.0012, 0.0012,  ..., 0.0004, 0.0013, 0.0006],
         [0.0009, 0.0010, 0.0012,  ..., 0.0003, 0.0005, 0.0002],
         [0.0010, 0.0008, 0.0010,  ..., 0.0002, 0.0004, 0.0005]],

        [[   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         [   nan,    nan,    nan,  ...,    nan,    nan,    nan],
         ...,
         [0.0005, 0.0004, 0.0004,  ..., 0.0006, 0.0006, 0.0005],
         [0.0004, 0.0004, 0.0004,  ..., 0.0008, 0.0005, 0.0005],
         [0.0008, 0.0004, 0.0005,  ..., 0.0010, 0.0002, 0.0004]]],
       grad_fn=<CopySlices>) 

loss = loss1 + lambda*loss2
loss1:nan loss2:nan
t:7, Finish constructing loss
